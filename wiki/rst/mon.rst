[[PageOutline(1-5, Contents)]]

== DBMS ==

table rename script {{{ select ‘alter
index’\||INDEX_SCHEMA|\|‘.’\||INDEX_NAME \|\|’ rename to
‘\||INDEX_NAME|\|’\_OLD;’ from DBA_INDEXES where table_schema = ‘TPCC’
and table_name = ‘BMSQL_OORDER’;

select ‘alter constraint’\||CONSTRAINT_SCHEMA|\|‘.’\||CONSTRAINT_NAME
\|\|’ rename to ‘\|\| CONSTRAINT_NAME \|\|’\_OLD;’ from DBA_CONSTRAINTS
where table_schema = ‘TPCC’ and table_name = ‘BMSQL_OORDER’;

select ‘alter index’\||TABLE_SCHEMA|\|‘.’\||TABLE_NAME \|\|’ rename to
‘\||TABLE_NAME|\|’\_OLD;’ from DBA_CLUSTER_TABLES where table_schema =
‘TPCC’ and table_name = ‘BMSQL_OORDER’; }}}

{{{ BLOCKING_AGABLE_STMT_SCN

select s.cluster_member_name ,s.id session_id ,s.serial session_serial
,s.program ,s.client_process ,s.server_process ,s.osuser
,s.global_connection ,x.id stmt_id ,x.view_scn ,x.executions
,x.TOTAL_EXEC_TIME ,x.sql_text ,x.start_time from
x\ *statement*\ @\ *GLOBAL*\ [*IGNORE*\ :sub:`I`\ *NACTIVE*\ :sub:`M`\ *EMBER*]\ *x*, *x*\ session@GLOBAL[IGNORE_INACTIVE_MEMBER]
s ,x$agable_info@GLOBAL[IGNORE_INACTIVE_MEMBER] a where
x.session_id=s.id and x.session_id=a.SESSION_ID_BLOCKING_AGABLE_STMT_SCN
and x.cluster_member_name = a.cluster_member_name and
x.cluster_member_name = s.cluster_member_name and x.view_scn
!=‘-1.-1.-1’;

select s.cluster_member_name ,s.id session_id ,s.serial session_serial
,s.program ,s.client_process ,s.server_process ,s.osuser
,s.global_connection ,x.id stmt_id ,x.view_scn ,x.executions
,x.TOTAL_EXEC_TIME ,x.sql_text ,x.start_time from
x\ *statement*\ @\ *GLOBAL*\ [*IGNORE*\ :sub:`I`\ *NACTIVE*\ :sub:`M`\ *EMBER*]\ *x*, *x*\ session@GLOBAL[IGNORE_INACTIVE_MEMBER]
s ,x$agable_info@GLOBAL[IGNORE_INACTIVE_MEMBER] a where
x.session_id=s.id and x.session_id=a.SESSION_ID_BLOCKING_AGABLE_VIEW_SCN
and x.cluster_member_name = a.cluster_member_name and
x.cluster_member_name = s.cluster_member_name and x.view_scn
!=‘-1.-1.-1’;

OFFLINE TABLE MEMBER

select MEMBER_NAME, table_name from ALL_TAB_PLACE where MEMBER_OFFLINE
is true order by 2,1;

OFFLINE TABLE SIZE

select \* from tech_table where tab_name in (select distinct table_name
from ALL_TAB_PLACE where MEMBER_OFFLINE is true ) order by 7 desc;

alter table rebalance

select ‘alter table’\|\| tab_name \|\| ’ rebalance;’ from (select
distinct table_name tab_name from ALL_TAB_PLACE where MEMBER_OFFLINE is
true);

cache 에서 플랜 찾기

select sql_string from X$SQL_CACHE where sql_string like ‘%INSERT INTO
DEDUCTION_RR%’ limit 1;

transaction 수행 시간

| select cluster_membeR_name ,session_id,
  datediff(SECOND,BEGIN_TIME,systimestamp)
| from x$transaction where datediff(SECOND,BEGIN_TIME,systimestamp) > 10
  order by BEGIN_TIME;

long transaction 수행 세션정보

select
cluster_member_name,program_name,time,client_address,PROCESS_ID,s.session_id
from
gv\ *sessions*, (*selectcluster*\ :sub:`m`\ *embeR*\ :sub:`n`\ *ame*, *session*\ :sub:`i`\ *d*, *datediff*\ (*SECOND*, *BEGIN*\ :sub:`T`\ *IME*, *systimestamp*)\ *astimefromx*\ transaction
where datediff(SECOND,BEGIN_TIME,systimestamp) > 10 order by BEGIN_TIME
) a where s.session_id = a.session_id and a.cluster_member_name =
s.ORIGIN_MEMBER_NAME and program_name != ‘cluster peer’ order by time
desc ;

| select sql_text, sum(executions) , sum(TOTAL_EXEC_TIME), trunc(
  sum(TOTAL_EXEC_TIME)/sum(executions))
| from x$statement@G4N1 where SESSION_ID=4312 and executions !=0 group
  by sql_text order by 2 desc;

| select sql_text, sum(executions) , sum(TOTAL_EXEC_TIME), trunc(
  sum(TOTAL_EXEC_TIME)/sum(executions))
| from
  x\ *statement*\ @\ *localwhereSESSION*\ :sub:`I`\ *Din*\ (*selects*.\ *session*\ :sub:`i`\ *dfromgv*\ session@local
  s ,
| ( select cluster_membeR_name ,session_id,
  datediff(SECOND,BEGIN_TIME,systimestamp) as time from
  x$transaction@local where datediff(SECOND,BEGIN_TIME,systimestamp) >
  10 order by BEGIN_TIME ) a where s.session_id = a.session_id and
  a.cluster_member_name = s.ORIGIN_MEMBER_NAME and program_name !=
  ‘cluster peer’ order by time desc
| limit 1 ) and executions !=0 group by sql_text order by 2 desc ;

session count

select clusteR_member_name, program, count(*) from
x\ *session*\ @\ *global*\ [*ignore*\ :sub:`i`\ *nactive*\ :sub:`m`\ *ember*]\ *wheretop*\ :sub:`l`\ *ayer* = 13\ *groupbycluster*\ :sub:`m`\ *ember*\ :sub:`n`\ *ame*, *programorderby*\ 2, 1; *selectprogram*, *address*, *CLIENT*\ :sub:`P`\ *ROCESS*, *count*\ (\*)\ *fromx*\ session
where top_layer = 13 group by program, address, client_process having
count(*) < 8 order by 1,2,3 ;

non globalconnection session

select clusteR_member_name, program, address, count(\*) from x$session
where global_connection is false and top_layer = 13 group by
clusteR_member_name, program, address

프로그램 sql 검색

SELECT ‘“’ \|\| SI.PROGRAM \|\|‘“\|”’\|\| XX.SQL_TEXT \|\|‘“\|”’\|\|
sum(XX.EXECUTIONS) \|\|‘“\|”’\|\| sum(XX.TOTAL_EXEC_TIME) \|\|‘“\|”’\|\|
‘asdfasdfasdf’ \|\| ‘“’ FROM X\ *STATEMENTXX*, *X*\ SESSION SI WHERE
XX.CLUSTER_MEMBER_NAME = SI.CLUSTER_MEMBER_NAME AND SI.ID=XX.SESSION_ID
AND SI.PROGRAM like ‘%RBP\_%’ GROUP BY SI.PROGRAM, XX.SQL_TEXT;

SELECT ‘“’ \|\| SI.PROGRAM \|\|‘“\|”’\|\| XX.SQL_TEXT \|\|‘“\|”’\|\|
sum(XX.EXECUTIONS) \|\|‘“\|”’\|\| sum(XX.TOTAL_EXEC_TIME) \|\|‘“\|”’\|\|
‘asdfasdfasdf’ \|\| ‘“’ FROM
X\ *STATEMENT*\ @\ *localXX*, *X*\ SESSION@local SI WHERE
XX.CLUSTER_MEMBER_NAME = SI.CLUSTER_MEMBER_NAME AND SI.ID=XX.SESSION_ID
AND XX.SQL_TEXT LIKE ‘%CUST_GRD%’ GROUP BY SI.PROGRAM, XX.SQL_TEXT;

Client version 검색

select DBC_TYPE, VERSION, count(\*) cnt from x$session@local group by
DBC_TYPE, VERSION;

select cluster_member_name, PROGRAM,DBC_TYPE,OSUSER, VERSION, count(\*)
cnt from x$session where DBC_TYPE =‘JDBC’ group by cluster_member_name,
PROGRAM,DBC_TYPE,OSUSER,version order by 2,5;

SESS_SSA

select cluster_member_name, name, sum(value) from X$KN_SESS_STAT group
by name ,cluster_member_name order by 2,1;

ssa_program top

select ks.cluster_membeR_name,ss.program, trunc(sum(value)/1024/1024) as
TOTAL_MB,count(\*) from
x\ *kn*\ :sub:`s`\ *ess*\ :sub:`s`\ *tatks*, *x*\ session ss where
ks.cluster_membeR_name = ss. Cluster_membeR_name and ks.id = ss.id and
ks.name = ‘SESSION_MEM_TOTAL_SIZE’ –and ss.top_layer = 13 group by
ks.cluster_membeR_name,ss.program order by 3 desc;

select ks.cluster_membeR_name,ss.program, trunc(sum(value)/1024/1024) as
TOTAL_MB,count(\*) from
x\ *kn*\ :sub:`s`\ *ess*\ :sub:`s`\ *tatks*, *x*\ session ss where
ks.cluster_membeR_name = ss. Cluster_membeR_name and ks.id = ss.id and
ks.name = ‘SESSION_MEM_TOTAL_SIZE’ and ss.top_layer = 13 group by
ks.cluster_membeR_name,ss.program order by 3 desc;

total ssa

select ks.cluster_membeR_name, trunc(sum(value)/1024/1024) as
TOTAL_MB,count(\*) from
x\ *kn*\ :sub:`s`\ *ess*\ :sub:`s`\ *tatks*, *x*\ session ss where
ks.cluster_membeR_name = ss. Cluster_membeR_name and ks.id = ss.id and
ks.name = ‘SESSION_MEM_TOTAL_SIZE’ –and program != ‘cluster peer’ group
by ks.cluster_membeR_name order by 3 desc;

| select
  a.program,a.address,a.CLIENT_PROCESS,a.SERVER_PROCESS,b.TOTAL_MB,b.cnt
  from
  x\ *sessiona*, (*selectks*.\ *cluster*\ :sub:`m`\ *embeR*\ :sub:`n`\ *ameASmemberdd*, *ss*.\ *program*, *b*.\ *NAMEDNAME*, *ss*.\ *DRIVER*\ :sub:`S`\ *ESSION*\ :sub:`I`\ *DDID*, *trunc*\ (*sum*\ (*value*)/1024/1024)\ *asTOTAL*\ :sub:`M`\ *B*, *count*\ (\*)\ *cntfromx*\ kn_sess_stat
  ks, x$session ss,tech_cluster b where ks.cluster_membeR_name =
  ss.Cluster_membeR_name and ks.id = ss.id and ks.name =
  ‘SESSION_MEM_TOTAL_SIZE’ and ss.program = ‘cluster peer’ and
  ss.DRIVER_MEMBER_POS = b.M_POS group by
  ks.cluster_membeR_name,ss.program,b.NAME , ss.DRIVER_SESSION_ID
| order by 5 desc ) b where a.cluster_member_name = b.dname and a.id =
  b.did order by 5 desc ;

| select a.program,sum(b.TOTAL_MB),sum(b.cnt) from
  x\ *sessiona*, (*selectks*.\ *cluster*\ :sub:`m`\ *embeR*\ :sub:`n`\ *ameASmemberdd*, *ss*.\ *program*, *b*.\ *NAMEDNAME*, *ss*.\ *DRIVER*\ :sub:`S`\ *ESSION*\ :sub:`I`\ *DDID*, *trunc*\ (*sum*\ (*value*)/1024/1024)\ *asTOTAL*\ :sub:`M`\ *B*, *count*\ (\*)\ *cntfromx*\ kn_sess_stat
  ks, x$session ss,tech_cluster b where ks.cluster_membeR_name =
  ss.Cluster_membeR_name and ks.id = ss.id and ks.name =
  ‘SESSION_MEM_TOTAL_SIZE’ and ss.program = ‘cluster peer’ and
  ss.DRIVER_MEMBER_POS = b.M_POS group by
  ks.cluster_membeR_name,ss.program,b.NAME , ss.DRIVER_SESSION_ID
| order by 5 desc ) b where a.cluster_member_name = b.dname and a.id =
  b.did group by a.program order by 2 desc ;

Session당 동일한 statement의 개수

select ss.id,program, substr(st.sql_text,0,50) ,count(\*) from
x\ *session*\ @\ *localss*, *x*\ statement@local st where
ss.cluster_membeR_name = st.cluster_membeR_name and ss.id =
st.session_id group by ss.id,program,st.sql_text order by 4 desc limit
50;

select \* from d$dynamic_mem_cell(‘0’)@g4n1

psa top

select cluster_member_name, trunc(sum(value)/1024/1024/1024) from
X$KN_PROC_STAT where name =‘PRIVATE_STATIC_AREA_TOTAL_SIZE’ group by
cluster_member_name order by 1,2;

’–process 별 psa 순위

select kp.cluster_member_name ,kp.name ,ke.top_layer ,kp.id
,trunc(kp.value/1024/1024) as use_mb ,xs.program ,xs.address ,xs.port
,xs.server_process ,xs.client_process from
x\ *kn*\ :sub:`p`\ *roc*\ :sub:`s`\ *tatkp*, *x*\ kn_proc_env ke,
x$session xs where kp.cluster_member_name = ke.cluster_member_name and
ke.cluster_member_name = xs.cluster_member_name and kp.id = ke.id and
ke.OS_PROC_ID=xs.server_process and kp.name =
‘PRIVATE_STATIC_AREA_TOTAL_SIZE’ and ke.top_layer = ‘GLIESE_LIBRARY’
order by use_mb desc limit 10;

’–program name 별 psa 순위

select kp.cluster_member_name ,kp.name ,trunc(sum(kp.value)/1024/1024)
as use_mb ,xs.program ,count(kp.value) from
x\ *kn*\ :sub:`p`\ *roc*\ :sub:`s`\ *tatkp*, *x*\ kn_proc_env ke,
x$session xs where kp.cluster_member_name = ke.cluster_member_name and
ke.cluster_member_name = xs.cluster_member_name and kp.id = ke.id and
ke.OS_PROC_ID=xs.server_process and kp.name =
‘PRIVATE_STATIC_AREA_TOTAL_SIZE’ and ke.top_layer = ‘GLIESE_LIBRARY’
group by kp.cluster_member_name,kp.name,xs.program order by use_mb desc;

mig sql

select ‘gloadernet sys gliese –dsn pnurtmdb01v -e -T’ \|\| TABLE_SCHEMA
\|\| ‘.’ \|\| TABLE_NAME \|\| ’ -d ’ \|\| TABLE_SCHEMA \|\| ‘.’ \|\|
TABLE_NAME \|\| ‘.dat -l’ \|\| TABLE_SCHEMA \|\| ‘.’ \|\| TABLE_NAME
\|\| ‘.log -b’ \|\| TABLE_SCHEMA \|\| ‘.’ \|\| TABLE_NAME \|\| ’.bad -F
^Cc\__Cc^ -L ^Rr\__Rr^%n -a 3000 -C 5000’ from TABLES where TABLE_NAME
like ‘T_NFW\_%’ and TABLE_NAME not like ’%_HIST’;

select ‘gloadernet sys gliese –dsn goldilocks -i -T’ \|\| TABLE_SCHEMA
\|\| ‘.’ \|\| TABLE_NAME \|\| ’ -d ’ \|\| TABLE_SCHEMA \|\| ‘.’ \|\|
TABLE_NAME \|\| ‘.dat -l’ \|\| TABLE_SCHEMA \|\| ‘.’ \|\| TABLE_NAME
\|\| ‘.log -b’ \|\| TABLE_SCHEMA \|\| ‘.’ \|\| TABLE_NAME \|\| ’.bad -F
^Cc\__Cc^ -L ^Rr\__Rr^%n -a 3000 -C 5000 -A’ from TABLES where
TABLE_NAME like ‘T_NFW\_%’ and TABLE_NAME not like ’%_HIST’;

active cluster server

select cluster_member_name, x.\* from
x$cluster_server@global[ignore_inactive_member] where status !=‘wait’;

table type

Select t.owner , t.tab_schema, t.tab_name, t.loc_use_mbyte,t.tbs_name,
loc_tbs_use_perc, lvl2(s.column_name, ’SHARD’,’CLONED’) , s.column_name
From tech_table t left outer join all_shard_key_columns s On
t.tab_schema = s.table_schema And t.tab_name = s.table_name; }}}

== cymon == {{{

추이 select GROUP_NAME, MASTER_STATE, SLAVE_STATE, REDO_LOG_FILESEQ,
REDO_LOG_BLOCKSEQ , CAPTURE_FILESEQ , CAPTURE_BLOCKSEQ , APPLY_FILESEQ ,
APPLY_BLOCKSEQ, (select value from x$sm_system_info@local where name =
‘SYSTEM_LSN’) LSN, CAPTURE_COMMIT_LSN, APPLY_COMMIT_LSN from
tpcc.CYCLONE_MONITOR_INFO order by GROUP_NAME;

gap select GROUP_NAME, MASTER_STATE, SLAVE_STATE, CAPTURE_FILESEQ -
APPLY_FILESEQ FileGap, CAPTURE_BLOCKSEQ - APPLY_BLOCKSEQ BloclGap,
CAPTURE_COMMIT_LSN - APPLY_COMMIT_LSN LsnGap from
tpcc.CYCLONE_MONITOR_INFO order by GROUP_NAME;

SELECT GROUP_NAME, MASTER_STATE, SLAVE_STATE, CAPTURE_FILESEQ -
APPLY_FILESEQ FILEGAP, CAPTURE_BLOCKSEQ - APPLY_BLOCKSEQ BLOCKGAP,
CAPTURE_COMMIT_LSN - APPLY_COMMIT_LSN LSNGAP from CYCLONE_MONITOR_INFO
order by GROUP_NAME;

SELECT GROUP_NAME, MASTER_STATE, SLAVE_STATE, CAPTURE_FILESEQ -
APPLY_FILESEQ FILEGAP, CAPTURE_COMMIT_LSN - APPLY_COMMIT_LSN LSNGAP from
CYCLONE_MONITOR_INFO order by GROUP_NAME; }}}

== gstat ==

=== result === {{{ [centos@goya-db1 ~]$ ./gstat -all

[INSTANCE] DATE DSN VERSION IS_CLUSTER DB_NAME MEMBER_NAME STATUS
ARCHIVE CHARSET CREATED_TIME STARTUP_TIME CPU_OPS NET_IOPS NET_BUFSIZE
LAST_ANALYZED ——————- ———- —————————————- ———- ———- ———– —— ———— ——-
——————- ——————- ——- ——– ———– ————- 2024-03-13 13:22:02 GOLDILOCKS
Release 21c 21.1.29 revision(abb0c318bb) TRUE GOLDILOCKS G1N1 OPEN
NOARCHIVELOG UTF8 2023-10-27 12:58:54 2024-03-05 10:36:49 NULL NULL NULL
NULL

[APPLIED PROPERTIES] DATE DSN PROPERTY_NAME SOURCE STARTUP_PHASE
MODIFIABLE DOMAIN CLUSTER_SCOPE DATA_TYPE UNIT VALUE ——————- ———-
————————————- ——- ————– ———- ——– ————- ——— —- ———– 2024-03-13 13:22:02
GOLDILOCKS CLUSTER_HEARTBEAT_INTERVAL FILE NO_MOUNT ABOVE TRUE EXTERNAL
LOCAL BIGINT NONE 1 2024-03-13 13:22:02 GOLDILOCKS
CLUSTER_HEARTBEAT_RETRY_COUNT FILE NO_MOUNT ABOVE TRUE EXTERNAL LOCAL
BIGINT NONE 2 2024-03-13 13:22:02 GOLDILOCKS
CLUSTER_SPLIT_BRAIN_RESOLUTION_POLICY FILE NO_MOUNT ABOVE TRUE EXTERNAL
LOCAL BIGINT NONE 2 2024-03-13 13:22:02 GOLDILOCKS
CLUSTER_SPLIT_BRAIN_RETRY_COUNT FILE NO_MOUNT ABOVE TRUE EXTERNAL GLOBAL
BIGINT NONE 2 2024-03-13 13:22:02 GOLDILOCKS DATABASE_INSTANCE_NAME
ENV_VAR NONE TRUE EXTERNAL LOCAL VARCHAR NONE G1N1 2024-03-13 13:22:02
GOLDILOCKS LOCATOR_QUERY_TIMEOUT FILE NO_MOUNT ABOVE TRUE EXTERNAL
GLOBAL BIGINT NONE 3 2024-03-13 13:22:02 GOLDILOCKS SHARED_SESSION FILE
MOUNT BELOW TRUE EXTERNAL LOCAL BOOLEAN NONE NO 2024-03-13 13:22:02
GOLDILOCKS TRACE_LOGGER FILE NO_MOUNT ABOVE TRUE EXTERNAL LOCAL BIGINT
NONE 2 2024-03-13 13:22:02 GOLDILOCKS TRACE_LOGGER_REMOTE_HOST FILE
NO_MOUNT ABOVE TRUE EXTERNAL LOCAL BIGINT NONE 10000000125 2024-03-13
13:22:02 GOLDILOCKS TRACE_LOGGER_REMOTE_PORT FILE NO_MOUNT ABOVE TRUE
EXTERNAL LOCAL BIGINT NONE 21470

[SSA (MB)] DATE DSN SSA_MAX_SIZE SSA_FREE_SIZE FIXED_ALLOC_SIZE
VARIABLE_TOTAL_SIZE VARIABLE_ALLOC_SIZE USED(%) ——————- ———- ———— ————-
—————- ——————- ——————- ——- 2024-03-13 13:22:02 GOLDILOCKS 728 185 222
505 321 74.588

[MEMORY ALLOCATOR] DATE DSN DESCRIPTION ID TYPE STORAGE_TYPE CATEGORY
LAYER SSA_ALLOC_COUNT DYNAMIC_ALLOC_SIZE(MB) PROPORTION(%) ——————- ———-
————————————————————— — ——- ———— ———– ——————– ————— ———————- ————-
2024-03-13 13:22:02 GOLDILOCKS parent dynamic allocator for plan cache 8
DYNAMIC PLAN SYSTEM KERNEL NULL 100 31.153 2024-03-13 13:22:02
GOLDILOCKS array memory for cluster packet 68 ARRAY SHM SYSTEM CLUSTER
NULL 54 16.822 2024-03-13 13:22:02 GOLDILOCKS parent shared memory
allocator of instant allocators 23 DYNAMIC SHM SYSTEM STORAGE_MANAGER
NULL 30 9.346 2024-03-13 13:22:02 GOLDILOCKS array memory for c/s shared
mode 100 ARRAY SHM SYSTEM SERVER_COMMUNICATION NULL 30 9.346 2024-03-13
13:22:02 GOLDILOCKS dynamic memory for Session General Purpose of Kernel
5 DYNAMIC SHM SESSION_ENV KERNEL NULL 23 7.165 2024-03-13 13:22:02
GOLDILOCKS dynamic shared memory for array allocator 64 DYNAMIC SHM
SYSTEM CLUSTER NULL 20 6.231 2024-03-13 13:22:02 GOLDILOCKS array
allocator for cluster sync response 69 ARRAY SHM SYSTEM CLUSTER NULL 14
4.361 2024-03-13 13:22:02 GOLDILOCKS shared memory for dictionary cache
47 DYNAMIC SHM SYSTEM EXECUTION_LIBRARY NULL 13 4.050 2024-03-13
13:22:02 GOLDILOCKS dynamic shared memory for commit context 65 DYNAMIC
SHM SYSTEM CLUSTER NULL 10 3.115 2024-03-13 13:22:02 GOLDILOCKS shared
memory for hash element of dictionary cache 48 DYNAMIC SHM SYSTEM
EXECUTION_LIBRARY NULL 9 2.804 2024-03-13 13:22:02 GOLDILOCKS parent
shared memory allocator for transactions 24 DYNAMIC SHM SYSTEM
STORAGE_MANAGER NULL 2 0.623 2024-03-13 13:22:02 GOLDILOCKS allocator
for resolving global deadlock 38 REGION SHM SYSTEM STORAGE_MANAGER NULL
2 0.623 2024-03-13 13:22:02 GOLDILOCKS shared memory for OPEN storage
manager 20 DYNAMIC SHM SYSTEM STORAGE_MANAGER NULL 2 0.623 2024-03-13
13:22:02 GOLDILOCKS shared memory for MOUNT dictionary cache 43 DYNAMIC
SHM SYSTEM EXECUTION_LIBRARY NULL 2 0.623 2024-03-13 13:22:02 GOLDILOCKS
shared memory for NOMOUNT dictionary cache 39 DYNAMIC SHM SYSTEM
EXECUTION_LIBRARY NULL 2 0.623 2024-03-13 13:22:02 GOLDILOCKS shared
memory for hash element of MOUNT dictionary cache 44 DYNAMIC SHM SYSTEM
EXECUTION_LIBRARY NULL 1 0.312 2024-03-13 13:22:02 GOLDILOCKS shared
memory for hash element of NOMOUNT dictionary cache 40 DYNAMIC SHM
SYSTEM EXECUTION_LIBRARY NULL 1 0.312 2024-03-13 13:22:02 GOLDILOCKS
event dynamic memory 3 DYNAMIC SHM SYSTEM KERNEL NULL 1 0.312 2024-03-13
13:22:02 GOLDILOCKS shared memory for MOUNT storage manager 19 DYNAMIC
SHM SYSTEM STORAGE_MANAGER NULL 1 0.312 2024-03-13 13:22:02 GOLDILOCKS
shared memory for journal global buffer 31 DYNAMIC SHM SYSTEM
STORAGE_MANAGER NULL 1 0.312 2024-03-13 13:22:02 GOLDILOCKS shared
memory for session 88 DYNAMIC SHM SYSTEM SESSION NULL 1 0.312 2024-03-13
13:22:02 GOLDILOCKS dynamic memory for Session Session General Purpose
of Session L 89 DYNAMIC SHM SYSTEM SESSION NULL 1 0.312 2024-03-13
13:22:02 GOLDILOCKS shared variable static area 0 DYNAMIC SHM SYSTEM
KERNEL NULL 1 0.312

[MEMORY ARRAY ALLOCATOR] DATE DSN NAME SEQ_ID INIT_SIZE(MB)
TOT_ELEM_COUNT USED_ELEM_COUNT ALLOCATED_MEM_COUNT ALLOCATED_MEM_SIZE
USED_ELEM(%) ——————- ———- ———————- —— ————- ————– ————— ——————- ——————
———— 2024-03-13 13:22:02 GOLDILOCKS CLUSTER_PACKET_SESSION 1 10 9637 6 0
0 0.062 2024-03-13 13:22:02 GOLDILOCKS CLUSTER_PACKET_SESSION 2 10 9637
0 0 0 0.000 2024-03-13 13:22:02 GOLDILOCKS CLUSTER_PACKET_SESSION 3 10
9637 0 0 0 0.000 2024-03-13 13:22:02 GOLDILOCKS CLUSTER_PACKET_SESSION 4
10 9637 0 0 0 0.000 2024-03-13 13:22:02 GOLDILOCKS CLUSTER_SYNC_RESPONSE
0 10 9637 0 0 0 0.000 2024-03-13 13:22:02 GOLDILOCKS CS_SHARED_PACKET 5
30 28912 0 0 0 0.000

[USER] DATE DSN USER USER_ID ACCOUNT_STATUS DEFAULT_TBS TEMPORARY_TBS
INDEX_TBS PROFILE_NAME LOCK_DATE EXPIRY_DATE FAILED_LOGIN_ATTEMPTS
CREATED_DATE ——————- ———- ——- ——- ————– ———— ————- ——— ———— ——— ———–
——————— ——————- 2024-03-13 13:22:02 GOLDILOCKS SYS 2 OPEN MEM_DATA_TBS
MEM_TEMP_TBS NULL NULL NULL NULL 0 2023-10-27 12:58:54 2024-03-13
13:22:02 GOLDILOCKS TEST 6 OPEN MEM_DATA_TBS MEM_TEMP_TBS NULL NULL NULL
NULL 0 2023-10-27 12:58:54 2024-03-13 13:22:02 GOLDILOCKS MONITOR 100021
OPEN MEM_DATA_TBS MEM_TEMP_TBS NULL NULL NULL NULL 0 2023-11-23 17:02:52

[PROFILE] DATE DSN PROFILE_NAME PARAMETER_NAME PARAMETER_VALUE ——————-
———- ———— ———————— ————— 2024-03-13 13:22:02 GOLDILOCKS DEFAULT
FAILED_LOGIN_ATTEMPTS 10 2024-03-13 13:22:02 GOLDILOCKS DEFAULT
PASSWORD_LOCK_TIME 1 2024-03-13 13:22:02 GOLDILOCKS DEFAULT
PASSWORD_LIFE_TIME 180 2024-03-13 13:22:02 GOLDILOCKS DEFAULT
PASSWORD_GRACE_TIME 7 2024-03-13 13:22:02 GOLDILOCKS DEFAULT
PASSWORD_REUSE_MAX UNLIMITED 2024-03-13 13:22:02 GOLDILOCKS DEFAULT
PASSWORD_REUSE_TIME UNLIMITED 2024-03-13 13:22:02 GOLDILOCKS DEFAULT
PASSWORD_VERIFY_FUNCTION NULL

[SCHEMA PATH] DATE DSN USER USER_TYPE SEARCH_OREDER SCHEMA_NAME ——————-
———- ——- ——— ————- ———————– 2024-03-13 13:22:02 GOLDILOCKS PUBLIC PUBLIC
1 DICTIONARY_SCHEMA 2024-03-13 13:22:02 GOLDILOCKS PUBLIC PUBLIC 2
INFORMATION_SCHEMA 2024-03-13 13:22:02 GOLDILOCKS PUBLIC PUBLIC 3
DEFINITION_SCHEMA 2024-03-13 13:22:02 GOLDILOCKS PUBLIC PUBLIC 4
PERFORMANCE_VIEW_SCHEMA 2024-03-13 13:22:02 GOLDILOCKS PUBLIC PUBLIC 5
FIXED_TABLE_SCHEMA 2024-03-13 13:22:02 GOLDILOCKS TEST USER 1 PUBLIC
2024-03-13 13:22:02 GOLDILOCKS MONITOR USER 1 MONITOR 2024-03-13
13:22:02 GOLDILOCKS MONITOR USER 2 PUBLIC

[INCREMENTAL BACKUP] DATE DSN BACKUP_SEQ BACKUP_LEVEL BACKUP_OBJECT
BACKUP_OPTION BACKUP_LSN BACKUP_FILE BEGIN_TIME COMPLETION_TIME —- —
———- ———— ————- ————- ———- ———– ———- ————— no rows selected.

[AUDIT] DATE DSN POLICY_NAME ENABLED ENABLE_OPT_NAME USER WHEN_SUCCESS
WHEN_FAILURE —- — ———– ——- ————— —- ———— ———— no rows selected.

[SESSION INFO] DATE DSN SESS_ID SERIAL TRANS_ID CON_TYPE DBC_TYPE USER
WATCH SERVER_TYPE CLIENT_PID SERVER_PID PROGRAM ADDRESS PORT DRV_M_POS
DRV_SESS_ID DRV_SERIAL GLOBAL_C GLOBAL_S ——————- ———- ——- —— ——– ——– ——–
—- —– ———– ———- ———- ——- ——— —– ——— ———– ———- ——– ——– 2024-03-13
13:22:03 GOLDILOCKS 43 25906 -1 DA ODBC SYS LEAVE DEDICATED 745297
745297 gsql NULL 0 -1 -1 -1 FALSE FALSE 2024-03-13 13:22:03 GOLDILOCKS
46 139 -1 TCP ODBC SYS ENTER DEDICATED 751656 751665 gstat 127.0.0.1
44052 -1 -1 -1 FALSE FALSE

[SESSION (COUNT)] DATE DSN MAX_CLIENT MAX_PROCESS TOTAL_SESSION DA TCP
IPC CLUSTER_SESSION DEDICATED SHARED RUNNING SIGNALED SNIPED DEAD UNKOWN
GLOBAL_C GLOBAL_S QUEUE_FULL QUEUE_JOB FAILOVER AUDITED ——————- ———-
———- ———– ————- – — — ————— ——— —— ——- ——– —— —- —— ——– ——– ———- ——— ——–
——- 2024-03-13 13:22:03 GOLDILOCKS 128 128 43 42 1 0 0 43 0 0 0 0 0 0 0
0 0 0 0 0

[CLIENT INFO] DATE DSN PROGRAM_NAME DBC_TYPE CON_TYPE VERSION ADDRESS
COUNT ——————- ———- ———— ——– ——– ——————————– ——— —– 2024-03-13 13:22:03
GOLDILOCKS gsql ODBC DA 21c.21.1.29 revision(abb0c318bb) NULL 1
2024-03-13 13:22:03 GOLDILOCKS gstat ODBC TCP 21c.21.1.29
revision(abb0c318bb) 127.0.0.1 1

[STATEMENT INFO] DATE DSN SESS_ID DRV_M_POS DRV_M_NAME STMT_ID
START_EXEC V_SCN SQL_TEXT START_TIME LAST_TIME EXECUTIONS IS_PEER
IS_REMOTE ——————- ———- ——- ——— ———- ——- ———- ———- ————————————– ——————-
——— ———- ——- ——— 2024-03-13 13:22:03 GOLDILOCKS 46 0 G1N1 14 TRUE
2537.0.590 SELECT TO_CHAR(SYSDATE, ’YYYY-MM-DD HH 2024-03-13 13:22:03 0
1 FALSE FALSE

[STATEMENT (COUNT)] DATE DSN TOTAL_STMT ACTIVE_STMT IS_PEER
TOTAL_EXECUTIONS TOTAL_IS_REMOTE ——————- ———- ———- ———– ——- —————- —————
2024-03-13 13:22:03 GOLDILOCKS 62 1 0 15 0

[LONGRUN STATEMENT (OverTimeSec:5, FetchLimit:10)] DATE DSN SESS_ID
DRV_M_POS DRV_M_NAME STMT_ID START_EXEC V_SCN SQL_TEXT START_TIME
LAST_TIME TOTAL_TIME EXECUTIONS IS_PEER IS_REMOTE —- — ——- ——— ———- ——-
———- —– ——– ———- ——— ———- ———- ——- ——— no rows selected.

[TRANSACTION INFO] DATE DSN SESS_ID DRV_M_POS DRV_M_NAME DRV_TRANS_ID
LTRANS_ID TCN STATE V_SCN UNDO_PAGE UNDO_SEG_ID BEGIN_TIME —- — ——- ———
———- ———— ——— — —– —– ——— ———– ———- no rows selected.

[TRANSACTION (COUNT)] DATE DSN ACTIVE INDOUBT L_JOURNAL G_JOURNAL
L_LOCKWAIT G_LOCKWAIT ——————- ———- —— ——- ——— ——— ———- ———- 2024-03-13
13:22:03 GOLDILOCKS 0 0 0 0 0 0

[LONGRUN TRANSACTION (OverTimeSec:5, FetchLimit:10)] DATE DSN SESS_ID
SERIAL LTRANS_ID STATE V_SCN PRE_COMMIT_SCN COMMIT_SCN IS_PEER
BEGIN_TIME —- — ——- —— ——— —– —– ————– ———- ——- ———- no rows selected.

[PLAN CACHE INFO] DATE DSN CLOCK_ID FLANGE_COUNT FREE_FLANGE_COUNT
PLAN_COUNT FLANGE_ALLOC_SIZE(MB) PLAN_ALLOC_SIZE(MB) USED_FLANGE(%)
——————- ———- ——– ———— —————– ———- ——————— ——————- ————– 2024-03-13
13:22:03 GOLDILOCKS 0 128 128 0 1 1 0.000 2024-03-13 13:22:03 GOLDILOCKS
1 128 128 0 1 1 0.000 2024-03-13 13:22:03 GOLDILOCKS 2 128 128 0 1 1
0.000 2024-03-13 13:22:03 GOLDILOCKS 3 128 123 5 1 1 3.906 2024-03-13
13:22:03 GOLDILOCKS 4 128 127 1 1 1 0.781 2024-03-13 13:22:03 GOLDILOCKS
5 128 128 0 1 1 0.000 2024-03-13 13:22:03 GOLDILOCKS 6 128 128 0 1 1
0.000 2024-03-13 13:22:03 GOLDILOCKS 7 256 153 103 1 4 40.234

[PLAN CACHE (COUNT)] DATE DSN TOTAL_SIZE(MB) USED_SIZE(MB) TOTAL_PLAN
STORED_PLAN DROPPED_PLAN USED(%) ——————- ———- ————– ————- ———- ———– ————
——- 2024-03-13 13:22:03 GOLDILOCKS 100 19 109 109 0 19.000

[LONGRUN SQL PLAN CACHE (OverTimeSec:5, FetchLimit:10)] DATE DSN
SQL_HANDLE REF_COUNT PLAN_IDX PLAN_SIZE(KB) SESS_USER_NAME IS_PEER
IS_ATOMIC HAS_HINT_ERROR BIND_COUNT SQL_TEXT TOTAL_EXEC_COUNT
TOTAL_EXEC_TIME(SEC) —- — ———- ——— ——– ————- ————– ——- ——— ————– ———-
——– —————- ——————– no rows selected.

[NAMED CURSOR] DATE DSN SESS_ID CURSOR_NAME PSM_SEQ IS_OPEN VIEW_SCN
IS_SENSITIVE IS_SCROLLABLE IS_HOLDABLE IS_UPDATABLE SQL_TEXT OPEN_TIME
EXECUTIONS LAST_TIME TOTAL_TIME —- — ——- ———– ——- ——- ——– ———— ————-
———– ———— ——– ——— ———- ——— ———- no rows selected.

[AGER] DATE DSN G_SCN L_SCN AGABLE_SCN AGABLE_GAP G_GAP D_GAP L_GAP
VIEW_BLK_SESS_ID STMT_BLK_SESS_ID AGABLE_BLK_SESS_ID
MIN_TRANS_VIEW_BLK_SESS_ID ——————- ———- ———- ———- ———- ———- —– —– —–
—————- —————- —————— ————————– 2024-03-13 13:22:03 GOLDILOCKS 2537.0.568
2537.0.590 2537.0.590 0.0.0 0 0 0 -1 -1 -1 -1

[UNDO TABLESPACE (OverPageCount:1280, FetchLimit:10)] DATE DSN SESS_ID
SEG_ID SIZE(MB) LTRANS_ID STATE V_SCN PRE_COMMIT_SCN COMMIT_SCN
BEGIN_TIME —- — ——- —— ——– ——— —– —– ————– ———- ———- no rows selected.

[LOCK WAIT] DATE DSN G_SESS_ID G_IS_PEER G_LTRANS_ID G_COMMIT_SCN
G_BEGIN_TIME R_SESS_ID R_IS_PEER R_LTRANS_ID R_COMMIT_SCN R_BEGIN_TIME
—- — ——— ——— ———– ———— ———— ——— ——— ———– ———— ———— no rows selected.

[LOGFILE] DATE DSN GROUP_ID STATE FILE_NAME FILE_NO FILE_SIZE(MB)
PREV_LSN SWITCHED_ON_TIME SWITCHED_OFF_TIME INACTIVE_TIME ——————- ———-
——– ——– ———— ——- ————- ——– —————- —————– ————- 2024-03-13 13:22:03
GOLDILOCKS 0 INACTIVE redo_0_0.log 4 100 1041615 NULL NULL NULL
2024-03-13 13:22:03 GOLDILOCKS 1 CURRENT redo_1_0.log 5 100 1131079 NULL
NULL NULL 2024-03-13 13:22:03 GOLDILOCKS 2 INACTIVE redo_2_0.log 2 100
847610 NULL NULL NULL 2024-03-13 13:22:03 GOLDILOCKS 3 INACTIVE
redo_3_0.log 3 100 945235 NULL NULL NULL

[LOG BUFFER] DATE DSN BUF_SIZE(MB) LSN_GAP FLUSH FLUSH_TRY FULL BLOCK
COMPRESS TOTAL_PEND USED_PEND REDO_FILE_NO REDO_FILE_RATIO(%) ——————-
———- ———— ——- —– ——— —- —– ——– ———- ——— ———— —————— 2024-03-13 13:22:03
GOLDILOCKS 10 0 42 42 0 0 0 4 0 5 17.533

[DISK BUFFER INFO] DATE DSN BUFFER_SIZE(MB) HASH_BUCKET LRU_LIST_COUNT
FREE_LIST_COUNT FLUSH_LIST_COUNT CHECKPOINT_LIST_COUNT
HOT_REGION_PERCENTAGE HOT_REGION_CRITERIA ——————- ———- ————— ———– ————–
————— —————- ——————— ——————— ——————- 2024-03-13 13:22:03 GOLDILOCKS 64
8192 16 16 1 1 20 2

[DISK BUFFER] DATE DSN LOOKUPS HIT MISS HIT_RATION(%) FREE_WAIT
READ_WAIT TOT_READ TOT_WRITE TOT_TIME_READ TOT_TIME_WRITE MOVE_HOT
MOVE_COLD MOVE_FLUSH ——————- ———- ——- —- —- ————- ——— ——— ——– ——— ————-
————– ——– ——— ———- 2024-03-13 13:22:03 GOLDILOCKS 3765 3761 4 99.894 0 0
4 0 59989 0 0 0 0

[HUGE PAGE] DATE DSN TBS_NAME FILE_NAME IS_HUGEPAGE SHM_SIZE(MB)
FILE_SIZE(MB) ——————- ———- ————– —————- ———– ———— ————- 2024-03-13
13:22:03 GOLDILOCKS \_STATIC NULL FALSE 736 -1 2024-03-13 13:22:03
GOLDILOCKS MEM_UNDO_TBS system_undo.dbf FALSE 48 32 2024-03-13 13:22:03
GOLDILOCKS MEM_TRANS_TBS system_trans.dbf FALSE 48 36 2024-03-13
13:22:03 GOLDILOCKS MEM_TEMP_TBS system_temp FALSE 208 200 2024-03-13
13:22:03 GOLDILOCKS MEM_DATA_TBS system_data.dbf FALSE 208 200
2024-03-13 13:22:03 GOLDILOCKS MEM_AUX_TBS system_aux.dbf FALSE 208 200
2024-03-13 13:22:03 GOLDILOCKS DICTIONARY_TBS system_dict.dbf FALSE 272
256

[TABLESPACE INFO] DATE DSN TBS_NAME FILE_NAME SIZE(MB) MAX_SIZE(MB)
EXT_SIZE(KB) AUTOEXTEND LOGGING ONLINE CKPT_LSN MIN_RECY_LSN GROUP_ID
CORRUPT CREATE_TIME ——————- ———- ————– ——————– ——– ———— ———— ———- ——- ——
——– ———— ——– ——- ——————- 2024-03-13 13:22:03 GOLDILOCKS DICTIONARY_TBS
system_dict.dbf 256 256 64 FALSE TRUE TRUE 1146614 NULL 0 0 2023-10-27
12:58:24 2024-03-13 13:22:03 GOLDILOCKS MEM_UNDO_TBS system_undo.dbf 32
32 64 FALSE TRUE TRUE 1146614 NULL 0 0 2023-10-27 12:58:30 2024-03-13
13:22:03 GOLDILOCKS MEM_DATA_TBS system_data.dbf 200 200 256 FALSE TRUE
TRUE 1146614 NULL 0 0 2023-10-27 12:58:31 2024-03-13 13:22:03 GOLDILOCKS
DISK_DATA_TBS system_disk_data.dbf 200 200 256 FALSE TRUE TRUE 1146614
NULL 0 0 2023-10-27 12:58:38 2024-03-13 13:22:03 GOLDILOCKS MEM_AUX_TBS
system_aux.dbf 200 200 256 FALSE TRUE TRUE 1146614 NULL 0 0 2023-10-27
12:58:45 2024-03-13 13:22:03 GOLDILOCKS MEM_TRANS_TBS system_trans.dbf
36 36 256 FALSE TRUE TRUE 1146614 NULL 0 0 2023-10-27 12:58:53

[TABLESPACE SIZE] DATE DSN TBS_NAME TOTAL_SIZE(MB) USED_META_SIZE(MB)
USED_SIZE(MB) FREE_SIZE(MB) USED(%) ——————- ———- ————– ————– ——————
————- ————- ——- 2024-03-13 13:22:03 GOLDILOCKS DICTIONARY_TBS 256 0 109
147 42.578 2024-03-13 13:22:03 GOLDILOCKS DISK_DATA_TBS 200 0 0 200
0.000 2024-03-13 13:22:03 GOLDILOCKS MEM_AUX_TBS 200 0 3 197 1.500
2024-03-13 13:22:03 GOLDILOCKS MEM_DATA_TBS 200 0 161 39 80.500
2024-03-13 13:22:03 GOLDILOCKS MEM_TEMP_TBS 200 0 44 156 22.000
2024-03-13 13:22:03 GOLDILOCKS MEM_UNDO_TBS 32 0 17 15 53.125

[TABLE INFO] DATE DSN OWNER SCHEMA_NAME TABLE_NAME TBS_NAME MEDIA_TYPE
TEMPORARY LOGGING DROPPED READ_ONLY HAS_GSI SUPPLEMENTAL_LOG ——————-
———- ——- ———– ———————— ———— ———- ——— ——- ——- ——— ——- —————- 2024-03-13
13:22:03 GOLDILOCKS MONITOR MONITOR TELEGRAF_GLOBAL_SETTINGS
MEM_DATA_TBS MEMORY NO YES NO NO YES NO 2024-03-13 13:22:03 GOLDILOCKS
MONITOR MONITOR TELEGRAF_METRIC_SETTINGS MEM_DATA_TBS MEMORY NO YES NO
NO YES NO 2024-03-13 13:22:03 GOLDILOCKS SYS PUBLIC T1 MEM_DATA_TBS
MEMORY NO YES NO NO YES NO 2024-03-13 13:22:03 GOLDILOCKS SYS PUBLIC
TEST1 MEM_DATA_TBS MEMORY NO YES NO NO YES NO

[TABLE SIZE] DATE DSN OWNER SCHEMA_NAME TABLE_NAME PHYSICAL_ID TBS_NAME
MEDIA_TYPE USED_SIZE(MB) PROPORTION(%) LAST_ANALYZED ——————- ———- ——-
———– ———————— ————— ———— ———- ————- ————- ————- 2024-03-13 13:22:03
GOLDILOCKS MONITOR MONITOR TELEGRAF_GLOBAL_SETTINGS 107481556582400
MEM_DATA_TBS MEMORY 1 0.621 NULL 2024-03-13 13:22:03 GOLDILOCKS MONITOR
MONITOR TELEGRAF_METRIC_SETTINGS 107464376713216 MEM_DATA_TBS MEMORY 1
0.621 NULL 2024-03-13 13:22:03 GOLDILOCKS SYS PUBLIC T1 107442901876736
MEM_DATA_TBS MEMORY 158 98.137 NULL 2024-03-13 13:22:03 GOLDILOCKS SYS
PUBLIC TEST1 37211596652544 MEM_DATA_TBS MEMORY 1 0.621 NULL

[INDEX STATISTICS] DATE DSN INDEX_NAME EMPTY_NODE_COUNT SPLIT_COUNT
COMPACT_COUNT LINK_TRAVERSE_COUNT SORT_ELAPSED_TIME MERGE_ELAPSED_TIME
BUILD_ELAPSED_TIME TOTAL_ELAPSED_TIME ——————- ———- —————————————— —————-
———– ————- ——————- —————– —————— —————— —————— 2024-03-13 13:22:03
GOLDILOCKS TELEGRAF_GLOBAL_SETTINGS_PRIMARY_KEY_INDEX 0 0 0 0 140 2 182
324 2024-03-13 13:22:03 GOLDILOCKS
TELEGRAF_METRIC_SETTINGS_PRIMARY_KEY_INDEX 0 0 0 0 57 1 71 129

[INDEX SIZE] DATE DSN OWNER SCHEMA_NAME INDEX_NAME PHYSICAL_ID TBS_NAME
STATUS USED_SIZE(MB) EMPTY_SIZE(MB) PROPORTION(%) LAST_ANALYZED ——————-
———- ——- ———– —————————————— ————— ———— —— ————- ————– ————- ————-
2024-03-13 13:22:03 GOLDILOCKS MONITOR MONITOR
TELEGRAF_GLOBAL_SETTINGS_PRIMARY_KEY_INDEX 87703232184320 MEM_TEMP_TBS
VALID 1 0 50.000 NULL 2024-03-13 13:22:03 GOLDILOCKS MONITOR MONITOR
TELEGRAF_METRIC_SETTINGS_PRIMARY_KEY_INDEX 107477261615104 MEM_TEMP_TBS
VALID 1 0 50.000 NULL

[GLOBAL SECONDARY INDEX STATISTICS] DATE DSN TABLE_NAME EMPTY_NODE_COUNT
SPLIT_COUNT COMPACT_COUNT LINK_TRAVERSE_COUNT SORT_ELAPSED_TIME
MERGE_ELAPSED_TIME BUILD_ELAPSED_TIME TOTAL_ELAPSED_TIME ——————- ———-
———————— —————- ———– ————- ——————- —————– —————— —————— ——————
2024-03-13 13:22:03 GOLDILOCKS DBC_TABLE_TYPE_INFO 0 0 0 0 59 0 68 127
2024-03-13 13:22:03 GOLDILOCKS IMPLEMENTATION_INFO_BASE 0 0 0 0 823 338
423 1584 2024-03-13 13:22:03 GOLDILOCKS JDBC_CLIENT_PROPS 0 0 0 0 163 2
244 409 2024-03-13 13:22:03 GOLDILOCKS T1 0 0 0 0 51021 31516 35876
118413 2024-03-13 13:22:03 GOLDILOCKS TELEGRAF_GLOBAL_SETTINGS 0 0 0 0
116 1 162 279 2024-03-13 13:22:03 GOLDILOCKS TELEGRAF_METRIC_SETTINGS 0
0 0 0 60 1 73 134 2024-03-13 13:22:03 GOLDILOCKS TEST1 0 0 0 0 67 1 69
137

[GLOBAL SECONDARY INDEX SIZE] DATE DSN OWNER SCHEMA_NAME TABLE_NAME
PHYSICAL_ID TBS_NAME USED_SIZE(MB) EMPTY_SIZE(MB) PROPORTION(%) ——————-
———- ——- ———– ———————— ————— ———— ————- ————– ————- 2024-03-13 13:22:03
GOLDILOCKS MONITOR MONITOR TELEGRAF_GLOBAL_SETTINGS 87698937217024
MEM_TEMP_TBS 1 0 2.439 2024-03-13 13:22:03 GOLDILOCKS MONITOR MONITOR
TELEGRAF_METRIC_SETTINGS 107472966647808 MEM_TEMP_TBS 1 0 2.439
2024-03-13 13:22:03 GOLDILOCKS SYS PUBLIC T1 107451491811328
MEM_TEMP_TBS 38 0 92.683 2024-03-13 13:22:03 GOLDILOCKS SYS PUBLIC TEST1
37220186587136 MEM_TEMP_TBS 1 0 2.439

[SEQUENCE] DATE DSN OWNER SCHEMA_NAME SEQUENCE_NAME MIN MAX INCREMENT_BY
CACHE_SIZE CURRENT_VALUE NEXT_VALUE GLOBAL_NEXT_VALUE CYCLE IS_ONLINE
——————- ———- —– ———– ————- — ——————- ———— ———- ————- ———- —————– —– ———
2024-03-13 13:22:03 GOLDILOCKS SYS PUBLIC SEQ1 1 9223372036854775807 1
20 2097181 2097181 2097181 FALSE TRUE

[VIEW] DATE DSN OWNER SCHEMA_NAME VIEW_NAME NEED_RECOMPILE IS_COMPILED
IS_AFFECTED IS_UPDATABLE ——————- ———- ——- ———– —————————- ————– ———–
———– ———— 2024-03-13 13:22:03 GOLDILOCKS MONITOR MONITOR
MONITOR_SESSION_STAT FALSE TRUE FALSE NULL 2024-03-13 13:22:03
GOLDILOCKS MONITOR MONITOR MONITOR_SESSION_GRAPH_LOCAL FALSE TRUE FALSE
NULL 2024-03-13 13:22:03 GOLDILOCKS MONITOR MONITOR MONITOR_OPEN FALSE
TRUE FALSE NULL 2024-03-13 13:22:03 GOLDILOCKS MONITOR MONITOR
TECH_DEDICATED_PSA FALSE TRUE FALSE NULL 2024-03-13 13:22:03 GOLDILOCKS
MONITOR MONITOR TECH_SHARED_PSA FALSE TRUE FALSE NULL 2024-03-13
13:22:03 GOLDILOCKS MONITOR MONITOR MONITOR_PSA FALSE TRUE FALSE NULL
2024-03-13 13:22:03 GOLDILOCKS MONITOR MONITOR MONITOR_CLUSTER_QUEUE_SUM
FALSE TRUE FALSE NULL 2024-03-13 13:22:03 GOLDILOCKS MONITOR MONITOR
MONITOR_CLUSTER_QUEUE_DETAIL FALSE TRUE FALSE NULL 2024-03-13 13:22:03
GOLDILOCKS MONITOR MONITOR MONITOR_SYSTEM_LSN FALSE TRUE FALSE NULL
2024-03-13 13:22:03 GOLDILOCKS MONITOR MONITOR MONITOR_SQL_STAT FALSE
TRUE FALSE NULL 2024-03-13 13:22:03 GOLDILOCKS MONITOR MONITOR
MONITOR_TABLESPACE FALSE TRUE FALSE NULL 2024-03-13 13:22:03 GOLDILOCKS
MONITOR MONITOR MONITOR_AGER_STAT FALSE TRUE FALSE NULL 2024-03-13
13:22:03 GOLDILOCKS MONITOR MONITOR MONITOR_SSA_STAT FALSE TRUE FALSE
NULL 2024-03-13 13:22:03 GOLDILOCKS MONITOR MONITOR MONITOR_BUFFER_STAT
FALSE TRUE FALSE NULL

[SYNONYM] DATE DSN OWNER SCHEMA_NAME SYNONYM_NAME SYNONYM_TYPE
OBJECT_SCHEMA_NAME OBJECT_NAME —- — —– ———– ———— ———— —————— ———– no
rows selected.

[PACKAGE] DATE DSN OWNER SCHEMA_NAME PACKAGE_NAME PACKAGE_TYPE
NEED_RECOMPILE IS_COMPILED IS_AFFECTED AUTHID —- — —– ———– ———— ————
————– ———– ———– —— no rows selected.

[PSM] DATE DSN OWNER SCHEMA_NAME PACKAGE_NAME PSM_NAME PSM_TYPE
IS_SCHEMA_LEVEL NEED_RECOMPILE IS_COMPILED IS_AFFECTED AUTHID
IS_DETERMINISTIC —- — —– ———– ———— ——– ——– ————— ————– ———– ———– ——
—————- no rows selected.

[SYSTEM STATISTICS] DATE DSN LAYER NAME TI_COUNT TICOUNT_PROPORTION(%)
COUNT COUNT_PROPORTION(%) ——————- ———- —– —————————- ——– ——————— ——
——————- 2024-03-13 13:22:03 GOLDILOCKS CL CM_BUFFER_USED_DYNAMIC_COUNT 0
0.000 0 0.000 2024-03-13 13:22:03 GOLDILOCKS CL
CM_BUFFER_USED_ELEMENT_COUNT 0 0.000 6 0.000 2024-03-13 13:22:03
GOLDILOCKS CL GLOBAL_COMMIT_COUNT 0 0.000 8 0.000 2024-03-13 13:22:03
GOLDILOCKS KN CLOCK_AGING_COUNT 0 0.000 8 0.000 2024-03-13 13:22:03
GOLDILOCKS SC CL_PACKET_COMPRESSION_COUNT 0 0.000 0 0.000 2024-03-13
13:22:03 GOLDILOCKS SC SVR_PACKET_COMPRESSION_COUNT 0 0.000 0 0.000
2024-03-13 13:22:03 GOLDILOCKS SM ASYNC_COMMIT_COUNT 0 0.000 0 0.000
2024-03-13 13:22:03 GOLDILOCKS SM TRY_STEAL_UNDO_PAGE_COUNT 0 0.000 0
0.000 2024-03-13 13:22:03 GOLDILOCKS SQL CALL_BINDCONTEXT 0 0.000 149661
6.463 2024-03-13 13:22:03 GOLDILOCKS SQL CALL_EXECUTE 0 0.000 149670
6.464 2024-03-13 13:22:03 GOLDILOCKS SQL CALL_FETCH 0 0.000 150635 6.505
2024-03-13 13:22:03 GOLDILOCKS SQL CALL_OPTCODE 0 0.000 312 0.013
2024-03-13 13:22:03 GOLDILOCKS SQL CALL_OPTDATA 0 0.000 149670 6.464
2024-03-13 13:22:03 GOLDILOCKS SQL CALL_PARSE 0 0.000 387 0.017
2024-03-13 13:22:03 GOLDILOCKS SQL CALL_RECOMPILE 0 0.000 0 0.000
2024-03-13 13:22:03 GOLDILOCKS SQL CALL_VALIDATE 0 0.000 347 0.015
2024-03-13 13:22:03 GOLDILOCKS SQL CLUSTER_DEADLOCK_RETRY 0 0.000 0
0.000 2024-03-13 13:22:03 GOLDILOCKS SQL VERSION_CONFLICT_RETRY 0 0.000
0 0.000 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_ALLOCSTMT 0 0.000
149700 6.465 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_BINDTYPE 0 0.000
60 0.003 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_CLOSECURSOR 0 0.000
149622 6.462 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_COMMIT 0 0.000
149493 6.456 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_DESCRIBECOL 0
0.000 217799 9.406 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_EXECDIRECT
0 0.000 186 0.008 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_EXECUTE 0
0.000 149450 6.454 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_FETCH 0
0.000 150604 6.504 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_FREESTMT 0
0.000 149514 6.457 2024-03-13 13:22:03 GOLDILOCKS SS
CALL_SS_GETOUTBINDDATA 0 0.000 60 0.003 2024-03-13 13:22:03 GOLDILOCKS
SS CALL_SS_NUMPARAMS 0 0.000 149676 6.464 2024-03-13 13:22:03 GOLDILOCKS
SS CALL_SS_NUMRESULTCOLS 0 0.000 149669 6.464 2024-03-13 13:22:03
GOLDILOCKS SS CALL_SS_PREPARE 0 0.000 149498 6.456 2024-03-13 13:22:03
GOLDILOCKS SS CALL_SS_TARGETTYPE 0 0.000 149478 6.456

[SYSTEM EXECUTE STATISTICS] DATE DSN TYPE_ID STMT_TYPE TI_COUNT
TICOUNT_PROPORTION(%) COUNT COUNT_PROPORTION(%) ——————- ———- ——-
————————————– ——– ——————— —— ——————- 2024-03-13 13:22:03 GOLDILOCKS 22
ALTER DATABASE REBALANCE 0 0.000 1 0.001 2024-03-13 13:22:03 GOLDILOCKS
44 ALTER SEQUENCE .. SYNCHRONIZE 0 0.000 2 0.001 2024-03-13 13:22:03
GOLDILOCKS 51 ALTER SYSTEM { MOUNT \| OPEN } DATABASE 0 0.000 3 0.002
2024-03-13 13:22:03 GOLDILOCKS 52 ALTER SYSTEM JOIN DATABASE 0 0.000 1
0.001 2024-03-13 13:22:03 GOLDILOCKS 60 ALTER SYSTEM CLEANUP PLAN 0
0.000 1 0.001 2024-03-13 13:22:03 GOLDILOCKS 86 ALTER TABLE .. REBALANCE
.. 0 0.000 7 0.005 2024-03-13 13:22:03 GOLDILOCKS 238 SELECT 0 0.000
149656 99.990

[SYSTEM WAIT EVENT] DATE DSN CATEGORY CLASS_NAME EVENT_NAME TOTAL_WAITS
TOTAL_TIMEOUTS TIME_WAITED AVERAGE_WAIT MAX_WAIT —- — ——– ———- ———- ———–
————– ———– ———— ——– no rows selected.

[CLUSTER NODE] DATE DSN GROUP_NAME MEMBER_NAME MEMBER_POS MEMBER_ID
STATUS G_COORD L_COORD HOST PORT ——————- ———- ———- ———– ———- ——— —— ——-
——- ———- —– 2024-03-13 13:22:03 GOLDILOCKS G1 G1N1 0 1 ACTIVE TRUE TRUE
20.0.0.125 10101 2024-03-13 13:22:03 GOLDILOCKS G2 G2N1 1 2 ACTIVE FALSE
TRUE 20.0.0.126 10101 2024-03-13 13:22:03 GOLDILOCKS G1 G1N2 2 3 ACTIVE
FALSE FALSE 20.0.0.127 10101 2024-03-13 13:22:03 GOLDILOCKS G2 G2N2 3 4
ACTIVE FALSE FALSE 20.0.0.128 10101

[CLUSTER CONNECTION] DATE DSN MEMBER_NAME TYPE COUNT ——————- ———- ———–
——– —– 2024-03-13 13:22:03 GOLDILOCKS G1N1 LOCKABLE 6 2024-03-13
13:22:03 GOLDILOCKS G1N1 LOCKLESS 6 2024-03-13 13:22:03 GOLDILOCKS G1N1
SYNC 6 2024-03-13 13:22:03 GOLDILOCKS G1N1 URGENT 6 2024-03-13 13:22:03
GOLDILOCKS G1N2 LOCKABLE 6 2024-03-13 13:22:03 GOLDILOCKS G1N2 LOCKLESS
6 2024-03-13 13:22:03 GOLDILOCKS G1N2 SYNC 6 2024-03-13 13:22:03
GOLDILOCKS G1N2 URGENT 6 2024-03-13 13:22:03 GOLDILOCKS G2N1 LOCKABLE 6
2024-03-13 13:22:03 GOLDILOCKS G2N1 LOCKLESS 6 2024-03-13 13:22:03
GOLDILOCKS G2N1 SYNC 6 2024-03-13 13:22:03 GOLDILOCKS G2N1 URGENT 6
2024-03-13 13:22:03 GOLDILOCKS G2N2 LOCKABLE 6 2024-03-13 13:22:03
GOLDILOCKS G2N2 LOCKLESS 6 2024-03-13 13:22:03 GOLDILOCKS G2N2 SYNC 6
2024-03-13 13:22:03 GOLDILOCKS G2N2 URGENT 6

[CLUSTER DISPATCHER] DATE DSN MEMBER_NAME TYPE ID TI_RX_SIZE(MB)
TI_TX_SIZE(MB) TI_RX_JOBS TI_TX_JOBS RX_SIZE(MB) TX_SIZE(MB) RX_JOBS
TX_JOBS ——————- ———- ———– ——– – ————– ————– ———- ———- ———– ———– ——- ——-
2024-03-13 13:22:03 GOLDILOCKS G1N1 LOCKABLE 0 0 0 0 0 0 0 131 157
2024-03-13 13:22:03 GOLDILOCKS G1N1 LOCKLESS 1 0 0 0 0 1 0 614 455
2024-03-13 13:22:03 GOLDILOCKS G1N1 SYNC 2 0 0 0 0 0 0 0 0 2024-03-13
13:22:03 GOLDILOCKS G1N1 URGENT 3 0 0 0 0 1 1 16150 16101 2024-03-13
13:22:03 GOLDILOCKS G1N2 LOCKABLE 0 0 0 0 0 0 0 93 81 2024-03-13
13:22:03 GOLDILOCKS G1N2 LOCKLESS 1 0 0 0 0 0 0 248 239 2024-03-13
13:22:03 GOLDILOCKS G1N2 SYNC 2 0 0 0 0 0 0 0 0 2024-03-13 13:22:03
GOLDILOCKS G1N2 URGENT 3 0 0 0 0 1 1 16099 16233 2024-03-13 13:22:03
GOLDILOCKS G2N1 LOCKABLE 0 0 0 0 0 0 0 78 94 2024-03-13 13:22:03
GOLDILOCKS G2N1 LOCKLESS 1 0 0 0 0 0 0 248 247 2024-03-13 13:22:03
GOLDILOCKS G2N1 SYNC 2 0 0 0 0 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS
G2N1 URGENT 3 0 0 0 0 1 1 16188 15995 2024-03-13 13:22:03 GOLDILOCKS
G2N2 LOCKABLE 0 0 0 0 0 0 0 142 112 2024-03-13 13:22:03 GOLDILOCKS G2N2
LOCKLESS 1 0 0 0 0 0 0 304 245 2024-03-13 13:22:03 GOLDILOCKS G2N2 SYNC
2 0 0 0 0 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N2 URGENT 3 0 0 0 0 1
1 16097 16199

[CLUSTER DISPATCHER THREAD] DATE DSN MEMBER_NAME TYPE IS_SENDER
IS_CONNECTED PEER_MEMBER_POS PEER_MEMBER_NAME CONNECTED_TIME LAST_TIME
TOTAL_SIZE(MB) ——————- ———- ———– ——– ——— ———— ————— —————- ——————-
——————- ————– 2024-03-13 13:22:03 GOLDILOCKS G1N1 LOCKABLE TRUE TRUE 1
G2N1 2024-03-13 11:17:02 2024-03-13 11:17:22 0 2024-03-13 13:22:03
GOLDILOCKS G1N1 LOCKABLE FALSE TRUE 1 G2N1 2024-03-13 11:17:02
2024-03-13 11:17:22 0 2024-03-13 13:22:03 GOLDILOCKS G1N1 LOCKLESS TRUE
TRUE 1 G2N1 2024-03-13 11:17:02 2024-03-13 13:22:03 0 2024-03-13
13:22:03 GOLDILOCKS G1N1 LOCKLESS FALSE TRUE 1 G2N1 2024-03-13 11:17:02
2024-03-13 13:22:03 1 2024-03-13 13:22:03 GOLDILOCKS G1N1 SYNC TRUE TRUE
1 G2N1 2024-03-13 11:17:02 1970-01-01 09:00:00 0 2024-03-13 13:22:03
GOLDILOCKS G1N1 SYNC FALSE TRUE 1 G2N1 2024-03-13 11:17:02 1970-01-01
09:00:00 0 2024-03-13 13:22:03 GOLDILOCKS G1N1 URGENT TRUE TRUE 1 G2N1
2024-03-13 11:17:02 2024-03-13 13:22:03 1 2024-03-13 13:22:03 GOLDILOCKS
G1N1 URGENT FALSE TRUE 1 G2N1 2024-03-13 11:17:02 2024-03-13 13:22:02 1
2024-03-13 13:22:03 GOLDILOCKS G1N1 LOCKABLE TRUE TRUE 2 G1N2 2024-03-13
11:17:10 2024-03-13 11:17:22 0 2024-03-13 13:22:03 GOLDILOCKS G1N1
LOCKABLE FALSE TRUE 2 G1N2 2024-03-13 11:17:10 2024-03-13 11:17:22 0
2024-03-13 13:22:03 GOLDILOCKS G1N1 LOCKLESS TRUE TRUE 2 G1N2 2024-03-13
11:17:10 2024-03-13 13:22:03 0 2024-03-13 13:22:03 GOLDILOCKS G1N1
LOCKLESS FALSE TRUE 2 G1N2 2024-03-13 11:17:10 2024-03-13 13:22:03 1
2024-03-13 13:22:03 GOLDILOCKS G1N1 SYNC TRUE TRUE 2 G1N2 2024-03-13
11:17:10 1970-01-01 09:00:00 0 2024-03-13 13:22:03 GOLDILOCKS G1N1 SYNC
FALSE TRUE 2 G1N2 2024-03-13 11:17:10 1970-01-01 09:00:00 0 2024-03-13
13:22:03 GOLDILOCKS G1N1 URGENT TRUE TRUE 2 G1N2 2024-03-13 11:17:10
2024-03-13 13:22:03 1 2024-03-13 13:22:03 GOLDILOCKS G1N1 URGENT FALSE
TRUE 2 G1N2 2024-03-13 11:17:10 2024-03-13 13:22:03 1 2024-03-13
13:22:03 GOLDILOCKS G1N1 LOCKABLE TRUE TRUE 3 G2N2 2024-03-13 11:17:17
2024-03-13 11:17:22 0 2024-03-13 13:22:03 GOLDILOCKS G1N1 LOCKABLE FALSE
TRUE 3 G2N2 2024-03-13 11:17:17 2024-03-13 11:17:22 0 2024-03-13
13:22:03 GOLDILOCKS G1N1 LOCKLESS TRUE TRUE 3 G2N2 2024-03-13 11:17:17
2024-03-13 13:22:03 0 2024-03-13 13:22:03 GOLDILOCKS G1N1 LOCKLESS FALSE
TRUE 3 G2N2 2024-03-13 11:17:17 2024-03-13 13:22:03 1 2024-03-13
13:22:03 GOLDILOCKS G1N1 SYNC TRUE TRUE 3 G2N2 2024-03-13 11:17:17
1970-01-01 09:00:00 0 2024-03-13 13:22:03 GOLDILOCKS G1N1 SYNC FALSE
TRUE 3 G2N2 2024-03-13 11:17:17 1970-01-01 09:00:00 0 2024-03-13
13:22:03 GOLDILOCKS G1N1 URGENT TRUE TRUE 3 G2N2 2024-03-13 11:17:17
2024-03-13 13:22:03 1 2024-03-13 13:22:03 GOLDILOCKS G1N1 URGENT FALSE
TRUE 3 G2N2 2024-03-13 11:17:17 2024-03-13 13:22:03 1 2024-03-13
13:22:03 GOLDILOCKS G1N2 LOCKABLE TRUE TRUE 0 G1N1 2024-03-13 11:17:10
2024-03-13 11:17:22 0 2024-03-13 13:22:03 GOLDILOCKS G1N2 LOCKABLE FALSE
TRUE 0 G1N1 2024-03-13 11:17:10 2024-03-13 11:17:22 0 2024-03-13
13:22:03 GOLDILOCKS G1N2 LOCKLESS TRUE TRUE 0 G1N1 2024-03-13 11:17:10
2024-03-13 13:22:03 0 2024-03-13 13:22:03 GOLDILOCKS G1N2 LOCKLESS FALSE
TRUE 0 G1N1 2024-03-13 11:17:10 2024-03-13 13:22:03 0 2024-03-13
13:22:03 GOLDILOCKS G1N2 SYNC TRUE TRUE 0 G1N1 2024-03-13 11:17:10
1970-01-01 09:00:00 0 2024-03-13 13:22:03 GOLDILOCKS G1N2 SYNC FALSE
TRUE 0 G1N1 2024-03-13 11:17:10 1970-01-01 09:00:00 0 2024-03-13
13:22:03 GOLDILOCKS G1N2 URGENT TRUE TRUE 0 G1N1 2024-03-13 11:17:10
2024-03-13 13:22:03 1 2024-03-13 13:22:03 GOLDILOCKS G1N2 URGENT FALSE
TRUE 0 G1N1 2024-03-13 11:17:10 2024-03-13 13:22:03 1 2024-03-13
13:22:03 GOLDILOCKS G1N2 LOCKABLE TRUE TRUE 1 G2N1 2024-03-13 11:17:11
2024-03-13 11:17:14 0 2024-03-13 13:22:03 GOLDILOCKS G1N2 LOCKABLE FALSE
TRUE 1 G2N1 2024-03-13 11:17:11 2024-03-13 11:17:14 0 2024-03-13
13:22:03 GOLDILOCKS G1N2 LOCKLESS TRUE TRUE 1 G2N1 2024-03-13 11:17:11
2024-03-13 13:14:47 0 2024-03-13 13:22:03 GOLDILOCKS G1N2 LOCKLESS FALSE
TRUE 1 G2N1 2024-03-13 11:17:11 2024-03-13 13:14:47 0 2024-03-13
13:22:03 GOLDILOCKS G1N2 SYNC TRUE TRUE 1 G2N1 2024-03-13 11:17:11
1970-01-01 09:00:00 0 2024-03-13 13:22:03 GOLDILOCKS G1N2 SYNC FALSE
TRUE 1 G2N1 2024-03-13 11:17:11 1970-01-01 09:00:00 0 2024-03-13
13:22:03 GOLDILOCKS G1N2 URGENT TRUE TRUE 1 G2N1 2024-03-13 11:17:11
2024-03-13 13:22:03 1 2024-03-13 13:22:03 GOLDILOCKS G1N2 URGENT FALSE
TRUE 1 G2N1 2024-03-13 11:17:11 2024-03-13 13:22:02 1 2024-03-13
13:22:03 GOLDILOCKS G1N2 LOCKABLE TRUE TRUE 3 G2N2 2024-03-13 11:17:19
2024-03-13 11:17:20 0 2024-03-13 13:22:03 GOLDILOCKS G1N2 LOCKABLE FALSE
TRUE 3 G2N2 2024-03-13 11:17:19 2024-03-13 11:17:20 0 2024-03-13
13:22:03 GOLDILOCKS G1N2 LOCKLESS TRUE TRUE 3 G2N2 2024-03-13 11:17:19
2024-03-13 13:14:47 0 2024-03-13 13:22:03 GOLDILOCKS G1N2 LOCKLESS FALSE
TRUE 3 G2N2 2024-03-13 11:17:19 2024-03-13 13:14:47 0 2024-03-13
13:22:03 GOLDILOCKS G1N2 SYNC TRUE TRUE 3 G2N2 2024-03-13 11:17:19
1970-01-01 09:00:00 0 2024-03-13 13:22:03 GOLDILOCKS G1N2 SYNC FALSE
TRUE 3 G2N2 2024-03-13 11:17:19 1970-01-01 09:00:00 0 2024-03-13
13:22:03 GOLDILOCKS G1N2 URGENT TRUE TRUE 3 G2N2 2024-03-13 11:17:19
2024-03-13 13:22:03 1 2024-03-13 13:22:03 GOLDILOCKS G1N2 URGENT FALSE
TRUE 3 G2N2 2024-03-13 11:17:19 2024-03-13 13:22:03 1 2024-03-13
13:22:03 GOLDILOCKS G2N1 LOCKABLE TRUE TRUE 0 G1N1 2024-03-13 11:17:02
2024-03-13 11:17:22 0 2024-03-13 13:22:03 GOLDILOCKS G2N1 LOCKABLE FALSE
TRUE 0 G1N1 2024-03-13 11:17:02 2024-03-13 11:17:22 0 2024-03-13
13:22:03 GOLDILOCKS G2N1 LOCKLESS TRUE TRUE 0 G1N1 2024-03-13 11:17:02
2024-03-13 13:22:03 0 2024-03-13 13:22:03 GOLDILOCKS G2N1 LOCKLESS FALSE
TRUE 0 G1N1 2024-03-13 11:17:02 2024-03-13 13:22:03 0 2024-03-13
13:22:03 GOLDILOCKS G2N1 SYNC TRUE TRUE 0 G1N1 2024-03-13 11:17:02
1970-01-01 09:00:00 0 2024-03-13 13:22:03 GOLDILOCKS G2N1 SYNC FALSE
TRUE 0 G1N1 2024-03-13 11:17:02 1970-01-01 09:00:00 0 2024-03-13
13:22:03 GOLDILOCKS G2N1 URGENT TRUE TRUE 0 G1N1 2024-03-13 11:17:02
2024-03-13 13:22:02 1 2024-03-13 13:22:03 GOLDILOCKS G2N1 URGENT FALSE
TRUE 0 G1N1 2024-03-13 11:17:02 2024-03-13 13:22:03 1 2024-03-13
13:22:03 GOLDILOCKS G2N1 LOCKABLE TRUE TRUE 2 G1N2 2024-03-13 11:17:11
2024-03-13 11:17:14 0 2024-03-13 13:22:03 GOLDILOCKS G2N1 LOCKABLE FALSE
TRUE 2 G1N2 2024-03-13 11:17:11 2024-03-13 11:17:14 0 2024-03-13
13:22:03 GOLDILOCKS G2N1 LOCKLESS TRUE TRUE 2 G1N2 2024-03-13 11:17:11
2024-03-13 13:14:47 0 2024-03-13 13:22:03 GOLDILOCKS G2N1 LOCKLESS FALSE
TRUE 2 G1N2 2024-03-13 11:17:11 2024-03-13 13:14:47 0 2024-03-13
13:22:03 GOLDILOCKS G2N1 SYNC TRUE TRUE 2 G1N2 2024-03-13 11:17:11
1970-01-01 09:00:00 0 2024-03-13 13:22:03 GOLDILOCKS G2N1 SYNC FALSE
TRUE 2 G1N2 2024-03-13 11:17:11 1970-01-01 09:00:00 0 2024-03-13
13:22:03 GOLDILOCKS G2N1 URGENT TRUE TRUE 2 G1N2 2024-03-13 11:17:11
2024-03-13 13:22:02 1 2024-03-13 13:22:03 GOLDILOCKS G2N1 URGENT FALSE
TRUE 2 G1N2 2024-03-13 11:17:11 2024-03-13 13:22:03 1 2024-03-13
13:22:03 GOLDILOCKS G2N1 LOCKABLE TRUE TRUE 3 G2N2 2024-03-13 11:17:18
2024-03-13 11:17:22 0 2024-03-13 13:22:03 GOLDILOCKS G2N1 LOCKABLE FALSE
TRUE 3 G2N2 2024-03-13 11:17:18 2024-03-13 11:17:20 0 2024-03-13
13:22:03 GOLDILOCKS G2N1 LOCKLESS TRUE TRUE 3 G2N2 2024-03-13 11:17:18
2024-03-13 13:14:47 0 2024-03-13 13:22:03 GOLDILOCKS G2N1 LOCKLESS FALSE
TRUE 3 G2N2 2024-03-13 11:17:18 2024-03-13 13:14:47 0 2024-03-13
13:22:03 GOLDILOCKS G2N1 SYNC TRUE TRUE 3 G2N2 2024-03-13 11:17:18
1970-01-01 09:00:00 0 2024-03-13 13:22:03 GOLDILOCKS G2N1 SYNC FALSE
TRUE 3 G2N2 2024-03-13 11:17:18 1970-01-01 09:00:00 0 2024-03-13
13:22:03 GOLDILOCKS G2N1 URGENT TRUE TRUE 3 G2N2 2024-03-13 11:17:18
2024-03-13 13:22:02 1 2024-03-13 13:22:03 GOLDILOCKS G2N1 URGENT FALSE
TRUE 3 G2N2 2024-03-13 11:17:18 2024-03-13 13:22:03 1 2024-03-13
13:22:03 GOLDILOCKS G2N2 LOCKABLE TRUE TRUE 0 G1N1 2024-03-13 11:17:17
2024-03-13 11:17:22 0 2024-03-13 13:22:03 GOLDILOCKS G2N2 LOCKABLE FALSE
TRUE 0 G1N1 2024-03-13 11:17:17 2024-03-13 11:17:22 0 2024-03-13
13:22:03 GOLDILOCKS G2N2 LOCKLESS TRUE TRUE 0 G1N1 2024-03-13 11:17:17
2024-03-13 13:22:03 0 2024-03-13 13:22:03 GOLDILOCKS G2N2 LOCKLESS FALSE
TRUE 0 G1N1 2024-03-13 11:17:17 2024-03-13 13:22:03 0 2024-03-13
13:22:03 GOLDILOCKS G2N2 SYNC TRUE TRUE 0 G1N1 2024-03-13 11:17:17
1970-01-01 09:00:00 0 2024-03-13 13:22:03 GOLDILOCKS G2N2 SYNC FALSE
TRUE 0 G1N1 2024-03-13 11:17:17 1970-01-01 09:00:00 0 2024-03-13
13:22:03 GOLDILOCKS G2N2 URGENT TRUE TRUE 0 G1N1 2024-03-13 11:17:17
2024-03-13 13:22:03 1 2024-03-13 13:22:03 GOLDILOCKS G2N2 URGENT FALSE
TRUE 0 G1N1 2024-03-13 11:17:17 2024-03-13 13:22:03 1 2024-03-13
13:22:03 GOLDILOCKS G2N2 LOCKABLE TRUE TRUE 1 G2N1 2024-03-13 11:17:18
2024-03-13 11:17:20 0 2024-03-13 13:22:03 GOLDILOCKS G2N2 LOCKABLE FALSE
TRUE 1 G2N1 2024-03-13 11:17:18 2024-03-13 11:17:22 0 2024-03-13
13:22:03 GOLDILOCKS G2N2 LOCKLESS TRUE TRUE 1 G2N1 2024-03-13 11:17:18
2024-03-13 13:14:47 0 2024-03-13 13:22:03 GOLDILOCKS G2N2 LOCKLESS FALSE
TRUE 1 G2N1 2024-03-13 11:17:18 2024-03-13 13:14:47 0 2024-03-13
13:22:03 GOLDILOCKS G2N2 SYNC TRUE TRUE 1 G2N1 2024-03-13 11:17:18
1970-01-01 09:00:00 0 2024-03-13 13:22:03 GOLDILOCKS G2N2 SYNC FALSE
TRUE 1 G2N1 2024-03-13 11:17:18 1970-01-01 09:00:00 0 2024-03-13
13:22:03 GOLDILOCKS G2N2 URGENT TRUE TRUE 1 G2N1 2024-03-13 11:17:18
2024-03-13 13:22:03 1 2024-03-13 13:22:03 GOLDILOCKS G2N2 URGENT FALSE
TRUE 1 G2N1 2024-03-13 11:17:18 2024-03-13 13:22:02 1 2024-03-13
13:22:03 GOLDILOCKS G2N2 LOCKABLE TRUE TRUE 2 G1N2 2024-03-13 11:17:19
2024-03-13 11:17:20 0 2024-03-13 13:22:03 GOLDILOCKS G2N2 LOCKABLE FALSE
TRUE 2 G1N2 2024-03-13 11:17:19 2024-03-13 11:17:20 0 2024-03-13
13:22:03 GOLDILOCKS G2N2 LOCKLESS TRUE TRUE 2 G1N2 2024-03-13 11:17:19
2024-03-13 13:14:47 0 2024-03-13 13:22:03 GOLDILOCKS G2N2 LOCKLESS FALSE
TRUE 2 G1N2 2024-03-13 11:17:19 2024-03-13 13:14:47 0 2024-03-13
13:22:03 GOLDILOCKS G2N2 SYNC TRUE TRUE 2 G1N2 2024-03-13 11:17:19
1970-01-01 09:00:00 0 2024-03-13 13:22:03 GOLDILOCKS G2N2 SYNC FALSE
TRUE 2 G1N2 2024-03-13 11:17:19 1970-01-01 09:00:00 0 2024-03-13
13:22:03 GOLDILOCKS G2N2 URGENT TRUE TRUE 2 G1N2 2024-03-13 11:17:19
2024-03-13 13:22:03 1 2024-03-13 13:22:03 GOLDILOCKS G2N2 URGENT FALSE
TRUE 2 G1N2 2024-03-13 11:17:19 2024-03-13 13:22:03 1

[CLUSTER CSERVER RUNNING] DATE DSN MEMBER_NAME TYPE STATUS COUNT ——————-
———- ———– ————- —— —– 2024-03-13 13:22:03 GOLDILOCKS G1N2 LOCKLESS DATA
RUN 1 2024-03-13 13:22:03 GOLDILOCKS G2N1 LOCKLESS DATA RUN 1 2024-03-13
13:22:03 GOLDILOCKS G2N2 LOCKLESS DATA RUN 1

[CLUSTER CSERVER STATUS] DATE DSN MEMBER_NAME TYPE TI_JOBS JOBS ——————-
———- ———– ————- ——- —– 2024-03-13 13:22:03 GOLDILOCKS G1N1 URGENT 0
16150 2024-03-13 13:22:03 GOLDILOCKS G1N1 SYNC 0 0 2024-03-13 13:22:03
GOLDILOCKS G1N1 LOCKLESS DATA 0 85 2024-03-13 13:22:03 GOLDILOCKS G1N1
LOCKABLE DATA 0 36 2024-03-13 13:22:03 GOLDILOCKS G1N1 COORDINATOR 0 31
2024-03-13 13:22:03 GOLDILOCKS G1N1 COMMIT_SLAVE 0 0 2024-03-13 13:22:03
GOLDILOCKS G1N1 COMMIT_IO 0 20 2024-03-13 13:22:03 GOLDILOCKS G1N1
COMMIT 0 31 2024-03-13 13:22:03 GOLDILOCKS G1N2 URGENT 0 16079
2024-03-13 13:22:03 GOLDILOCKS G1N2 SYNC 0 0 2024-03-13 13:22:03
GOLDILOCKS G1N2 LOCKLESS DATA 0 220 2024-03-13 13:22:03 GOLDILOCKS G1N2
LOCKABLE DATA 0 42 2024-03-13 13:22:03 GOLDILOCKS G1N2 COORDINATOR 0 0
2024-03-13 13:22:03 GOLDILOCKS G1N2 COMMIT_SLAVE 0 0 2024-03-13 13:22:03
GOLDILOCKS G1N2 COMMIT_IO 0 16 2024-03-13 13:22:03 GOLDILOCKS G1N2
COMMIT 0 28 2024-03-13 13:22:03 GOLDILOCKS G2N1 URGENT 0 16176
2024-03-13 13:22:03 GOLDILOCKS G2N1 SYNC 0 0 2024-03-13 13:22:03
GOLDILOCKS G2N1 LOCKLESS DATA 0 232 2024-03-13 13:22:03 GOLDILOCKS G2N1
LOCKABLE DATA 0 47 2024-03-13 13:22:03 GOLDILOCKS G2N1 COORDINATOR 0 30
2024-03-13 13:22:03 GOLDILOCKS G2N1 COMMIT_SLAVE 0 0 2024-03-13 13:22:03
GOLDILOCKS G2N1 COMMIT_IO 0 18 2024-03-13 13:22:03 GOLDILOCKS G2N1
COMMIT 0 30 2024-03-13 13:22:03 GOLDILOCKS G2N2 URGENT 0 16069
2024-03-13 13:22:03 GOLDILOCKS G2N2 SYNC 0 0 2024-03-13 13:22:03
GOLDILOCKS G2N2 LOCKLESS DATA 0 180 2024-03-13 13:22:03 GOLDILOCKS G2N2
LOCKABLE DATA 0 16 2024-03-13 13:22:03 GOLDILOCKS G2N2 COORDINATOR 0 0
2024-03-13 13:22:03 GOLDILOCKS G2N2 COMMIT_SLAVE 0 0 2024-03-13 13:22:03
GOLDILOCKS G2N2 COMMIT_IO 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N2 COMMIT
0 18

[CLUSTER QUEUE (SUM)] DATE DSN MEMBER_NAME TYPE QUEUED FULL WAIT MISS
——————- ———- ———– —————– —— —- —- —- 2024-03-13 13:22:03 GOLDILOCKS G1N1
COMMIT_IN 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G1N1 COMMIT_IO_IN 0 0 0
0 2024-03-13 13:22:03 GOLDILOCKS G1N1 COMMIT_SLAVE_IN 0 0 0 0 2024-03-13
13:22:03 GOLDILOCKS G1N1 COORDINATOR_IN 0 0 0 0 2024-03-13 13:22:03
GOLDILOCKS G1N1 LOCATOR_AGENT_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS
G1N1 LOCKABLE_DATA_IN 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G1N1
LOCKABLE_DATA_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G1N1
LOCKLESS_DATA_IN 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G1N1
LOCKLESS_DATA_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G1N1
RECOVER_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G1N1 SYNC_IN 0 0 0 0
2024-03-13 13:22:03 GOLDILOCKS G1N1 SYNC_OUT 0 0 0 0 2024-03-13 13:22:03
GOLDILOCKS G1N1 URGENT_IN 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G1N1
URGENT_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G1N2 COMMIT_IN 0 0 0 0
2024-03-13 13:22:03 GOLDILOCKS G1N2 COMMIT_IO_IN 0 0 0 0 2024-03-13
13:22:03 GOLDILOCKS G1N2 COMMIT_SLAVE_IN 0 0 0 0 2024-03-13 13:22:03
GOLDILOCKS G1N2 COORDINATOR_IN 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS
G1N2 LOCATOR_AGENT_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G1N2
LOCKABLE_DATA_IN 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G1N2
LOCKABLE_DATA_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G1N2
LOCKLESS_DATA_IN 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G1N2
LOCKLESS_DATA_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G1N2
RECOVER_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G1N2 SYNC_IN 0 0 0 0
2024-03-13 13:22:03 GOLDILOCKS G1N2 SYNC_OUT 0 0 0 0 2024-03-13 13:22:03
GOLDILOCKS G1N2 URGENT_IN 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G1N2
URGENT_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N1 COMMIT_IN 0 0 0 0
2024-03-13 13:22:03 GOLDILOCKS G2N1 COMMIT_IO_IN 0 0 0 0 2024-03-13
13:22:03 GOLDILOCKS G2N1 COMMIT_SLAVE_IN 0 0 0 0 2024-03-13 13:22:03
GOLDILOCKS G2N1 COORDINATOR_IN 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS
G2N1 LOCATOR_AGENT_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N1
LOCKABLE_DATA_IN 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N1
LOCKABLE_DATA_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N1
LOCKLESS_DATA_IN 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N1
LOCKLESS_DATA_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N1
RECOVER_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N1 SYNC_IN 0 0 0 0
2024-03-13 13:22:03 GOLDILOCKS G2N1 SYNC_OUT 0 0 0 0 2024-03-13 13:22:03
GOLDILOCKS G2N1 URGENT_IN 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N1
URGENT_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N2 COMMIT_IN 0 0 0 0
2024-03-13 13:22:03 GOLDILOCKS G2N2 COMMIT_IO_IN 0 0 0 0 2024-03-13
13:22:03 GOLDILOCKS G2N2 COMMIT_SLAVE_IN 0 0 0 0 2024-03-13 13:22:03
GOLDILOCKS G2N2 COORDINATOR_IN 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS
G2N2 LOCATOR_AGENT_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N2
LOCKABLE_DATA_IN 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N2
LOCKABLE_DATA_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N2
LOCKLESS_DATA_IN 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N2
LOCKLESS_DATA_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N2
RECOVER_OUT 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N2 SYNC_IN 0 0 0 0
2024-03-13 13:22:03 GOLDILOCKS G2N2 SYNC_OUT 0 0 0 0 2024-03-13 13:22:03
GOLDILOCKS G2N2 URGENT_IN 0 0 0 0 2024-03-13 13:22:03 GOLDILOCKS G2N2
URGENT_OUT 0 0 0 0

[CLUSTER GLOBAL JOURNALING] DATE DSN MEMBER_NAME TABLE_NAME SHARD_ID
TX_COUNT TOTAL_SIZE —- — ———– ———- ——– ——– ———- no rows selected.

[CLUSTER TABLE INFO] DATE DSN OWNER SCHEMA_NAME TABLE_NAME
SHARD_STRATEGY SHARD_PLACEMENT SHARD_CNT KEY_CNT COLUMN_NAME COL_POS
HAS_GSI ——————- ———- ——- ———– ———————— ————– ————— ——— ——- ———– ——- ——-
2024-03-13 13:22:03 GOLDILOCKS MONITOR MONITOR TELEGRAF_GLOBAL_SETTINGS
CLONED AT CLUSTER WIDE -1 -1 NULL -1 TRUE 2024-03-13 13:22:03 GOLDILOCKS
MONITOR MONITOR TELEGRAF_METRIC_SETTINGS CLONED AT CLUSTER WIDE -1 -1
NULL -1 TRUE 2024-03-13 13:22:03 GOLDILOCKS SYS PUBLIC T1 CLONED AT
CLUSTER WIDE -1 -1 NULL -1 TRUE 2024-03-13 13:22:03 GOLDILOCKS SYS
PUBLIC TEST1 CLONED AT CLUSTER WIDE -1 -1 NULL -1 TRUE

[CLUSTER TABLE OFFLINE] DATE DSN OWNER SCHEMA_NAME TABLE_NAME GROUP_NAME
MEMBER_NAME OFFLINE SCN —- — —– ———– ———- ———- ———– ——- — no rows
selected.

[CLUSTER TOTAL TABLE SIZE] DATE DSN OWNER SCHEMA_NAME TABLE_NAME
PHYSICAL_ID TBS_NAME MEDIA_TYPE USED_SIZE(MB) PROPORTION(%)
LAST_ANALYZED ——————- ———- ——- ———– ———————— ———– ———— ———- ————- ————-
————- 2024-03-13 13:22:03 GOLDILOCKS MONITOR MONITOR
TELEGRAF_GLOBAL_SETTINGS 0 MEM_DATA_TBS MEMORY 2 0.314 NULL 2024-03-13
13:22:03 GOLDILOCKS MONITOR MONITOR TELEGRAF_METRIC_SETTINGS 0
MEM_DATA_TBS MEMORY 2 0.314 NULL 2024-03-13 13:22:03 GOLDILOCKS SYS
PUBLIC T1 0 MEM_DATA_TBS MEMORY 630 99.057 NULL 2024-03-13 13:22:03
GOLDILOCKS SYS PUBLIC TEST1 0 MEM_DATA_TBS MEMORY 2 0.314 NULL

[CLUSTER TOTAL INDEX SIZE] DATE DSN OWNER SCHEMA_NAME INDEX_NAME
PHYSICAL_ID TBS_NAME STATUS USED_SIZE(MB) EMPTY_SIZE(MB) PROPORTION(%)
LAST_ANALYZED ——————- ———- ——- ———– —————————————— ———– ———— —— ————-
————– ————- ————- 2024-03-13 13:22:03 GOLDILOCKS MONITOR MONITOR
TELEGRAF_GLOBAL_SETTINGS_PRIMARY_KEY_INDEX 0 MEM_TEMP_TBS VALID 3 0
50.000 NULL 2024-03-13 13:22:03 GOLDILOCKS MONITOR MONITOR
TELEGRAF_METRIC_SETTINGS_PRIMARY_KEY_INDEX 0 MEM_TEMP_TBS VALID 3 0
50.000 NULL

[CLUSTER TOTAL GLOBAL SECONDARY INDEX SIZE] DATE DSN OWNER SCHEMA_NAME
TABLE_NAME PHYSICAL_ID TBS_NAME USED_SIZE(MB) EMPTY_SIZE(MB)
PROPORTION(%) ——————- ———- ——- ———– ———————— ———– ———— ————- ————– ————-
2024-03-13 13:22:03 GOLDILOCKS MONITOR MONITOR TELEGRAF_GLOBAL_SETTINGS
0 MEM_TEMP_TBS 3 0 1.875 2024-03-13 13:22:03 GOLDILOCKS MONITOR MONITOR
TELEGRAF_METRIC_SETTINGS 0 MEM_TEMP_TBS 3 0 1.875 2024-03-13 13:22:03
GOLDILOCKS SYS PUBLIC T1 0 MEM_TEMP_TBS 151 0 94.375 2024-03-13 13:22:03
GOLDILOCKS SYS PUBLIC TEST1 0 MEM_TEMP_TBS 3 0 1.875

[CLUSTER SYSTEM STATISTICS] DATE DSN LAYER NAME TI_COUNT
TICOUNT_PROPORTION(%) COUNT COUNT_PROPORTION(%) ——————- ———- —–
—————————- ——– ——————— —— ——————- 2024-03-13 13:22:03 GOLDILOCKS CL
CM_BUFFER_USED_DYNAMIC_COUNT 0 0.000 0 0.000 2024-03-13 13:22:03
GOLDILOCKS CL CM_BUFFER_USED_ELEMENT_COUNT 0 0.000 9 0.000 2024-03-13
13:22:03 GOLDILOCKS CL GLOBAL_COMMIT_COUNT 0 0.000 22 0.001 2024-03-13
13:22:03 GOLDILOCKS KN CLOCK_AGING_COUNT 0 0.000 32 0.001 2024-03-13
13:22:03 GOLDILOCKS SC CL_PACKET_COMPRESSION_COUNT 0 0.000 0 0.000
2024-03-13 13:22:03 GOLDILOCKS SC SVR_PACKET_COMPRESSION_COUNT 0 0.000 0
0.000 2024-03-13 13:22:03 GOLDILOCKS SM ASYNC_COMMIT_COUNT 0 0.000 0
0.000 2024-03-13 13:22:03 GOLDILOCKS SM TRY_STEAL_UNDO_PAGE_COUNT 0
0.000 0 0.000 2024-03-13 13:22:03 GOLDILOCKS SQL CALL_BINDCONTEXT 0
0.000 171117 6.166 2024-03-13 13:22:03 GOLDILOCKS SQL CALL_EXECUTE 0
0.000 171132 6.166 2024-03-13 13:22:03 GOLDILOCKS SQL CALL_FETCH 0 0.000
175342 6.318 2024-03-13 13:22:03 GOLDILOCKS SQL CALL_OPTCODE 0 0.000 635
0.023 2024-03-13 13:22:03 GOLDILOCKS SQL CALL_OPTDATA 0 0.000 171132
6.166 2024-03-13 13:22:03 GOLDILOCKS SQL CALL_PARSE 0 0.000 830 0.030
2024-03-13 13:22:03 GOLDILOCKS SQL CALL_RECOMPILE 0 0.000 0 0.000
2024-03-13 13:22:03 GOLDILOCKS SQL CALL_VALIDATE 0 0.000 670 0.024
2024-03-13 13:22:03 GOLDILOCKS SQL CLUSTER_DEADLOCK_RETRY 0 0.000 0
0.000 2024-03-13 13:22:03 GOLDILOCKS SQL VERSION_CONFLICT_RETRY 0 0.000
0 0.000 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_ALLOCSTMT 0 0.000
171088 6.165 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_BINDTYPE 0 0.000
375 0.014 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_CLOSECURSOR 0 0.000
171045 6.163 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_COMMIT 0 0.000
170517 6.144 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_DESCRIBECOL 0
0.000 370944 13.366 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_EXECDIRECT
0 0.000 264 0.010 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_EXECUTE 0
0.000 170819 6.155 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_FETCH 0
0.000 175302 6.317 2024-03-13 13:22:03 GOLDILOCKS SS CALL_SS_FREESTMT 0
0.000 170821 6.155 2024-03-13 13:22:03 GOLDILOCKS SS
CALL_SS_GETOUTBINDDATA 0 0.000 60 0.002 2024-03-13 13:22:03 GOLDILOCKS
SS CALL_SS_NUMPARAMS 0 0.000 170750 6.153 2024-03-13 13:22:03 GOLDILOCKS
SS CALL_SS_NUMRESULTCOLS 0 0.000 170743 6.152 2024-03-13 13:22:03
GOLDILOCKS SS CALL_SS_PREPARE 0 0.000 170851 6.156 2024-03-13 13:22:03
GOLDILOCKS SS CALL_SS_ROLLBACK 0 0.000 6 0.000 2024-03-13 13:22:03
GOLDILOCKS SS CALL_SS_SETSTMTATTR 0 0.000 216 0.008 2024-03-13 13:22:03
GOLDILOCKS SS CALL_SS_TARGETTYPE 0 0.000 170497 6.144

[CLUSTER SYSTEM EXECUTE STATISTICS] DATE DSN TYPE_ID STMT_TYPE TI_COUNT
TICOUNT_PROPORTION(%) COUNT COUNT_PROPORTION(%) ——————- ———- ——-
————————————– ——– ——————— —— ——————- 2024-03-13 13:22:03 GOLDILOCKS 22
ALTER DATABASE REBALANCE 0 0.000 1 0.001 2024-03-13 13:22:03 GOLDILOCKS
44 ALTER SEQUENCE .. SYNCHRONIZE 0 0.000 8 0.005 2024-03-13 13:22:03
GOLDILOCKS 51 ALTER SYSTEM { MOUNT \| OPEN } DATABASE 0 0.000 15 0.009
2024-03-13 13:22:03 GOLDILOCKS 52 ALTER SYSTEM JOIN DATABASE 0 0.000 7
0.004 2024-03-13 13:22:03 GOLDILOCKS 60 ALTER SYSTEM CLEANUP PLAN 0
0.000 4 0.002 2024-03-13 13:22:03 GOLDILOCKS 86 ALTER TABLE .. REBALANCE
.. 0 0.000 7 0.004 2024-03-13 13:22:03 GOLDILOCKS 238 SELECT 0 0.000
171099 99.975 }}}

=== sql === {{{ #!sql ———–## SELECT ‘DB_NAME’, CATALOG_NAME FROM
CATALOG_NAME@LOCAL UNION ALL SELECT ‘IS_CLUSTER’, CAST(IS_CLUSTER AS
VARCHAR(10)) FROM
X\ *INSTANCE*\ @\ *LOCALUNIONALLSELECT*\ ′\ *MAJOR*\ :sub:`V`\ *ERSION*\ ′, *CAST*\ (*SPLIT*\ :sub:`P`\ *ART*\ (*SPLIT*\ :sub:`P`\ *ART*\ (*VERSION*\ (), ′′, 3), ′.′, 1)\ *ASVARCHAR*\ (10))\ *FROMDUALUNIONALLSELECTPROPERTY*\ :sub:`N`\ *AME*, *VALUEFROMX*\ PROPERTY@LOCAL
WHERE PROPERTY_NAME IN ( ‘SHARED_MEMORY_STATIC_SIZE’ ,‘LOG_BUFFER_SIZE’
,‘PENDING_LOG_BUFFER_COUNT’ ,‘PLAN_CLOCK_COUNT’ )

———–## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,VERSION
,IS_CLUSTER ,CATALOG_NAME ,NVL(LOCAL_MEMBER_NAME, CATALOG_NAME)
“LOCAL_MEMBER_NAME” ,STATUS ,( SELECT ARCHIVELOG_MODE FROM
X$ARCHIVELOG@LOCAL ) "ARCHIVELOG_MODE" ,CHARACTER_SET_NAME ,CREATED_TIME
,STARTUP_TIME ,NVL((SELECT TO_CHAR(CPU_OPS) FROM STAT_SYSTEM@LOCAL),
'NULL') "CPU_OPS" ,NVL((SELECT TO_CHAR(NETWORK_IOPS) FROM
STAT_SYSTEM@LOCAL), 'NULL') "NETWORK_IOPS" ,NVL((SELECT
TO_CHAR(NETWORK_BUFSIZE) FROM STAT_SYSTEM@LOCAL), 'NULL')
"NETWORK_BUFSIZE" ,NVL((SELECT TO_CHAR(ANALYZED_TIME, 'YYYY-MM-DD
HH24:MI:SS') FROM STAT_SYSTEM@LOCAL), 'NULL') "LAST_ANALYZED" FROM (
SELECT CATALOG_NAME ,IS_CLUSTER ,CHARACTER_SET_NAME
,TO_CHAR(CREATED_TIME, 'YYYY-MM-DD HH24:MI:SS') "CREATED_TIME" FROM
CATALOG_NAME@LOCAL ), ( SELECT VERSION ,LOCAL_MEMBER_NAME ,STATUS
,TO_CHAR(STARTUP_TIME, 'YYYY-MM-DD HH24:MI:SS') "STARTUP_TIME" FROM
X$INSTANCE@LOCAL )

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,PROPERTY_NAME ,SOURCE ,STARTUP_PHASE ,MODIFIABLE ,DOMAIN ,CLUSTER_SCOPE
,DATA_TYPE ,UNIT ,VALUE FROM ( SELECT PROPERTY_NAME ,SOURCE
,STARTUP_PHASE ,MODIFIABLE ,DOMAIN ,CLUSTER_SCOPE ,DATA_TYPE ,UNIT
,VALUE FROM
X\ *PROPERTY*\ @\ *LOCALWHEREINIT*\ :sub:`S`\ *OURCE*! = ′\ *DEFAULT*\ ′\ *UNIONALLSELECTPROPERTY*\ :sub:`N`\ *AME*, *SOURCE*, *STARTUP*\ :sub:`P`\ *HASE*, *MODIFIABLE*, *DOMAIN*, *CLUSTER*\ :sub:`S`\ *COPE*, *DATA*\ :sub:`T`\ *YPE*, *UNIT*, *VALUEFROMX*\ SPROPERTY@LOCAL
) GROUP BY PROPERTY_NAME ,SOURCE ,STARTUP_PHASE ,MODIFIABLE ,DOMAIN
,CLUSTER_SCOPE ,DATA_TYPE ,UNIT ,VALUE ORDER BY PROPERTY_NAME

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,NAME
,VALUE FROM X$KN_SYSTEM_INFO@LOCAL WHERE NAME IN (
‘FIXED_STATIC_ALLOC_SIZE’ ,‘VARIABLE_STATIC_TOTAL_SIZE’
,‘VARIABLE_STATIC_ALLOC_SIZE’ )

| ———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
  ,FAL.DESC “DESCRIPTION” ,FAL.ALLOCATOR_ID ,CAST( CASE
  FAL.ALLOCATOR_TYPE WHEN 0 THEN ‘NONE’ WHEN 1 THEN ‘REGION’ WHEN 2 THEN
  ‘DYNAMIC’ WHEN 3 THEN ‘ARRAY’ ELSE ‘NULL’ END AS VARCHAR(16) )
  “ALLOCATOR_TYPE” ,CAST( CASE FAL.STORAGE_TYPE WHEN 0 THEN ‘NONE’ WHEN
  1 THEN ‘HEAP’ WHEN 2 THEN ‘SHM’ WHEN 3 THEN ‘HEAP \| SHM’ WHEN 4 THEN
  ‘PLAN’ WHEN 8 THEN ‘MMAP’ ELSE ‘NULL’ END AS VARCHAR(16) )
  “STORAGE_TYPE” ,CAST( CASE FAL.ALLOCATOR_CATEGORY WHEN 0 THEN ‘NONE’
  WHEN 1 THEN ‘SESSION_ENV’ WHEN 2 THEN ‘PROCESS_ENV’ WHEN 3 THEN
  ‘PROCESS’ WHEN 4 THEN ‘SYSTEM’ WHEN 5 THEN ‘STATEMENT’ ELSE ‘NULL’ END
  AS VARCHAR(16) ) “ALLOCATOR_CATEGORY” ,CAST ( CASE FAL.ALLOCATOR_LAYER
  WHEN 0 THEN ‘NONE’ WHEN 1 THEN ‘STANDARD’ WHEN 2 THEN ‘DATATYPE’ WHEN
  3 THEN ‘COMMUNICATION’ WHEN 4 THEN ‘KERNEL’ WHEN 5 THEN
  ‘SERVER_COMMUNICATION’ WHEN 6 THEN ‘STORAGE_MANAGER’ WHEN 7 THEN
  ‘EXECUTION_LIBRARY’ WHEN 8 THEN ‘CLUSTER’ WHEN 9 THEN ‘SQL_PROCESSOR’
  WHEN 10 THEN ‘PSM_PROCESSOR’ WHEN 11 THEN ‘SESSION’ WHEN 12 THEN
  ‘SERVER_LIBRARY’ WHEN 13 THEN ‘GLIESE_LIBRARY’ WHEN 14 THEN
  ‘GLIESE_TOOL’ WHEN 15 THEN ‘GOLDILOCKS_LIBRARY’ WHEN 16 THEN
  ‘GOLDILOCKS_TOOL’ ELSE ‘NULL’ END AS VARCHAR(32) ) “ALLOCATOR_LAYER”
  ,CAST( ‘NULL’ AS VARCHAR(4) ) “SSA_MEM_ALLOC_COUNT”
  ,ROUND(FDMU.ALLOC_SIZE / 1024 / 1024, 0)
  “ALLOCATED_DYNAMIC_ALLOC_SIZE(MB)” FROM
  X\ *ALLOCATOR*\ @\ *LOCALFAL*, *X*\ DYNAMIC_MEM_USAGE@LOCAL FDMU WHERE
  FAL.ALLOCATOR_ID = FDMU.ALLOCATOR_ID AND FDMU.ALLOC_SIZE != 0 ORDER BY
  FDMU.ALLOC_SIZE DESC
| ,FAL.ALLOCATOR_ID

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,CAST(
CASE ALLOCATOR_ID WHEN 68 THEN ‘CLUSTER_PACKET_SESSION’ WHEN 69 THEN
‘CLUSTER_SYNC_RESPONSE’ WHEN 100 THEN ‘CS_SHARED_PACKET’ ELSE ‘NULL’ END
AS VARCHAR(64) ) “ALLOCATOR_NAME” ,SEQ_ID ,ROUND(INIT_SIZE / 1024 /
1024, 0) “INIT_SIZE(MB)” ,TOTAL_ELEMENT_COUNT ,USED_ELEMENT_COUNT
,ALLOCATED_DYNAMIC_MEMORY_COUNT ,ALLOCATED_DYNAMIC_MEMORY_SIZE FROM
X$ARRAY_ALLOCATOR@LOCAL ORDER BY ALLOCATOR_ID ,SEQ_ID

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,USER_NAME ,USER_ID ,ACCOUNT_STATUS ,NVL(DEFAULT_TABLESPACE, ‘NULL’)
“DEFAULT_TABLESPACE” ,NVL(TEMPORARY_TABLESPACE, ‘NULL’)
“TEMPORARY_TABLESPACE” ,NVL(INDEX_TABLESPACE, ‘NULL’) “INDEX_TABLESPACE”
,NVL(PROFILE_NAME, ‘NULL’) “PROFILE_NAME” ,NVL(LOCK_DATE, ‘NULL’)
“LOCK_DATE” ,NVL(EXPIRY_DATE, ‘NULL’) “EXPIRY_DATE”
,FAILED_LOGIN_ATTEMPTS ,NVL(CREATED_DATE, ‘NULL’) “CREATED_DATE” FROM (
SELECT AUTH.AUTHORIZATION_NAME “USER_NAME” ,AUTH.AUTH_ID “USER_ID”
,CAST( CASE WHEN (USR.EXPIRY_STATUS = ‘OPEN’ AND USR.LOCKED_STATUS =
‘OPEN’ ) THEN ‘OPEN’ WHEN (USR.EXPIRY_STATUS = ‘OPEN’ AND
USR.LOCKED_STATUS <> ‘OPEN’ ) THEN USR.LOCKED_STATUS WHEN
(USR.EXPIRY_STATUS <> ‘OPEN’ AND USR.LOCKED_STATUS = ‘OPEN’ ) THEN
USR.EXPIRY_STATUS ELSE USR.EXPIRY_STATUS \|\| ’ & ’ \|\|
USR.LOCKED_STATUS END AS VARCHAR(32) ) “ACCOUNT_STATUS” ,( SELECT
SPC.TABLESPACE_NAME FROM DEFINITION_SCHEMA.TABLESPACES@LOCAL AS SPC
WHERE SPC.TABLESPACE_ID = USR.DEFAULT_DATA_TABLESPACE_ID )
“DEFAULT_TABLESPACE” ,( SELECT SPC.TABLESPACE_NAME FROM
DEFINITION_SCHEMA.TABLESPACES@LOCAL AS SPC WHERE SPC.TABLESPACE_ID =
USR.DEFAULT_TEMP_TABLESPACE_ID ) “TEMPORARY_TABLESPACE” ,( SELECT
SPC.TABLESPACE_NAME FROM DEFINITION_SCHEMA.TABLESPACES@LOCAL AS SPC
WHERE SPC.TABLESPACE_ID = USR.DEFAULT_INDEX_TABLESPACE_ID )
“INDEX_TABLESPACE” ,( SELECT PROFILE_NAME FROM
DEFINITION_SCHEMA.PROFILES@LOCAL PROF WHERE PROF.PROFILE_ID =
USR.PROFILE_ID ) “PROFILE_NAME” ,TO_CHAR(USR.LOCKED_TIME, ‘YYYY-MM-DD
HH24:MI:SS’) “LOCK_DATE” ,TO_CHAR(USR.EXPIRY_TIME, ‘YYYY-MM-DD
HH24:MI:SS’) “EXPIRY_DATE” ,USR.FAILED_LOGIN_ATTEMPTS
“FAILED_LOGIN_ATTEMPTS” ,TO_CHAR(AUTH.CREATED_TIME, ‘YYYY-MM-DD
HH24:MI:SS’) “CREATED_DATE” FROM DEFINITION_SCHEMA.AUTHORIZATIONS@LOCAL
AS AUTH ,DEFINITION_SCHEMA.USERS@LOCAL AS USR WHERE AUTH.AUTH_ID =
USR.AUTH_ID ) ORDER BY USER_ID

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,DPROF.PROFILE_NAME ,DPRAM.PARAMETER_NAME ,DPRAM.PARAMETER_STRING FROM
DEFINITION_SCHEMA.PROFILES@LOCAL AS DPROF
,DEFINITION_SCHEMA.PROFILE_PASSWORD_PARAMETER@LOCAL AS DPRAM WHERE
DPROF.PROFILE_ID = DPRAM.PROFILE_ID ORDER BY DPRAM.PROFILE_ID
,DPRAM.PARAMETER_ID

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,DUSR.AUTHORIZATION_NAME “USER_NAME” ,DUSR.AUTHORIZATION_TYPE
“USER_TYPE” ,DUPATH.SEARCH_ORDER “SEARCH_OREDER” ,DSCH.SCHEMA_NAME
“SCHEMA_NAME” FROM DEFINITION_SCHEMA.USER_SCHEMA_PATH@LOCAL AS DUPATH
,DEFINITION_SCHEMA.SCHEMATA@LOCAL AS DSCH
,DEFINITION_SCHEMA.AUTHORIZATIONS@LOCAL AS DUSR WHERE DUPATH.AUTH_ID NOT
IN ( 2 ) AND DUPATH.SCHEMA_ID = DSCH.SCHEMA_ID AND DUPATH.AUTH_ID =
DUSR.AUTH_ID ORDER BY DUSR.AUTH_ID ,DUPATH.SEARCH_ORDER

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,BACKUP_SEQ ,BACKUP_LEVEL ,BACKUP_OBJECT ,BACKUP_OPTION ,BACKUP_LSN
,BACKUP_FILE ,TO_CHAR(BEGIN_TIME, ‘YYYY-MM-DD HH24:MI:SS’) “BEGIN_TIME”
,TO_CHAR(COMPLETION_TIME, ‘YYYY-MM-DD HH24:MI:SS’) “COMPLETION_TIME”
FROM
X\ *CONTROLFILE*\ :sub:`B`\ *ACKUP*\ :sub:`S`\ *ECTION*\ @\ *LOCALWHERECONTROLFILE*\ :sub:`N`\ *AME* = (*SELECTCONTROLFILE*\ :sub:`N`\ *AMEFROMFIXED*\ :sub:`T`\ *ABLE*\ :sub:`S`\ *CHEMA*.\ *X*\ CONTROLFILE@LOCAL
WHERE IS_PRIMARY IS TRUE ) ORDER BY BACKUP_SEQ

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,DPOL.POLICY_NAME ,CAST( CASE WHEN ( SELECT COUNT(\*) FROM
DEFINITION_SCHEMA.AUDIT_POLICY_ENABLE@LOCAL AS DAPE WHERE DAPE.POLICY_ID
= DPOL.POLICY_ID ) > 0 THEN ‘TRUE’ ELSE ‘FALSE’ END AS VARCHAR(5) )
“ENABLED” ,NVL(DAPE.ENABLE_OPT_NAME, ‘NULL’) “ENABLE_OPT_NAME”
,NVL(CAST( CASE WHEN ( DAPE.ENABLE_OPT_ID = 1 ) THEN ‘ALL USERS’ ELSE (
SELECT DAUTH.AUTHORIZATION_NAME FROM
DEFINITION_SCHEMA.AUTHORIZATIONS@LOCAL AS DAUTH WHERE DAUTH.AUTH_ID =
DAPE.USER_ID ) END AS VARCHAR(128) ), ‘NULL’) “USER_NAME” ,NVL(CAST(
DAPE.WHEN_SUCCESS AS VARCHAR(5) ), ‘NULL’) “WHEN_SUCCESS” ,NVL(CAST(
DAPE.WHEN_FAILURE AS VARCHAR(5) ), ‘NULL’) “WHEN_FAILURE” FROM
DEFINITION_SCHEMA.AUDIT_POLICY@LOCAL DPOL LEFT OUTER JOIN
DEFINITION_SCHEMA.AUDIT_POLICY_ENABLE@LOCAL DAPE ON DAPE.POLICY_ID =
DPOL.POLICY_ID ORDER BY DPOL.POLICY_NAME ,ENABLED

| ———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,ID
  “SESSION_ID” ,SERIAL ,TRANS_ID ,CONNECTION “CON_TYPE” ,DBC_TYPE
  ,DAUTH.AUTHORIZATION_NAME ,WATCH ,SERVER “SERVER_TYPE” ,CLIENT_PROCESS
  “CLIENT_PID” ,SERVER_PROCESS “SERVER_PID” ,PROGRAM “PROGRAM_NAME”
  ,NVL(ADDRESS, ‘NULL’) “ADDRESS” ,PORT ,DRIVER_MEMBER_POS
  ,DRIVER_SESSION_ID ,DRIVER_SESSION_SERIAL ,GLOBAL_CONNECTION
  ,GLOBAL_SESSION
| FROM X$SESSION@LOCAL XS ,DEFINITION_SCHEMA.AUTHORIZATIONS@LOCAL DAUTH
  WHERE XS.USER_ID = DAUTH.AUTH_ID AND ID != 1 AND USER_ID != 0 ORDER BY
  ID

| ———-## WITH WS AS ( SELECT /*+ MATERIALIZE* / TRANS_ID ,CONNECTION
  ,STATUS ,SERVER ,PROGRAM ,GLOBAL_CONNECTION ,GLOBAL_SESSION ,IN_FULL
  ,IN_JOB ,FAILED_OVER ,IS_AUDITED FROM X$SESSION@LOCAL ) SELECT
  TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS') "DATE" ,'CLIENT_MAX_COUNT'
  "NAME" ,CAST( VALUE AS NUMBER ) "COUNT" FROM X$PROPERTY@LOCAL WHERE
  PROPERTY_NAME = ‘CLIENT_MAX_COUNT’ UNION ALL SELECT TO_CHAR(SYSDATE,
  ‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,‘PROCESS_MAX_COUNT’ “NAME” ,CAST(
  VALUE AS NUMBER ) “COUNT” FROM X$PROPERTY@LOCAL WHERE PROPERTY_NAME =
  ‘PROCESS_MAX_COUNT’ UNION ALL SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD
  HH24:MI:SS’) “DATE” ,‘TOTAL_SESSION_COUNT’ “NAME” ,COUNT(*) “COUNT”
  FROM WS UNION ALL SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’)
  “DATE” ,‘DA_TYPE_COUNT’ ,COUNT(*)
| FROM WS WHERE CONNECTION = ‘DA’ UNION ALL SELECT TO_CHAR(SYSDATE,
  ‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,‘TCP_TYPE_COUNT’ ,COUNT(*) FROM WS
  WHERE CONNECTION = ‘TCP’ UNION ALL SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD
  HH24:MI:SS’) “DATE” ,‘IPC_TYPE_COUNT’ ,COUNT(*) FROM WS WHERE
  CONNECTION = ‘IPC’
| UNION ALL SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
  ,‘DEDICATED_SESSION_COUNT’ ,COUNT(*) FROM WS WHERE SERVER =
  ‘DEDICATED’ UNION ALL SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’)
  “DATE” ,‘SHARED_SESSION_COUNT’ ,COUNT(*) FROM WS WHERE SERVER =
  ‘SHARED’ UNION ALL SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’)
  “DATE” ,‘RUNNING_STATUS_COUNT’ ,COUNT(*) FROM WS WHERE TRANS_ID <> -1
  UNION ALL SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
  ,‘CLUSTER_PEER_COUNT’ ,COUNT(*) FROM WS WHERE PROGRAM = ‘cluster peer’
  UNION ALL SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
  ,‘SIGNALED_STATUS_COUNT’ ,COUNT(*) FROM WS WHERE STATUS = ‘SIGNALED’
  UNION ALL SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
  ,‘SNIPED_STATUS_COUNT’ ,COUNT(*) FROM WS WHERE STATUS = ‘SNIPED’ UNION
  ALL SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
  ,‘DEAD_STATUS_COUNT’ ,COUNT(*) FROM WS WHERE STATUS = ‘DEAD’ UNION ALL
  SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
  ,‘UNKNOWN_STATUS_COUNT’ ,COUNT(*) FROM WS WHERE STATUS = ‘UNKNOWN’
  UNION ALL SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
  ,‘GLOBAL_CONNECTION_COUNT’ ,COUNT(*) FROM WS WHERE GLOBAL_CONNECTION
  IS TRUE UNION ALL SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’)
  “DATE” ,‘GLOBAL_SESSION_COUNT’ ,COUNT(*) FROM WS WHERE GLOBAL_SESSION
  IS TRUE UNION ALL SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’)
  “DATE” ,‘QUEUE_FULL_COUNT’ ,SUM(IN_FULL) FROM WS UNION ALL SELECT
  TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,‘QUEUE_JOB_COUNT’
  ,SUM(IN_JOB) FROM WS UNION ALL SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD
  HH24:MI:SS’) “DATE” ,‘SET_FAILOVER_COUNT’ ,COUNT(*) FROM WS WHERE
  FAILED_OVER = ‘TRUE’ UNION ALL SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD
  HH24:MI:SS’) “DATE” ,‘AUDITED_SESSION_COUNT’ ,COUNT(*) FROM WS WHERE
  IS_AUDITED IS TRUE

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,PROGRAM
,DBC_TYPE ,CONNECTION ,VERSION ,NVL(ADDRESS, ‘NULL’) “ADDRESS”
,COUNT(\*) FROM X$SESSION@LOCAL WHERE USER_ID <> 0 AND PROGRAM NOT LIKE
‘gmaster’ GROUP BY PROGRAM ,DBC_TYPE ,CONNECTION ,VERSION ,ADDRESS ORDER
BY CONNECTION ,VERSION ,ADDRESS

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,XST.SESSION_ID ,XST.DRIVER_MEMBER_POS ,NVL(XCM.MEMBER_NAME, ‘NULL’)
“DRIVER_MEMBER_NAME” ,XST.ID “STATEMENT_ID” ,XST.START_EXEC
,XST.VIEW_SCN ,SUBSTR(XST.SQL_TEXT, 1, ? ) “SQL_TEXT”
,TO_CHAR(XST.START_TIME, ‘YYYY-MM-DD HH24:MI:SS’) “START_TIME”
,XST.LAST_EXEC_TIME ,XST.EXECUTIONS ,XST.IS_CLUSTER_SESSION
,XST.IS_REMOTE_ACCESS FROM
X\ *STATEMENT*\ @\ *LOCALXSTLEFTOUTERJOINX*\ CONTROLFILE_CLUSTER_MEMBER@LOCAL
XCM ON XST.DRIVER_MEMBER_POS = XCM.MEMBER_POSITION WHERE XST.VIEW_SCN !=
‘-1.-1.-1’ ORDER BY START_TIME DESC

———-## WITH WS AS ( SELECT /*+ MATERIALIZE* / START_EXEC
,IS_CLUSTER_SESSION ,EXECUTIONS ,IS_REMOTE_ACCESS FROM X$STATEMENT@LOCAL
) SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,‘TOTAL_STATEMENT_COUNT’ “NAME” ,COUNT(*) “COUNT” FROM WS UNION ALL
SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,‘ACTIVE_STATEMENT_COUNT’ “NAME” ,COUNT(*) “COUNT” FROM WS WHERE
START_EXEC IS TRUE UNION ALL SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD
HH24:MI:SS’) “DATE” ,‘CLUSTER_SESSION_COUNT’ “NAME” ,COUNT(\*) “COUNT”
FROM WS WHERE IS_CLUSTER_SESSION IS TRUE UNION ALL SELECT
TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,‘TOTAL_EXEC_COUNT’
“NAME” ,SUM(EXECUTIONS) “COUNT” FROM WS UNION ALL SELECT
TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,‘TOTAL_IS_REMOTE_ACCESS_COUNT’ “NAME” ,COUNT(IS_REMOTE_ACCESS) “COUNT”
FROM WS WHERE IS_REMOTE_ACCESS IS TRUE

| ———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
  ,XST.SESSION_ID
| ,XST.DRIVER_MEMBER_POS ,NVL(XCM.MEMBER_NAME, ‘NULL’)
  “DRIVER_MEMBER_NAME”
| ,XST.ID “STATEMENT_ID” ,XST.START_EXEC ,XST.VIEW_SCN
  ,SUBSTR(XST.SQL_TEXT, 1, ? ) “SQL_TEXT” ,TO_CHAR(XST.START_TIME,
  ‘YYYY-MM-DD HH24:MI:SS’) “START_TIME” ,XST.LAST_EXEC_TIME
  ,XST.TOTAL_EXEC_TIME ,XST.EXECUTIONS ,XST.IS_CLUSTER_SESSION
  ,XST.IS_REMOTE_ACCESS FROM
  X\ *STATEMENT*\ @\ *LOCALXSTLEFTOUTERJOINX*\ CONTROLFILE_CLUSTER_MEMBER@LOCAL
  XCM ON XST.DRIVER_MEMBER_POS = XCM.MEMBER_POSITION
| WHERE XST.VIEW_SCN != ‘-1.-1.-1’ AND DATEDIFF( SECOND, XST.START_TIME,
  LOCALTIMESTAMP ) > ? ORDER BY XST.START_TIME LIMIT ?

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,XTT.SESSION_ID ,XTT.DRIVER_MEMBER_POS ,NVL(XCM.MEMBER_NAME, ‘NULL’)
“DRIVER_MEMBER_NAME” ,XTT.DRIVER_TRANS_ID ,XTT.LOGICAL_TRANS_ID ,XTT.TCN
,XTT.STATE ,XTT.VIEW_SCN ,XTT.USED_UNDO_PAGE_COUNT ,XTT.UNDO_SEGMENT_ID
,TO_CHAR(XTT.BEGIN_TIME, ‘YYYY-MM-DD HH24:MI:SS’) “BEGIN_TIME” FROM
X\ *TRANSACTION*\ @\ *LOCALXTTLEFTOUTERJOINX*\ CONTROLFILE_CLUSTER_MEMBER@LOCAL
XCM ON XTT.DRIVER_MEMBER_POS = XCM.MEMBER_POSITION

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,‘ACTIVE_TRANSACTION_COUNT’ “NAME” ,COUNT(*) “COUNT” FROM
X$TRANSACTION@LOCAL UNION ALL SELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD
HH24:MI:SS') "DATE" ,'INDOUBT_TRANSACTION_COUNT' ,COUNT(\*) "COUNT" FROM
X$INDOUBT_TRANSACTION@LOCAL UNION ALL SELECT TO_CHAR(SYSDATE,
‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,‘LOCAL_JOURNALING_TRANSACTION_COUNT’
,COUNT(*) “COUNT” FROM X$LOCAL_JOURNALING@LOCAL UNION ALL SELECT
TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS') "DATE"
,'GLOBAL_JOURNALING_TRANSACTION_COUNT' ,COUNT(\*) "COUNT" FROM
X$GLOBAL_JOURNALING@LOCAL UNION ALL SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD
HH24:MI:SS’) “DATE” ,‘LOCAL_LOCKWAIT_COUNT’ ,COUNT(\*) “COUNT” FROM
X$LOCK_WAIT@LOCAL UNION ALL SELECT TO_CHAR(SYSDATE, 'YYYY-MM-DD
HH24:MI:SS') "DATE" ,'GLOBAL_LOCKWAIT_COUNT' ,COUNT(\*) "COUNT" FROM
X$GLOBAL_LOCK_WAIT@LOCAL

———-## SELECT /*+USE_NL(XT,XS)* / TO_CHAR(SYSDATE, ‘YYYY-MM-DD
HH24:MI:SS’) “DATE” ,XT.SESSION_ID “SESSION_ID” ,XS.SERIAL
“SESSION_SERIAL” ,XT.LOGICAL_TRANS_ID “LOGICAL_TRANS_ID” ,XT.STATE
“STATE” ,XT.VIEW_SCN “VIEW_SCN” ,XT.PREV_COMMIT_SCN “PREV_COMMIT_SCN”
,XT.COMMIT_SCN “COMMIT_SCN” ,CAST( CASE WHEN XS.PROGRAM = ‘cluster peer’
THEN TRUE ELSE FALSE END AS BOOLEAN ) “IS_CLUSTER_SESSION”
,TO_CHAR(XT.BEGIN_TIME, ‘YYYY-MM-DD HH24:MI:SS’) “BEGIN_TIME” FROM
X\ *TRANSACTION*\ @\ *LOCALXTINNERJOINX*\ SESSION@LOCAL XS ON
XT.SESSION_ID = XS.ID WHERE DATEDIFF( SECOND, XT.BEGIN_TIME,
SYSTIMESTAMP ) > ? ORDER BY XT.BEGIN_TIME LIMIT ?

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,CLOCK_ID
,FLANGE_COUNT ,FREE_FLANGE_COUNT ,PLAN_COUNT ,ROUND(FLANGE_ALLOC_SIZE /
1024 / 1024, 0) “FLANGE_ALLOC_SIZE(MB)” ,ROUND(PLAN_ALLOC_SIZE / 1024 /
1024, 0) “PLAN_ALLOC_SIZE(MB)” FROM X$PLAN_CLOCK@LOCAL ORDER BY CLOCK_ID

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,ROUND(TOTAL_SIZE / 1024 / 1024, 0) “TOTAL_SIZE(MB)” ,ROUND(USED_SIZE /
1024 / 1024, 0) “USED_SIZE(MB)” ,( SELECT COUNT(*) FROM
X$SQL_CACHE@LOCAL ) "TOTAL_PLAN_COUNT" ,( SELECT COUNT(\*) FROM
X$SQL_CACHE@LOCAL WHERE DROPPED IS FALSE ) “STORED_PLAN_COUNT” ,( SELECT
COUNT(*) FROM X$SQL_CACHE@LOCAL WHERE DROPPED IS TRUE )
"DROPPED_PLAN_COUNT" FROM X$DYNAMIC_MEM@LOCAL WHERE DESC = ‘parent
dynamic allocator for plan cache’

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,FSCP.SQL_HANDLE ,FSCP.REF_COUNT ,FSCP.PLAN_IDX ,ROUND(FSCP.PLAN_SIZE /
1024 ) “PLAN_SIZE(KB)” ,CAST( ‘NULL’ AS VARCHAR(4) ) “SESS_USER_NAME”
,CAST( ‘NULL’ AS VARCHAR(4) ) “IS_CLUSTER_SESSION” ,FSCP.IS_ATOMIC
,FSCP.HAS_HINT_ERROR ,FSCP.BIND_COUNT ,SUBSTR(LTRIM(FSCP.SQL_STRING), 1,
? ) “SQL_TEXT” ,FSCP.TOTAL_EXEC_COUNT ,ROUND(FSCP.TOTAL_EXEC_TIME / 1000
/ 1000) “TOTAL_EXEC_TIME(SEC)” FROM X$SQL_CACHE_PLAN@LOCAL FSCP WHERE
ROUND(FSCP.TOTAL_EXEC_TIME / 1000 / 1000) > ? ORDER BY TOTAL_EXEC_TIME
DESC LIMIT ?

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,SESSION_ID ,CURSOR_NAME ,CAST( ‘NULL’ AS VARCHAR(4) ) “PSM_SEQ”
,IS_OPEN ,VIEW_SCN ,IS_SENSITIVE ,IS_SCROLLABLE ,IS_HOLDABLE
,IS_UPDATABLE ,SUBSTR(LTRIM(CURSOR_QUERY), 1, ? ) “SQL_TEXT”
,TO_CHAR(OPEN_TIME, ‘YYYY-MM-DD HH24:MI:SS’) “OPEN_TIME” ,EXECUTIONS
,LAST_EXEC_TIME ,TOTAL_EXEC_TIME FROM X$NAMED_CURSOR@LOCAL ORDER BY
OPEN_TIME

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,GLOBAL_SCN ,LOCAL_SCN ,AGABLE_SCN ,AGABLE_SCN_GAP ,TO_NUMBER(
SPLIT_PART(AGABLE_SCN_GAP, ‘.’, 1) ) “GLOBAL_GAP” ,TO_NUMBER(
SPLIT_PART(AGABLE_SCN_GAP, ‘.’, 2) ) “DOMAIN_GAP” ,TO_NUMBER(
SPLIT_PART(AGABLE_SCN_GAP, ‘.’, 3) ) “LOCAL_GAP”
,SESSION_ID_BLOCKING_AGABLE_VIEW_SCN “AGABLE_VIEW_BLOCK_SESSION_ID”
,SESSION_ID_BLOCKING_AGABLE_STMT_SCN “AGABLE_STMT_BLOCK_SESSION_ID”
,SESSION_ID_BLOCKING_AGABLE_SCN “AGABLE_SCN_BLOCK_SESSION_ID”
,SESSION_ID_BLOCKING_MIN_TRANS_VIEW_SCN
“MIN_TRANS_VIEW_BLOCK_SESSION_ID” FROM X$AGABLE_INFO@LOCAL

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,NVL(XTS.SESSION_ID, -1) “SESSION_ID” ,XUS.SEGMENT_ID
,ROUND(XUS.ALLOC_PAGE_COUNT \* 8192 / 1024 / 1024, 0) “ALLOC_SIZE(MB)”
,NVL(TO_CHAR(XTS.LOGICAL_TRANS_ID), -1) “LOGICAL_TRANS_ID”
,NVL(XTS.STATE, ‘NULL’) “STATE” ,NVL(XTS.VIEW_SCN, ‘NULL’) “VIEW_SCN”
,NVL(XTS.PREV_COMMIT_SCN, ‘NULL’) “PREV_COMMIT_SCN” ,NVL(XTS.COMMIT_SCN,
‘NULL’) “COMMIT_SCN” ,NVL(TO_CHAR(XTS.BEGIN_TIME, ‘YYYY-MM-DD
HH24:MI:SS’), ‘NULL’) “BEGIN_TIME” FROM
X\ *UNDO*\ :sub:`S`\ *EGMENT*\ @\ *LOCALXUSLEFTOUTERJOINX*\ TRANSACTION@LOCAL
XTS ON XUS.PHYSICAL_ID = XTS.UNDO_SEGMENT_ID WHERE XUS.ALLOC_PAGE_COUNT
> ? ORDER BY XUS.ALLOC_PAGE_COUNT DESC LIMIT ?

| ———-## SELECT /*+ USE_NL( XW, XTG, XSG, XTR, XSR )* / TO_CHAR(SYSDATE,
  ‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,XTG.SESSION_ID “GRANT_SESSION_ID”
  ,XSG.SERIAL “GRANT_SESSION_SERIAL” ,CAST( CASE WHEN XSG.PROGRAM =
  ‘cluster peer’ THEN TRUE ELSE FALSE END AS BOOLEAN )
  “GRANT_IS_CLUSTER_SESSION”
| ,XTG.LOGICAL_TRANS_ID “GRANT_LOGICAL_TRANS_ID” ,XTG.STATE
  “GRANT_STATE” ,XTG.PREV_COMMIT_SCN “GRANT_PREV_COMMIT_SCN”
  ,XTG.COMMIT_SCN “GRANT_COMMIT_SCN” ,TO_CHAR(XTG.BEGIN_TIME,
  ‘YYYY-MM-DD HH24:MI:SS’) “GRANT_BEGIN_TIME” ,XTR.SESSION_ID
  “REQ_SESSION_ID” ,XSR.SERIAL “REQ_SESSION_SERIAL” ,CAST( CASE WHEN
  XSR.PROGRAM = ‘cluster peer’ THEN TRUE ELSE FALSE END AS BOOLEAN )
  “REQ_IS_CLUSTER_SESSION” ,XTR.LOGICAL_TRANS_ID “REQ_LOGICAL_TRANS_ID”
  ,XTR.STATE “REQ_STATE” ,XTR.PREV_COMMIT_SCN “REQ_PREV_COMMIT_SCN”
  ,XTR.COMMIT_SCN “REQ_COMMIT_SCN” ,TO_CHAR(XTR.BEGIN_TIME, ‘YYYY-MM-DD
  HH24:MI:SS’) “REQ_BEGIN_TIME” FROM
  X\ *LOCK*\ :sub:`W`\ *AIT*\ @\ *LOCALXWLEFTOUTERJOINX*\ TRANSACTION@LOCAL
  XTG ON XW.GRANTED_TRANSACTION_SLOT_ID = XTG.SLOT_ID INNER JOIN
  X\ *SESSION*\ @\ *LOCALXSGONXTG*.\ *SESSION*\ :sub:`I`\ *D* = *XSG*.\ *IDLEFTOUTERJOINX*\ TRANSACTION@LOCAL
  XTR ON XW.REQUEST_TRANSACTION_SLOT_ID = XTR.SLOT_ID INNER JOIN
  X$SESSION@LOCAL XSR ON XTR.SESSION_ID = XSR.ID

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,XLG.GROUP_ID ,XLG.STATE ,XLM.NAME “FILE_NAME” ,XLG.FILE_SEQ_NO
,ROUND(XLG.FILE_SIZE / 1024 / 1024, 0) “FILE_SIZE(MB)” ,XLG.PREV_LSN
,TO_CHAR(XLG.SWITCHED_ON_TIME, ‘YYYY-MM-DD HH24:MI:SS’)
“SWITCHED_ON_TIME” ,TO_CHAR(XLG.SWITCHED_OFF_TIME, ‘YYYY-MM-DD
HH24:MI:SS’) “SWITCHED_OFF_TIME” ,TO_CHAR(XLG.INACTIVE_TIME, ‘YYYY-MM-DD
HH24:MI:SS’) “INACTIVE_TIME” FROM
X\ *LOG*\ :sub:`G`\ *ROUP*\ @\ *LOCALXLG*, *X*\ LOG_MEMBER@LOCAL XLM
WHERE XLG.GROUP_ID = XLM.GROUP_ID

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,ROUND(XLB.BUFFER_SIZE / 1024 / 1024, 0) “BUFFER_SIZE(MB)” ,XLB.REAR_LSN
- XLB.FRONT_LSN “LSN_GAP” ,XLS.FLUSH_COUNT ,XLS.FLUSH_TRY_COUNT
,XLS.WAIT_COUNT_BY_BUFFER_FULL ,XLS.BLOCKED_LOGGING_COUNT
,XLS.COMPRESSION_COUNT ,(SELECT COUNT(*) FROM X$PENDING_LOG_BUFFER@LOCAL
WHERE REAR_LSN <> -1) "PENDING_BUFFER_USED_COUNT" ,XLS.FILE_SEQ_NO
"REDO_FILE_SEQ_NO" ,TO_CHAR(ROUND(REAR_FILE_BLOCK_SEQ_NO / ( SELECT
FILE_SIZE / XLS.BLOCK_SIZE FROM X$LOG_GROUP@LOCAL WHERE FILE_SEQ_NO =
XLS.FILE_SEQ_NO )* 100, 3 )) “REDO_FILE_RATIO(%)” FROM
X\ *LOG*\ :sub:`S`\ *TREAM*\ @\ *LOCALXLS*, *X*\ LOG_BUFFER@LOCAL XLB

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,ROUND(BUFFER_POOL_SIZE \* 8192 / 1024 / 1024, 0)
“BUFFER_CACHE_SIZE(MB)” ,HASH_BUCKET_COUNT ,LRU_LIST_COUNT
,FREE_LIST_COUNT ,FLUSH_LIST_COUNT ,CHECKPOINT_LIST_COUNT
,HOT_REGION_PERCENTAGE ,HOT_REGION_CRITERIA FROM X$BUFFER_STAT@LOCAL

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,BUFFER_LOOKUPS ,BUFFER_HIT ,BUFFER_MISS ,TO_CHAR(ROUND(BUFFER_HIT /
BUFFER_LOOKUPS \* 100, 3)) “BUFFER_HIT_RATION(%)” ,FREE_BUFFER_WAIT
,READ_COMPLETE_WAIT ,TOTAL_READS “TOTAL_NUMBER_PHYSICAL_READ”
,TOTAL_WRITES “TOTAL_NUMBER_PHYSICAL_WRITE” ,TOTAL_TIME_TAKEN_TO_READ
,TOTAL_TIME_TAKEN_TO_WRITE ,MOVED_TO_HOT_REGION ,MOVED_TO_COLD_REGION
,MOVED_TO_FLUSH_LIST FROM X$BUFFER_STAT@LOCAL

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,NVL(XSS.NAME, XTS.NAME) “NAME” ,NVL(XDF.PATH, ‘NULL’) PATH
,ROUND(XSS.SIZE / 1024 / 1024, 0) “SHARED_MEMORY_SIZE(MB)”
,NVL(ROUND(XDF.SIZE / 1024 / 1024, 0), -1) “DATAFILE_SIZE(MB)”
,XSS.LARGE_PAGES FROM
X\ *SHM*\ :sub:`S`\ *EGMENT*\ @\ *LOCALXSSLEFTOUTERJOINX*\ DATAFILE@LOCAL
XDF ON XDF.SHM_SEGMENT_ID != 0 AND XSS.ID = XDF.SHM_SEGMENT_ID LEFT
OUTER JOIN X$TABLESPACE@LOCAL XTS ON XDF.TABLESPACE_ID = XTS.ID ORDER BY
NAME DESC ,XDF.SHM_SEGMENT_ID

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,XTS.NAME
“TABLESPACE_NAME” ,XDF.PATH ,ROUND(XDF.SIZE / 1024 / 1024, 0) “SIZE(MB)”
,ROUND(XDF.MAX_SIZE / 1024 / 1024, 0) “MAX_SIZE(MB)” ,ROUND(XTS.EXTSIZE
/ 1024, 0) “EXT_SIZE(KB)” ,XDF.AUTOEXTEND ,XTS.LOGGING ,XTS.ONLINE
,XDF.CHECKPOINT_LSN ,CAST( ‘NULL’ AS VARCHAR(4) ) “MIN_RECOVERY_LSN”
,XDF.IO_GROUP_ID ,XDF.CORRUPT_PAGE_COUNT ,TO_CHAR(XDF.CREATION_TIME,
‘YYYY-MM-DD HH24:MI:SS’) “CREATION_TIME” FROM
X\ *DATAFILE*\ @\ *LOCALXDFINNERJOINX*\ DATAFILE_HEADER@LOCAL XDFH ON
XDF.TABLESPACE_ID = XDFH.TABLESPACE_ID AND XDF.DATAFILE_ID =
XDFH.DATAFILE_ID LEFT OUTER JOIN X$TABLESPACE@LOCAL XTS ON
XDF.TABLESPACE_ID = XTS.ID ORDER BY XDF.TABLESPACE_ID ,XDF.DATAFILE_ID

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,TABLESPACE_NAME ,ROUND(TOTAL / 1024 / 1024, 0) “TOTAL_SIZE(MB)”
,ROUND(USED_META / 1024 / 1024, 0) “USED_META_SIZE(MB)” ,ROUND(USED /
1024 / 1024, 0) “USED_SIZE(MB)” ,ROUND(FREED / 1024 / 1024, 0)
“FREE_SIZE(MB)” FROM ( SELECT DISTINCT XTS.EXT_SIZE ,XTBS.NAME
“TABLESPACE_NAME” ,SUM(XTS.TOTAL_EXT_COUNT) \* XTS.EXT_SIZE “TOTAL”
,SUM(XTS.USED_META_EXT_COUNT) \* XTS.EXT_SIZE “USED_META”
,SUM(XTS.USED_DATA_EXT_COUNT) \* XTS.EXT_SIZE “USED”
,SUM(XTS.FREE_EXT_COUNT) \* XTS.EXT_SIZE “FREED” FROM
X\ *TABLESPACE*\ :sub:`S`\ *TAT*\ @\ *LOCALXTS*, *X*\ TABLESPACE@LOCAL
XTBS WHERE XTS.TBS_ID = XTBS.ID GROUP BY XTS.EXT_SIZE, XTBS.NAME ) ORDER
BY TABLESPACE_NAME

———-## SELECT /*+ USE_NL( DST, DSA, DSS, DSTS )* / TO_CHAR(SYSDATE,
‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,DSA.AUTHORIZATION_NAME “OWNER”
,DSS.SCHEMA_NAME “SCHEMA_NAME” ,DST.TABLE_NAME ,DSTS.TABLESPACE_NAME
,XTC.STORAGE_MEDIA_TYPE ,CAST( CASE WHEN DST.TABLE_TYPE IN ( ‘GLOBAL
TEMPORARY’, ‘LOCAL TEMPORARY’ ) THEN ‘YES’ ELSE ‘NO’ END AS VARCHAR(3) )
“TEMPORARY” ,CAST( CASE WHEN XTC.LOGGING = TRUE THEN ‘YES’ ELSE ‘NO’ END
AS VARCHAR(3) ) “LOGGING” ,CAST( CASE WHEN DST.IS_DROPPED = TRUE THEN
‘YES’ ELSE ‘NO’ END AS VARCHAR(3) ) “DROPPED” ,CAST( CASE DST.TABLE_TYPE
WHEN ‘BASE TABLE’ THEN CASE DST.OWNER_ID WHEN 1 THEN ‘YES’ – \_SYSTEM
ELSE DECODE( DST.SET_READ_ONLY, TRUE, ‘YES’, FALSE, ‘NO’ ) END WHEN
‘VIEW’ THEN ‘YES’ WHEN ‘GLOBAL TEMPORARY’ THEN DECODE(
DST.SET_READ_ONLY, TRUE, ‘YES’, FALSE, ‘NO’ ) WHEN ‘LOCAL TEMPORARY’
THEN ‘YES’ WHEN ‘SYSTEM_VERSIONED’ THEN ‘YES’ WHEN ‘FIXED TABLE’ THEN
‘YES’ WHEN ‘DUMP TABLE’ THEN ‘YES’ WHEN ‘INSTANT TABLE’ THEN ‘YES’ WHEN
‘IMMUTABLE TABLE’ THEN ‘YES’ END AS VARCHAR(3) ) “READ_ONLY” ,CAST( CASE
WHEN DST.HAS_GSI = TRUE THEN ‘YES’ ELSE ‘NO’ END AS VARCHAR(3) )
“HAS_GSI” ,CASE WHEN DST.IS_SET_SUPPLOG_PK = TRUE THEN CAST( ‘EXPLICIT’
AS VARCHAR(32) ) ELSE CASE WHEN ( ( ( SELECT VALUE FROM
FIXED_TABLE_SCHEMA.X$PROPERTY@LOCAL WHERE PROPERTY_NAME =
'SUPPLEMENTAL_LOG_DATA_PRIMARY_KEY' ) = 'YES' ) AND ( ( SELECT COUNT(\*)
FROM DEFINITION_SCHEMA.TABLE_CONSTRAINTS@LOCAL TCT WHERE TCT.TABLE_ID =
DST.TABLE_ID AND TCT.CONSTRAINT_TYPE = 'PRIMARY KEY' ) = 1 ) ) THEN
CAST( 'IMPLICIT' AS VARCHAR(32) ) ELSE CAST( 'NO' AS VARCHAR(32) ) END
END "SUPPLEMENTAL_LOG" FROM DEFINITION_SCHEMA.TABLES@LOCAL DST
,DEFINITION_SCHEMA.AUTHORIZATIONS@LOCAL DSA
,DEFINITION_SCHEMA.SCHEMATA@LOCAL DSS
,DEFINITION_SCHEMA.TABLESPACES@LOCAL DSTS ,X$SEGMENT@LOCAL XS
,X$TABLE_CACHE@LOCAL XTC WHERE DST.OWNER_ID = DSA.AUTH_ID AND
DST.SCHEMA_ID = DSS.SCHEMA_ID AND DST.TABLESPACE_ID = DSTS.TABLESPACE_ID
AND DST.PHYSICAL_ID = XS.PHYSICAL_ID AND DST.PHYSICAL_ID =
XTC.PHYSICAL_ID AND DST.SCHEMA_ID > 6 AND XS.TBS_ID NOT IN ( 0, 1, 5 )
AND XTC.TBS_ID NOT IN ( 0, 5 ) ORDER BY DSA.AUTHORIZATION_NAME
,DSS.SCHEMA_NAME ,DST.TABLE_NAME

———-## SELECT /*+ USE_NL( DST, DSA, DSS, DSTS )* / TO_CHAR(SYSDATE,
‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,DSA.AUTHORIZATION_NAME ,DSS.SCHEMA_NAME
,DST.TABLE_NAME ,DST.PHYSICAL_ID ,DSTS.TABLESPACE_NAME
,XTC.STORAGE_MEDIA_TYPE ,CAST( CASE WHEN DST.TABLE_TYPE IN ( ‘GLOBAL
TEMPORARY’, ‘LOCAL TEMPORARY’ ) THEN ‘YES’ ELSE ‘NO’ END AS VARCHAR(3) )
“TEMPORARY” ,CAST( CASE WHEN XTC.LOGGING = TRUE THEN ‘YES’ ELSE ‘NO’ END
AS VARCHAR(3) ) “LOGGING” ,CAST( CASE WHEN DST.IS_DROPPED = TRUE THEN
‘YES’ ELSE ‘NO’ END AS VARCHAR(3) ) “DROPPED” ,CAST( CASE DST.TABLE_TYPE
WHEN ‘BASE TABLE’ THEN CASE DST.OWNER_ID WHEN 1 THEN ‘YES’ – \_SYSTEM
ELSE DECODE( DST.SET_READ_ONLY, TRUE, ‘YES’, FALSE, ‘NO’ ) END WHEN
‘VIEW’ THEN ‘YES’ WHEN ‘GLOBAL TEMPORARY’ THEN DECODE(
DST.SET_READ_ONLY, TRUE, ‘YES’, FALSE, ‘NO’ ) WHEN ‘LOCAL TEMPORARY’
THEN ‘YES’ WHEN ‘SYSTEM_VERSIONED’ THEN ‘YES’ WHEN ‘FIXED TABLE’ THEN
‘YES’ WHEN ‘DUMP TABLE’ THEN ‘YES’ WHEN ‘INSTANT TABLE’ THEN ‘YES’ WHEN
‘IMMUTABLE TABLE’ THEN ‘YES’ END AS VARCHAR(3) ) “READ_ONLY”
,ROUND(XS.ALLOC_PAGE_COUNT \* 8192 / 1024 / 1024, 0) “USED_SIZE(MB)”
,NVL((SELECT TO_CHAR(DSTAT.ANALYZED_TIME, ‘YYYY-MM-DD HH24:MI:SS’) FROM
DEFINITION_SCHEMA.STAT_TABLE@LOCAL DSTAT WHERE DSTAT.TABLE_ID =
DST.TABLE_ID), ‘NULL’) “LAST_ANALYZED” FROM
DEFINITION_SCHEMA.TABLES@LOCAL DST
,DEFINITION_SCHEMA.AUTHORIZATIONS@LOCAL DSA
,DEFINITION_SCHEMA.SCHEMATA@LOCAL DSS
,DEFINITION_SCHEMA.TABLESPACES@LOCAL DSTS
,X\ *SEGMENT*\ @\ *LOCALXS*, *X*\ TABLE_CACHE@LOCAL XTC WHERE
DST.OWNER_ID = DSA.AUTH_ID AND DST.SCHEMA_ID = DSS.SCHEMA_ID AND
DST.TABLESPACE_ID = DSTS.TABLESPACE_ID AND DST.PHYSICAL_ID =
XS.PHYSICAL_ID AND DST.PHYSICAL_ID = XTC.PHYSICAL_ID AND DST.SCHEMA_ID >
6 AND XS.TBS_ID NOT IN ( 0, 1, 5 ) AND XTC.TBS_ID NOT IN ( 0, 5 ) ORDER
BY DSA.AUTHORIZATION_NAME ,DSS.SCHEMA_NAME ,DST.TABLE_NAME

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,DSI.INDEX_NAME ,XBS.EMPTY_NODE_COUNT ,XBS.SPLIT_COUNT
,XBS.COMPACT_COUNT ,XBS.LINK_TRAVERSE_COUNT ,XBS.SORT_ELAPSED_TIME
,XBS.MERGE_ELAPSED_TIME ,XBS.BUILD_ELAPSED_TIME FROM
DEFINITION_SCHEMA.INDEXES@LOCAL DSI ,X$BTREE_STATISTICS@LOCAL XBS WHERE
DSI.PHYSICAL_ID = XBS.PHYSICAL_ID AND DSI.TABLESPACE_ID NOT IN ( 0, 5 )
ORDER BY DSI.INDEX_NAME

———-## SELECT /*+ USE_NL ( DSI, DSA, DSS, DSTS, DST, DSST )* /
TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,DSA.AUTHORIZATION_NAME
,DSS.SCHEMA_NAME ,DSI.INDEX_NAME ,DSI.PHYSICAL_ID ,DSTS.TABLESPACE_NAME
,DSST.SCHEMA_NAME “TABLE_SCHEMA_NAME” ,DST.TABLE_NAME ,CAST( CASE WHEN
DSI.IS_UNIQUE = TRUE THEN ‘UNIQUE’ ELSE ‘NONUNIQUE’ END AS VARCHAR(32) )
“UNIQUENESS” ,CAST( CASE WHEN DSI.BY_CONSTRAINT = TRUE THEN ‘YES’ ELSE
‘NO’ END AS VARCHAR(3) ) “GENERATED” ,CAST( CASE WHEN XIC.IS_LOGGING =
TRUE THEN ‘YES’ ELSE ‘NO’ END AS VARCHAR(3) ) “LOGGING” ,CAST( CASE WHEN
DST.IS_DROPPED = TRUE THEN ‘YES’ ELSE ‘NO’ END AS VARCHAR(3) ) “DROPPED”
,CAST( CASE WHEN DSI.INVALID = TRUE THEN ‘UNUSABLE’ ELSE ‘VALID’ END AS
VARCHAR(32) ) “STATUS” ,ROUND(XS.ALLOC_PAGE_COUNT \* 8192 / 1024 / 1024,
0) “USED_SIZE(MB)” ,ROUND(XIC.EMPTY_NODE_COUNT \* 8192 / 1024 / 1024, 0)
“EMPTY_SIZE(MB)” ,NVL((SELECT TO_CHAR(DSTAT.ANALYZED_TIME, ‘YYYY-MM-DD
HH24:MI:SS’) FROM DEFINITION_SCHEMA.STAT_INDEX@LOCAL DSTAT WHERE
DSTAT.INDEX_ID = DSI.INDEX_ID), ‘NULL’) “LAST_ANALYZED” FROM
DEFINITION_SCHEMA.INDEXES@LOCAL DSI
,DEFINITION_SCHEMA.AUTHORIZATIONS@LOCAL DSA
,DEFINITION_SCHEMA.SCHEMATA@LOCAL DSS
,DEFINITION_SCHEMA.TABLESPACES@LOCAL DSTS
,DEFINITION_SCHEMA.TABLES@LOCAL DST ,DEFINITION_SCHEMA.SCHEMATA@LOCAL
DSST ,X\ *SEGMENT*\ @\ *LOCALXS*, *X*\ INDEX_CACHE@LOCAL XIC WHERE
DSI.OWNER_ID = DSA.AUTH_ID AND DSI.SCHEMA_ID = DSS.SCHEMA_ID AND
DSI.TABLESPACE_ID = DSTS.TABLESPACE_ID AND DSI.PHYSICAL_ID =
XS.PHYSICAL_ID AND DSI.PHYSICAL_ID = XIC.PHYSICAL_ID AND DSI.TABLE_ID =
DST.TABLE_ID AND DST.SCHEMA_ID = DSST.SCHEMA_ID AND DSI.SCHEMA_ID > 6
AND XS.TBS_ID NOT IN ( 0, 1, 5 ) AND XIC.TBS_ID NOT IN ( 0, 5 ) ORDER BY
DSA.AUTHORIZATION_NAME ,DSST.SCHEMA_NAME ,DST.TABLE_NAME ,DSI.INDEX_NAME

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,DST.TABLE_NAME ,FGSIS.EMPTY_NODE_COUNT ,FGSIS.SPLIT_COUNT
,FGSIS.COMPACT_COUNT ,FGSIS.LINK_TRAVERSE_COUNT ,FGSIS.SORT_ELAPSED_TIME
,FGSIS.MERGE_ELAPSED_TIME ,FGSIS.BUILD_ELAPSED_TIME FROM
DEFINITION_SCHEMA.TABLES@LOCAL DST
,X$GLOBAL_SECONDARY_INDEX_STATISTICS@LOCAL FGSIS WHERE
DST.GSI_PHYSICAL_ID = FGSIS.PHYSICAL_ID AND DST.HAS_GSI IS TRUE ORDER BY
DST.TABLE_NAME

———-## SELECT /*+ USE_NL( DST, DSA, DSS, DSTS )* / TO_CHAR(SYSDATE,
‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,DSA.AUTHORIZATION_NAME ,DSS.SCHEMA_NAME
,DST.TABLE_NAME ,DST.GSI_PHYSICAL_ID ,DSTS.TABLESPACE_NAME ,CAST( CASE
WHEN XIC.IS_LOGGING = TRUE THEN ‘YES’ ELSE ‘NO’ END AS VARCHAR(3) )
“LOGGING” ,CAST( CASE WHEN DST.IS_DROPPED = TRUE THEN ‘YES’ ELSE ‘NO’
END AS VARCHAR(3) ) “DROPPED” ,ROUND(XS.ALLOC_PAGE_COUNT \* 8192 / 1024
/ 1024, 0) “USED_SIZE(MB)” ,ROUND(XIC.EMPTY_NODE_COUNT \* 8192 / 1024 /
1024, 0) “EMPTY_SIZE(MB)” FROM DEFINITION_SCHEMA.TABLES@LOCAL DST
,DEFINITION_SCHEMA.AUTHORIZATIONS@LOCAL DSA
,DEFINITION_SCHEMA.SCHEMATA@LOCAL DSS
,DEFINITION_SCHEMA.TABLESPACES@LOCAL DSTS
,X\ *SEGMENT*\ @\ *LOCALXS*, *X*\ INDEX_CACHE@LOCAL XIC WHERE
DST.OWNER_ID = DSA.AUTH_ID AND DST.SCHEMA_ID = DSS.SCHEMA_ID AND
DST.GSI_TABLESPACE_ID = DSTS.TABLESPACE_ID AND DST.GSI_PHYSICAL_ID =
XS.PHYSICAL_ID AND DST.GSI_PHYSICAL_ID = XIC.PHYSICAL_ID AND DST.HAS_GSI
IS TRUE AND DST.SCHEMA_ID > 6 AND XS.TBS_ID NOT IN ( 0, 1, 5 ) AND
XIC.TBS_ID NOT IN ( 0, 5 ) ORDER BY DSA.AUTHORIZATION_NAME
,DSS.SCHEMA_NAME ,DST.TABLE_NAME

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,AUTH.AUTHORIZATION_NAME “OWNER” ,SCH.SCHEMA_NAME “SEQUENCE_SCHEMA”
,SQC.SEQUENCE_NAME “SEQUENCE_NAME” ,SQC.MINIMUM_VALUE “MIN”
,SQC.MAXIMUM_VALUE “MAX” ,SQC.INCREMENT “INCREMENT_BY” ,SQC.CACHE_SIZE
“CACHE_SIZE” ,QPHY.LOCAL_CURR_VALUE “CURRENT_VALUE”
,QPHY.LOCAL_NEXT_VALUE “NEXT_VALUE” ,QPHY.GLOBAL_NEXT_VALUE
“GLOBAL_NEXT_VALUE” ,SQC.CYCLE_OPTION “CYCLE” ,QPHY.IS_ONLINE
“IS_ONLINE” FROM DEFINITION_SCHEMA.SEQUENCES@LOCAL AS SQC
,DEFINITION_SCHEMA.SCHEMATA@LOCAL AS SCH
,DEFINITION_SCHEMA.AUTHORIZATIONS@LOCAL AS AUTH ,X$SEQUENCE@LOCAL AS
QPHY WHERE SQC.SCHEMA_ID = SCH.SCHEMA_ID AND SQC.OWNER_ID = AUTH.AUTH_ID
AND SQC.PHYSICAL_ID = QPHY.PHYSICAL_ID ORDER BY SQC.SCHEMA_ID
,SQC.SEQUENCE_ID

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,AUTH.AUTHORIZATION_NAME “OWNER” ,SCH.SCHEMA_NAME “SCHEMA_NAME”
,TAB.TABLE_NAME “VIEW_NAME” ,CASE WHEN (VIW.IS_COMPILED = FALSE) OR
(VIW.IS_AFFECTED = TRUE) THEN ‘TRUE’ ELSE ‘FALSE’ END “NEED_RECOMPILE”
,VIW.IS_COMPILED “IS_COMPILED” ,VIW.IS_AFFECTED “IS_AFFECTED” ,NVL(CAST(
IS_UPDATABLE AS VARCHAR(5) ), ‘NULL’) “IS_UPDATABLE” FROM
DEFINITION_SCHEMA.TABLES@LOCAL AS TAB ,DEFINITION_SCHEMA.VIEWS@LOCAL AS
VIW ,DEFINITION_SCHEMA.SCHEMATA@LOCAL AS SCH
,DEFINITION_SCHEMA.AUTHORIZATIONS@LOCAL AS AUTH WHERE TAB.TABLE_TYPE =
‘VIEW’ AND SCH.SCHEMA_NAME NOT IN ( ‘DEFINITION_SCHEMA’,
‘FIXED_TABLE_SCHEMA’, ‘DICTIONARY_SCHEMA’, ‘INFORMATION_SCHEMA’,
‘PERFORMANCE_VIEW_SCHEMA’ ) AND TAB.SCHEMA_ID = SCH.SCHEMA_ID AND
TAB.TABLE_ID = VIW.TABLE_ID AND TAB.OWNER_ID = AUTH.AUTH_ID ORDER BY
TAB.SCHEMA_ID ,TAB.TABLE_ID

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,SYNONYM_OWNER ,SYNONYM_SCHEMA ,SYNONYM_NAME ,SYNONYM_TYPE
,OBJECT_SCHEMA_NAME ,OBJECT_NAME FROM ( SELECT /*+ USE_NL( SYN, SCH,
AUTH )* / AUTH.AUTHORIZATION_NAME “SYNONYM_OWNER” ,SCH.SCHEMA_NAME
“SYNONYM_SCHEMA” ,SYN.SYNONYM_NAME “SYNONYM_NAME” ,‘PRIVATE’
“SYNONYM_TYPE” ,SYN.OBJECT_SCHEMA_NAME “OBJECT_SCHEMA_NAME”
,SYN.OBJECT_NAME “OBJECT_NAME” FROM DEFINITION_SCHEMA.SYNONYMS@LOCAL AS
SYN ,DEFINITION_SCHEMA.SCHEMATA@LOCAL AS SCH
,DEFINITION_SCHEMA.AUTHORIZATIONS@LOCAL AS AUTH WHERE SYN.SCHEMA_ID =
SCH.SCHEMA_ID AND SYN.OWNER_ID = AUTH.AUTH_ID UNION ALL SELECT ‘NULL’
,‘NULL’ ,PSYN.SYNONYM_NAME ,‘PUBLIC’ ,PSYN.OBJECT_SCHEMA_NAME
,PSYN.OBJECT_NAME FROM DEFINITION_SCHEMA.PUBLIC_SYNONYMS@LOCAL AS PSYN
WHERE PSYN.OBJECT_SCHEMA_NAME NOT IN ( ‘FIXED_TABLE_SCHEMA’,
‘DICTIONARY_SCHEMA’, ‘INFORMATION_SCHEMA’, ‘PERFORMANCE_VIEW_SCHEMA’ ) )
ORDER BY SYNONYM_TYPE ,SYNONYM_OWNER ,SYNONYM_SCHEMA ,SYNONYM_NAME

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,OWNER
,SCHEMA_NAME ,PACKAGE_NAME ,PACKAGE_TYPE ,NEED_RECOMPILE ,IS_COMPILED
,IS_AFFECTED ,AUTHID FROM ( SELECT AUTH.AUTHORIZATION_NAME “OWNER”
,SCH.SCHEMA_NAME “SCHEMA_NAME” ,MDL.MODULE_NAME “PACKAGE_NAME” ,CAST(
‘PACKAGE’ AS VARCHAR(32) ) “PACKAGE_TYPE” ,CASE WHEN (MDL.IS_COMPILED =
FALSE) OR (MDL.IS_AFFECTED = TRUE) THEN ‘TRUE’ ELSE ‘FALSE’ END
“NEED_RECOMPILE” ,MDL.IS_COMPILED “IS_COMPILED” ,MDL.IS_AFFECTED
“IS_AFFECTED” ,CAST( MDL.SECURITY_TYPE AS VARCHAR(32) ) “AUTHID” FROM
DEFINITION_SCHEMA.SCHEMATA@LOCAL SCH
,DEFINITION_SCHEMA.AUTHORIZATIONS@LOCAL AUTH
,DEFINITION_SCHEMA.MODULES@LOCAL MDL WHERE AUTH.AUTH_ID =
MDL.MODULE_OWNER_ID AND SCH.SCHEMA_ID = MDL.MODULE_SCHEMA_ID UNION ALL
SELECT AUTH.AUTHORIZATION_NAME “OWNER” ,SCH.SCHEMA_NAME “SCHEMA_NAME”
,MDL.MODULE_NAME “PACKAGE_NAME” ,CAST( ‘PACKAGE BODY’ AS VARCHAR(32) )
“PACKAGE_TYPE” ,CASE WHEN (MDL.IS_COMPILED = FALSE) OR (MDL.IS_AFFECTED
= TRUE) THEN ‘TRUE’ ELSE ‘FALSE’ END “NEED_RECOMPILE” ,MDL.IS_COMPILED
“IS_COMPILED” ,MDL.IS_AFFECTED “IS_AFFECTED” ,CAST( ‘NULL’ AS
VARCHAR(32) ) “AUTHID” FROM DEFINITION_SCHEMA.SCHEMATA@LOCAL SCH
,DEFINITION_SCHEMA.AUTHORIZATIONS@LOCAL AUTH
,DEFINITION_SCHEMA.MODULE_BODY@LOCAL MDL WHERE AUTH.AUTH_ID =
MDL.MODULE_OWNER_ID AND SCH.SCHEMA_ID = MDL.MODULE_SCHEMA_ID ) ORDER BY
SCHEMA_NAME ,PACKAGE_NAME

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,AUTH.AUTHORIZATION_NAME “OWNER” ,SCH.SCHEMA_NAME “SCHEMA_NAME”
,NVL(MDL.MODULE_NAME, ‘NULL’) “PACKAGE_NAME” ,ROUT.SPECIFIC_NAME
“PSM_NAME” ,CAST( ROUT.ROUTINE_TYPE AS VARCHAR(32) ) “PSM_TYPE”
,ROUT.SCHEMA_LEVEL_ROUTINE “SCHEMA_LEVEL_ROUTINE” ,CASE WHEN
(ROUT.IS_COMPILED = FALSE) OR (ROUT.IS_AFFECTED = TRUE) THEN ‘TRUE’ ELSE
‘FALSE’ END “NEED_RECOMPILE” ,ROUT.IS_COMPILED “IS_COMPILED”
,ROUT.IS_AFFECTED “IS_AFFECTED” ,CAST( ROUT.SECURITY_TYPE AS VARCHAR(32)
) “AUTHID” ,ROUT.IS_DETERMINISTIC “IS_DETERMINISTIC” FROM
DEFINITION_SCHEMA.SCHEMATA@LOCAL SCH
,DEFINITION_SCHEMA.AUTHORIZATIONS@LOCAL AUTH
,DEFINITION_SCHEMA.ROUTINES@LOCAL ROUT LEFT OUTER JOIN
DEFINITION_SCHEMA.MODULES@LOCAL MDL ON MDL.MODULE_ID = ROUT.MODULE_ID
WHERE ROUT.IS_PRIVATE_ROUTINE = FALSE AND AUTH.AUTH_ID =
ROUT.SPECIFIC_OWNER_ID AND SCH.SCHEMA_ID = ROUT.SPECIFIC_SCHEMA_ID ORDER
BY SCH.SCHEMA_ID ,ROUT.SPECIFIC_ID

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,LAYER
,NAME ,COUNT FROM ( SELECT ‘KN’ “LAYER” ,NAME ,VALUE “COUNT” FROM
X$KN_SYSTEM_INFO@LOCAL WHERE NAME = 'CLOCK_AGING_COUNT' UNION ALL SELECT
'SM' "LAYER" ,NAME ,VALUE "COUNT" FROM X$SM_SYSTEM_INFO@LOCAL WHERE NAME
IN ( ‘TRY_STEAL_UNDO_PAGE_COUNT’, ‘ASYNC_COMMIT_COUNT’ ) UNION ALL
SELECT ‘CL’ “LAYER” ,NAME ,VALUE “COUNT” FROM X$CL_SYSTEM_INFO@LOCAL
WHERE NAME IN ( 'GLOBAL_COMMIT_COUNT', 'CM_BUFFER_USED_ELEMENT_COUNT',
'CM_BUFFER_USED_DYNAMIC_COUNT' ) UNION ALL SELECT 'SC' "LAYER" ,NAME
,VALUE "COUNT" FROM X$SC_SYSTEM_INFO@LOCAL WHERE NAME IN (
‘SVR_PACKET_COMPRESSION_COUNT’, ‘CL_PACKET_COMPRESSION_COUNT’ ) UNION
ALL SELECT ‘SQL’ “LAYER” ,NAME ,VALUE “COUNT” FROM
X$SQL_SYSTEM_INFO@LOCAL UNION ALL SELECT 'SS' "LAYER" ,NAME ,VALUE
"COUNT" FROM X$SS_SYSTEM_INFO@LOCAL WHERE VALUE <> 0 ) ORDER BY LAYER
,NAME

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,STMT_TYPE_ID ,STMT_TYPE ,SUM(EXECUTE_COUNT) FROM
X$SQL_SYSTEM_STAT_EXEC_STMT@LOCAL GROUP BY STMT_TYPE_ID ,STMT_TYPE ORDER
BY STMT_TYPE_ID ,STMT_TYPE

———-## SELECT XWEN.NAME “EVENT_NAME” ,TO_CHAR(XSE.TOTAL_WAITS)
“TOTAL_WAITS” ,TO_CHAR(XSE.TOTAL_TIMEOUTS) “TOTAL_TIMEOUTS”
,TO_CHAR(XSE.TIME_WAITED) “TIME_WAITED” ,TO_CHAR(XSE.AVERAGE_WAIT)
“AVERAGE_WAIT” ,TO_CHAR(‘-1’) “MAX_WAIT” ,XWEC.NAME “CLASS_NAME”
,TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,‘SYSTEM’ “CATEGORY”
FROM
X\ *SYSTEM*\ :sub:`E`\ *VENT*\ @\ *LOCALXSELEFTOUTERJOINX*\ WAIT_EVENT_NAME@LOCAL
XWEN ON XSE.WAIT_EVENT_ID = XWEN.WAIT_EVENT_ID LEFT OUTER JOIN
X$WAIT_EVENT_CLASS_NAME@LOCAL XWEC ON XWEN.CLASS_ID = XWEC.CLASS_ID
UNION ALL SELECT DISTINCT(XWEN.NAME) ,TO_CHAR(SUM(XSE.TOTAL_WAITS))
,TO_CHAR(SUM(XSE.TOTAL_TIMEOUTS)) ,TO_CHAR(SUM(XSE.TIME_WAITED))
,TO_CHAR(SUM(XSE.AVERAGE_WAIT)) ,TO_CHAR(SUM(XSE.MAX_WAIT)) ,XWEC.NAME
,TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS') "DATE" ,'SESSION' FROM
X$SESSION_EVENT@LOCAL XSE LEFT OUTER JOIN
X\ *WAIT*\ :sub:`E`\ *VENT*\ :sub:`N`\ *AME*\ @\ *LOCALXWENONXSE*.\ *WAIT*\ :sub:`E`\ *VENT*\ :sub:`I`\ *D* = *XWEN*.\ *WAIT*\ :sub:`E`\ *VENT*\ :sub:`I`\ *DLEFTOUTERJOINX*\ WAIT_EVENT_CLASS_NAME@LOCAL
XWEC ON XWEN.CLASS_ID = XWEC.CLASS_ID GROUP BY XWEN.NAME, XWEC.NAME

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,CG.GROUP_NAME “GROUP_NAME” ,CM.MEMBER_NAME “MEMBER_NAME”
,CM.MEMBER_POSITION “MEMBER_POSITION” ,FCM.MEMBER_ID
,FCM.LOGICAL_CONNECTION ,FCM.IS_GLOBAL_COORD ,FCM.IS_DOMAIN_COORD
,CL.HOST “MEMBER_HOST” ,CL.PORT “MEMBER_PORT” FROM
X\ *CLUSTER*\ :sub:`M`\ *EMBER*\ @\ *GLOBAL*\ [*RANDOM*\ :sub:`M`\ *EMBER*]\ *FCMINNERJOINDEFINITION*\ :sub:`S`\ *CHEMA*.\ *CLUSTER*\ :sub:`M`\ *EMBER*\ @\ *GLOBAL*\ [*RANDOM*\ :sub:`M`\ *EMBER*]\ *CMONFCM*.\ *MEMBER*\ :sub:`I`\ *D* = *CM*.\ *MEMBER*\ :sub:`I`\ *DANDFCM*.\ *MEMBER*\ :sub:`P`\ *OSITION* = *CM*.\ *MEMBER*\ :sub:`P`\ *OSITIONLEFTOUTERJOINDEFINITION*\ :sub:`S`\ *CHEMA*.\ *CLUSTER*\ :sub:`G`\ *ROUP*\ @\ *GLOBAL*\ [*RANDOM*\ :sub:`M`\ *EMBER*]\ *CGONCM*.\ *GROUP*\ :sub:`I`\ *D* = *CG*.\ *GROUP*\ :sub:`I`\ *DLEFTOUTERJOINX*\ CLUSTER_LOCATION@GLOBAL[RANDOM_MEMBER]
CL ON CM.MEMBER_NAME = CL.MEMBER_NAME

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,CLUSTER_MEMBER_NAME ,TYPE ,COUNT(\*) FROM
X$CLUSTER_CONNECTION@GLOBAL[IGNORE_INACTIVE_MEMBER] GROUP BY
CLUSTER_MEMBER_NAME ,TYPE ORDER BY CLUSTER_MEMBER_NAME ,TYPE

———-##

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,CLUSTER_MEMBER_NAME ,TYPE ,DISPATCHER_ID ,ROUND(RX_BYTES / 1024 / 1024,
0) “RX_SIZE(MB)” ,ROUND(TX_BYTES / 1024 / 1024, 0) “TX_SIZE(MB)”
,RX_JOBS ,TX_JOBS FROM
X$CLUSTER_DISPATCHER@GLOBAL[IGNORE_INACTIVE_MEMBER] ORDER BY
CLUSTER_MEMBER_NAME

———-##

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,FCDT.CLUSTER_MEMBER_NAME ,FCD.TYPE ,FCDT.IS_SENDER ,FCDT.IS_CONNECTED
,FCDT.PEER_MEMBER_POS ,DCM.MEMBER_NAME ,TO_CHAR(FCDT.CONNECTED_TIME,
‘YYYY-MM-DD HH24:MI:SS’) “CONNECTED_TIME” ,TO_CHAR(FCDT.LAST_TIME,
‘YYYY-MM-DD HH24:MI:SS’) “LAST_TIME” ,ROUND(FCDT.TOTAL_BYTES / 1024 /
1024, 0) “TOTAL_SIZE(MB)” FROM
FIXED_TABLE_SCHEMA.X\ *CLUSTER*\ :sub:`D`\ *ISPATCHER*\ :sub:`T`\ *HREAD*\ @\ *GLOBAL*\ [*IGNORE*\ :sub:`I`\ *NACTIVE*\ :sub:`M`\ *EMBER*]\ *FCDT*, *FIXED*\ :sub:`T`\ *ABLE*\ :sub:`S`\ *CHEMA*.\ *X*\ CLUSTER_DISPATCHER@GLOBAL[IGNORE_INACTIVE_MEMBER]
FCD ,DEFINITION_SCHEMA.CLUSTER_MEMBER@GLOBAL[IGNORE_INACTIVE_MEMBER] DCM
WHERE FCDT.DISPATCHER_ID = FCD.DISPATCHER_ID AND FCDT.CLUSTER_MEMBER_ID
= FCD.CLUSTER_MEMBER_ID AND FCDT.PEER_MEMBER_POS= DCM.MEMBER_POSITION
AND FCDT.CLUSTER_MEMBER_ID = DCM.CLUSTER_MEMBER_ID ORDER BY
FCDT.CLUSTER_MEMBER_NAME ,FCDT.PEER_MEMBER_POS ,FCDT.DISPATCHER_ID
,FCDT.IS_SENDER DESC

———-##

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,CLUSTER_MEMBER_NAME ,NAME ,STATUS ,COUNT(\*) FROM
X$CLUSTER_SERVER@GLOBAL[IGNORE_INACTIVE_MEMBER] GROUP BY
CLUSTER_MEMBER_NAME ,NAME ,STATUS HAVING STATUS != ‘WAIT’ ORDER BY
CLUSTER_MEMBER_NAME ,NAME

———-##

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,CLUSTER_MEMBER_NAME ,NAME ,SUM(PROCESSED_JOBS) FROM
X$CLUSTER_SERVER@GLOBAL[IGNORE_INACTIVE_MEMBER] GROUP BY
CLUSTER_MEMBER_NAME ,NAME ORDER BY CLUSTER_MEMBER_NAME ,NAME DESC

———-##

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,CLUSTER_MEMBER_NAME ,NAME ,SUM(QUEUED) ,SUM(FULL_COUNT)
,SUM(WAIT_COUNT) ,SUM(MISS) FROM
X$CLUSTER_QUEUE@GLOBAL[IGNORE_INACTIVE_MEMBER] GROUP BY
CLUSTER_MEMBER_NAME ,NAME ORDER BY CLUSTER_MEMBER_NAME ,NAME

———-##

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,JOURNALING.CLUSTER_MEMBER_NAME “CLUSTER_MEMBER_NAME” ,TAB.TABLE_NAME
“TABLE_NAME” ,JOURNALING.SHARD_ID “SHARD_ID” ,JOURNALING.RECORD_COUNT
“RECORD_COUNT” ,JOURNALING.WRITTEN_LENGTH “WRITTEN_LENGTH” FROM
X$GLOBAL_JOURNALING@GLOBAL[IGNORE_INACTIVE_MEMBER] JOURNALING
,DEFINITION_SCHEMA.TABLES@GLOBAL[IGNORE_INACTIVE_MEMBER] TAB WHERE
JOURNALING.SEGMENT_ID = TAB.PHYSICAL_ID AND JOURNALING.CLUSTER_MEMBER_ID
= TAB.CLUSTER_MEMBER_ID ORDER BY CLUSTER_MEMBER_NAME ,TABLE_NAME

———-##

———-## SELECT /*+ ORDERED* / TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’)
“DATE” ,AUTH.AUTHORIZATION_NAME “OWNER” ,SCH.SCHEMA_NAME “TABLE_SCHEMA”
,TAB.TABLE_NAME “TABLE_NAME” ,TAB.SHARDING_STRATEGY “SHARD_STRATEGY”
,TAB.SHARD_PLACEMENT “SHARD_PLACEMENT” ,NVL(TAB.SHARD_COUNT, -1)
“SHARD_COUNT” ,NVL(TAB.SHARD_KEY_COUNT, -1) “SHARD_KEY_COUNT”
,NVL(COL.COLUMN_NAME, ‘NULL’) “COLUMN_NAME” ,NVL(SKEY.ORDINAL_POSITION,
-1) “COLUMN_POSITION” ,TAB.HAS_GSI “HAS_GSI” FROM
DEFINITION_SCHEMA.TABLES@GLOBAL[RANDOM_MEMBER] TAB INNER JOIN
DEFINITION_SCHEMA.SCHEMATA@GLOBAL[RANDOM_MEMBER] SCH ON TAB.SCHEMA_ID =
SCH.SCHEMA_ID INNER JOIN
DEFINITION_SCHEMA.AUTHORIZATIONS@GLOBAL[RANDOM_MEMBER] AUTH ON
TAB.OWNER_ID = AUTH.AUTH_ID LEFT OUTER JOIN
DEFINITION_SCHEMA.SHARD_KEY_COLUMN_USAGE@GLOBAL[RANDOM_MEMBER] SKEY ON
TAB.TABLE_ID = SKEY.TABLE_ID LEFT OUTER JOIN
DEFINITION_SCHEMA.COLUMNS@GLOBAL[RANDOM_MEMBER] COL ON SKEY.COLUMN_ID =
COL.COLUMN_ID WHERE SCH.SCHEMA_NAME NOT IN ( ‘FIXED_TABLE_SCHEMA’,
‘DEFINITION_SCHEMA’, ‘DICTIONARY_SCHEMA’ ) AND TAB.SHARDING_STRATEGY IN
( ‘CLONED’, ‘HASH SHARDING’, ‘RANGE SHARDING’, ‘LIST SHARDING’ ) ORDER
BY AUTH.AUTHORIZATION_NAME ,SCH.SCHEMA_NAME ,TAB.TABLE_NAME
,SKEY.ORDINAL_POSITION

———-## SELECT /*+ USE_NL( TMM, TBL, AUTH, SCH, CG, CM, FSEG )* /
TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,AUTH.AUTHORIZATION_NAME “OWNER” ,SCH.SCHEMA_NAME “TABLE_SCHEMA”
,TBL.TABLE_NAME ,CG.GROUP_NAME ,CM.MEMBER_NAME ,TMM.IS_OFFLINE
“MEMBER_OFFLINE” ,NVL(FSEG.GLOBAL_SCN, ‘NULL’) “SCN” FROM
DEFINITION_SCHEMA.TABLE_MEMBER_MAP@GLOBAL[RANDOM_MEMBER] TMM INNER JOIN
DEFINITION_SCHEMA.TABLES@GLOBAL[RANDOM_MEMBER] TBL ON TMM.TABLE_ID =
TBL.TABLE_ID LEFT OUTER JOIN
DEFINITION_SCHEMA.AUTHORIZATIONS@GLOBAL[RANDOM_MEMBER] AUTH ON
TMM.OWNER_ID = AUTH.AUTH_ID LEFT OUTER JOIN
DEFINITION_SCHEMA.SCHEMATA@GLOBAL[RANDOM_MEMBER] SCH ON TMM.SCHEMA_ID =
SCH.SCHEMA_ID LEFT OUTER JOIN
DEFINITION_SCHEMA.CLUSTER_GROUP@GLOBAL[RANDOM_MEMBER] CG ON TMM.GROUP_ID
= CG.GROUP_ID LEFT OUTER JOIN
DEFINITION_SCHEMA.CLUSTER_MEMBER@GLOBAL[RANDOM_MEMBER] CM ON
TMM.MEMBER_ID = CM.MEMBER_ID LEFT OUTER JOIN
X$SEGMENT@GLOBAL[IGNORE_INACTIVE_MEMBER] FSEG ON TBL.PHYSICAL_ID =
FSEG.PHYSICAL_ID AND TBL.CLUSTER_MEMBER_ID = FSEG.CLUSTER_MEMBER_ID
WHERE TMM.IS_OFFLINE IS TRUE ORDER BY OWNER ,TABLE_SCHEMA ,TABLE_NAME

———-## SELECT /*+ ORDERED* / TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’)
“DATE” ,AUTH.AUTHORIZATION_NAME “OWNER” ,SCH.SCHEMA_NAME “TABLE_SCHEMA”
,TAB.TABLE_NAME “TABLE_NAME” ,SPC.TABLESPACE_NAME “TABLESPACE_NAME”
,XTC.STORAGE_MEDIA_TYPE ,CAST( CASE WHEN TAB.TABLE_TYPE IN ( ‘GLOBAL
TEMPORARY’, ‘LOCAL TEMPORARY’ ) THEN ‘YES’ ELSE ‘NO’ END AS VARCHAR(3) )
“TEMPORARY” ,CAST( CASE WHEN TPHY.LOGGING = TRUE THEN ‘YES’ ELSE ‘NO’
END AS VARCHAR(3) ) “LOGGING” ,CAST( CASE WHEN TAB.IS_DROPPED = TRUE
THEN ‘YES’ ELSE ‘NO’ END AS VARCHAR(3) ) “DROPPED” ,CAST( CASE
TAB.TABLE_TYPE WHEN ‘BASE TABLE’ THEN CASE TAB.OWNER_ID WHEN 1 THEN
‘YES’ – \_SYSTEM ELSE DECODE( TAB.SET_READ_ONLY, TRUE, ‘YES’, FALSE,
‘NO’ ) END WHEN ‘VIEW’ THEN ‘YES’ WHEN ‘GLOBAL TEMPORARY’ THEN DECODE(
TAB.SET_READ_ONLY, TRUE, ‘YES’, FALSE, ‘NO’ ) WHEN ‘LOCAL TEMPORARY’
THEN ‘YES’ WHEN ‘SYSTEM_VERSIONED’ THEN ‘YES’ WHEN ‘FIXED TABLE’ THEN
‘YES’ WHEN ‘DUMP TABLE’ THEN ‘YES’ WHEN ‘INSTANT TABLE’ THEN ‘YES’ WHEN
‘IMMUTABLE TABLE’ THEN CASE TAB.OWNER_ID WHEN 1 THEN ‘YES’ – \_SYSTEM
ELSE DECODE( TAB.SET_READ_ONLY, TRUE, ‘YES’, FALSE, ‘NO’ ) END ELSE
‘YES’ END AS VARCHAR(3) ) “READ_ONLY” ,ROUND( TPHY.ALLOC_PAGE_COUNT \*
8192 / 1024 / 1024, 0) “USED_SIZE(MB)” ,NVL(TO_CHAR(STAT.ANALYZED_TIME,
‘YYYY-MM-DD HH24:MI:SS’), ‘NULL’) “LAST_ANALYZED” FROM
DEFINITION_SCHEMA.TABLES@GLOBAL[RANDOM_MEMBER] TAB LEFT OUTER JOIN
DEFINITION_SCHEMA.STAT_TABLE@GLOBAL[RANDOM_MEMBER] STAT ON TAB.TABLE_ID
= STAT.TABLE_ID ,X$TABLE_CACHE@GLOBAL[RANDOM_MEMBER] XTC
,DEFINITION_SCHEMA.TABLESPACES@GLOBAL[RANDOM_MEMBER] SPC
,DEFINITION_SCHEMA.SCHEMATA@GLOBAL[RANDOM_MEMBER] SCH
,DEFINITION_SCHEMA.AUTHORIZATIONS@GLOBAL[RANDOM_MEMBER] AUTH
,DICTIONARY_SCHEMA.WHOLE_TAB_PHYSICAL TPHY WHERE SCH.SCHEMA_NAME NOT IN
(‘DEFINITION_SCHEMA’, ‘DICTIONARY_SCHEMA’) AND TAB.TABLE_TYPE IN ( ‘BASE
TABLE’, ‘GLOBAL TEMPORARY’, ‘LOCAL TEMPORARY’, ‘SYSTEM VERSIONED’,
‘IMMUTABLE TABLE’ ) AND TAB.PHYSICAL_ID = XTC.PHYSICAL_ID AND
TAB.TABLESPACE_ID = SPC.TABLESPACE_ID AND TAB.SCHEMA_ID = SCH.SCHEMA_ID
AND TAB.OWNER_ID = AUTH.AUTH_ID AND SCH.SCHEMA_NAME = TPHY.SCHEMA_NAME
AND TAB.TABLE_NAME = TPHY.TABLE_NAME ORDER BY AUTH.AUTHORIZATION_NAME
,SCH.SCHEMA_NAME ,TAB.TABLE_NAME

———-## SELECT /*+ ORDERED* / TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’)
“DATE” ,AUTH1.AUTHORIZATION_NAME “OWNER” ,SCH1.SCHEMA_NAME
“INDEX_SCHEMA” ,IDX.INDEX_NAME “INDEX_NAME” ,SPC.TABLESPACE_NAME
“TABLESPACE_NAME” ,SCH2.SCHEMA_NAME “TABLE_SCHEMA” ,TAB.TABLE_NAME
“TABLE_NAME” ,CAST( CASE WHEN IDX.IS_UNIQUE = TRUE THEN ‘UNIQUE’ ELSE
‘NONUNIQUE’ END AS VARCHAR(32) ) “UNIQUENESS” ,CAST( CASE WHEN
IDX.BY_CONSTRAINT = TRUE THEN ‘YES’ ELSE ‘NO’ END AS VARCHAR(3) )
“GENERATED” ,CAST( CASE WHEN IPHY.IS_LOGGING = TRUE THEN ‘YES’ ELSE ‘NO’
END AS VARCHAR(3) ) “LOGGING” ,CAST( CASE WHEN TAB.IS_DROPPED = TRUE
THEN ‘YES’ ELSE ‘NO’ END AS VARCHAR(3) ) “DROPPED” ,CAST( CASE WHEN
IDX.INVALID = TRUE THEN ‘UNUSABLE’ ELSE ‘VALID’ END AS VARCHAR(32) )
“STATUS” ,ROUND(IPHY.ALLOC_PAGE_COUNT \* 8192 / 1024 / 1024, 0)
“USED_SIZE(MB)” ,ROUND(IPHY.EMPTY_PAGE_COUNT \* 8192 / 1024 / 1024, 0)
“EMPTY_SIZE(MB)” ,NVL(TO_CHAR(ISTAT.ANALYZED_TIME, ‘YYYY-MM-DD
HH24:MI:SS’), ‘NULL’) “LAST_ANALYZED” FROM
DEFINITION_SCHEMA.INDEXES@GLOBAL[RANDOM_MEMBER] IDX LEFT OUTER JOIN
DEFINITION_SCHEMA.STAT_INDEX@GLOBAL[RANDOM_MEMBER] ISTAT ON IDX.INDEX_ID
= ISTAT.INDEX_ID LEFT OUTER JOIN
DEFINITION_SCHEMA.TABLESPACES@GLOBAL[RANDOM_MEMBER] SPC ON
IDX.TABLESPACE_ID = SPC.TABLESPACE_ID
,DEFINITION_SCHEMA.SCHEMATA@GLOBAL[RANDOM_MEMBER] SCH1
,DEFINITION_SCHEMA.TABLES@GLOBAL[RANDOM_MEMBER] TAB
,DEFINITION_SCHEMA.AUTHORIZATIONS@GLOBAL[RANDOM_MEMBER] AUTH1
,DEFINITION_SCHEMA.SCHEMATA@GLOBAL[RANDOM_MEMBER] SCH2
,DICTIONARY_SCHEMA.WHOLE_IDX_PHYSICAL IPHY WHERE SCH1.SCHEMA_NAME NOT IN
(‘DEFINITION_SCHEMA’, ‘DICTIONARY_SCHEMA’) AND IDX.TABLE_ID =
TAB.TABLE_ID AND IDX.SCHEMA_ID = SCH1.SCHEMA_ID AND IDX.OWNER_ID =
AUTH1.AUTH_ID AND IDX.TABLE_SCHEMA_ID = SCH2.SCHEMA_ID AND
SCH1.SCHEMA_NAME = IPHY.INDEX_SCHEMA AND IDX.INDEX_NAME =
IPHY.INDEX_NAME AND SCH2.SCHEMA_NAME = IPHY.TABLE_SCHEMA AND
TAB.TABLE_NAME = IPHY.TABLE_NAME ORDER BY AUTH1.AUTHORIZATION_NAME
,SCH2.SCHEMA_NAME ,TAB.TABLE_NAME ,IDX.INDEX_NAME

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,AUTH.AUTHORIZATION_NAME “TABLE_OWNER” ,SCH.SCHEMA_NAME “TABLE_SCHEMA”
,TAB.TABLE_NAME “TABLE_NAME” ,SPC.TABLESPACE_NAME “TABLESPACE_NAME”
,CAST( CASE WHEN GPHY.IS_LOGGING = TRUE THEN ‘YES’ ELSE ‘NO’ END AS
VARCHAR(3) ) “LOGGING” ,CAST( CASE WHEN TAB.IS_DROPPED = TRUE THEN ‘YES’
ELSE ‘NO’ END AS VARCHAR(3) ) “DROPPED” ,ROUND(GPHY.ALLOC_PAGE_COUNT \*
8192 / 1024 / 1024, 0) “USED_SIZE(MB)” ,ROUND(GPHY.EMPTY_PAGE_COUNT \*
8192 / 1024 / 1024, 0) “EMPTY_SIZE(MB)” FROM
DEFINITION_SCHEMA.TABLES@GLOBAL[RANDOM_MEMBER] TAB
,DEFINITION_SCHEMA.TABLESPACES@GLOBAL[RANDOM_MEMBER] SPC
,DEFINITION_SCHEMA.SCHEMATA@GLOBAL[RANDOM_MEMBER] SCH
,DEFINITION_SCHEMA.AUTHORIZATIONS@GLOBAL[RANDOM_MEMBER] AUTH
,DICTIONARY_SCHEMA.WHOLE_GSI_PHYSICAL GPHY WHERE SCH.SCHEMA_NAME !=
‘DICTIONARY_SCHEMA’ AND TAB.GSI_TABLESPACE_ID = SPC.TABLESPACE_ID AND
TAB.SCHEMA_ID = SCH.SCHEMA_ID AND TAB.OWNER_ID = AUTH.AUTH_ID AND
SCH.SCHEMA_NAME = GPHY.TABLE_SCHEMA AND TAB.TABLE_NAME = GPHY.TABLE_NAME
ORDER BY AUTH.AUTHORIZATION_NAME ,SCH.SCHEMA_NAME ,TAB.TABLE_NAME

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE” ,LAYER
,NAME ,COUNT FROM ( SELECT ‘KN’ “LAYER” ,NAME ,SUM(VALUE) “COUNT” FROM
X$KN_SYSTEM_INFO@GLOBAL[IGNORE_INACTIVE_MEMBER] WHERE NAME =
'CLOCK_AGING_COUNT' GROUP BY NAME UNION ALL SELECT 'SM' "LAYER" ,NAME
,SUM(VALUE) "COUNT" FROM X$SM_SYSTEM_INFO@GLOBAL[IGNORE_INACTIVE_MEMBER]
WHERE NAME IN ( ‘TRY_STEAL_UNDO_PAGE_COUNT’, ‘ASYNC_COMMIT_COUNT’ )
GROUP BY NAME UNION ALL SELECT ‘CL’ “LAYER” ,NAME ,SUM(VALUE) “COUNT”
FROM X$CL_SYSTEM_INFO@GLOBAL[IGNORE_INACTIVE_MEMBER] WHERE NAME IN (
'GLOBAL_COMMIT_COUNT', 'CM_BUFFER_USED_ELEMENT_COUNT',
'CM_BUFFER_USED_DYNAMIC_COUNT' ) GROUP BY NAME UNION ALL SELECT 'SC'
"LAYER" ,NAME ,SUM(VALUE) "COUNT" FROM
X$SC_SYSTEM_INFO@GLOBAL[IGNORE_INACTIVE_MEMBER] WHERE NAME IN (
‘SVR_PACKET_COMPRESSION_COUNT’, ‘CL_PACKET_COMPRESSION_COUNT’ ) GROUP BY
NAME UNION ALL SELECT ‘SQL’ “LAYER” ,NAME ,SUM(VALUE) “COUNT” FROM
X$SQL_SYSTEM_INFO@GLOBAL[IGNORE_INACTIVE_MEMBER] GROUP BY NAME UNION ALL
SELECT 'SS' "LAYER" ,NAME ,SUM(VALUE) "COUNT" FROM
X$SS_SYSTEM_INFO@GLOBAL[IGNORE_INACTIVE_MEMBER] WHERE VALUE <> 0 GROUP
BY NAME ) ORDER BY LAYER ,NAME

———-## SELECT TO_CHAR(SYSDATE, ‘YYYY-MM-DD HH24:MI:SS’) “DATE”
,STMT_TYPE_ID ,STMT_TYPE ,SUM(EXECUTE_COUNT) FROM
X$SQL_SYSTEM_STAT_EXEC_STMT@GLOBAL[IGNORE_INACTIVE_MEMBER] GROUP BY
STMT_TYPE_ID ,STMT_TYPE ORDER BY STMT_TYPE_ID ,STMT_TYPE

}}}
