#ifndef __DBM_COMMON_DEF_
#define __DBM_COMMON_DEF_ 1


#define  DBM_DIC_INST_NAME                 "DICT"
#define  DBM_SESSION_INST_NAME             "SESSION"
#define  DBM_DIC_MAX_COLUMN                (32)


#define   DBM_HANDLE_MARK                  (dbmInt64)(93928219100293L)
#define   DBM_STMT_MARK                    (dbmInt64)(44932020021101L)


// 다른 계정에서 DA로 사용할수도 있음으로 664 로 설정했음.
#define   DBM_FILE_PERM                    (DBM_PERM_UREAD | DBM_PERM_UWRITE | DBM_PERM_GREAD | DBM_PERM_GWRITE | DBM_PERM_WREAD)
#define   DBM_REPL_UNSENT_LOG_MAXSIZE      (8196)
#define   DBM_MAX_PATH_INFO                (8196)
#define   DBM_RESULT_MAX_COUNT             (1024 * 1024 * 2)
#define   DBM_WINDOW_SLOT_SIZE             (1024 * 128)
#define   DBM_WINDOW_KEY_SIZE              (128)


#define   DBM_DIC_PROC_TEXT_LEN            (4096)
#define   DBM_TOPIC                        "__DBM_TOPIC__"


typedef enum
{
    DBM_FUNCTION_TYPE_INVALID = 0,
    DBM_FUNCTION_TYPE_NE,
    DBM_FUNCTION_TYPE_EQ,
    DBM_FUNCTION_TYPE_LT,
    DBM_FUNCTION_TYPE_LE,
    DBM_FUNCTION_TYPE_GE,
    DBM_FUNCTION_TYPE_GT,
    DBM_FUNCTION_TYPE_LIKE,
    DBM_FUNCTION_TYPE_AND,
    DBM_FUNCTION_TYPE_OR,
    DBM_FUNCTION_TYPE_PLUS,
    DBM_FUNCTION_TYPE_MINUS,
    DBM_FUNCTION_TYPE_MULTIPLE,
    DBM_FUNCTION_TYPE_DIVIDE,
    DBM_FUNCTION_TYPE_COUNT,
    DBM_FUNCTION_TYPE_SUM,
    DBM_FUNCTION_TYPE_AVG,
    DBM_FUNCTION_TYPE_MINVAL,
    DBM_FUNCTION_TYPE_MAXVAL,
    DBM_FUNCTION_TYPE_SYSDATE,
    DBM_FUNCTION_TYPE_DUMP,
    DBM_FUNCTION_TYPE_CONCAT,
    DBM_FUNCTION_TYPE_ABS,
    DBM_FUNCTION_TYPE_MOD,
    DBM_FUNCTION_TYPE_CEIL,
    DBM_FUNCTION_TYPE_FLOOR,
    DBM_FUNCTION_TYPE_ROUND,
    DBM_FUNCTION_TYPE_TRUNC,
    DBM_FUNCTION_TYPE_SUBSTR,
    DBM_FUNCTION_TYPE_NEXTVAL,
    DBM_FUNCTION_TYPE_CURRVAL,
    DBM_FUNCTION_TYPE_IN,
    DBM_FUNCTION_TYPE_HEX,
    DBM_FUNCTION_TYPE_DIGEST,
    DBM_FUNCTION_TYPE_LENGTH,
    DBM_FUNCTION_TYPE_LPAD,
    DBM_FUNCTION_TYPE_RPAD,
    DBM_FUNCTION_TYPE_LTRIM,
    DBM_FUNCTION_TYPE_RTRIM,
    DBM_FUNCTION_TYPE_TRIM,
    DBM_FUNCTION_TYPE_DATETIME_STR,
    DBM_FUNCTION_TYPE_RANDOM,
    DBM_FUNCTION_TYPE_DECODE,
    DBM_FUNCTION_TYPE_UPPER,
    DBM_FUNCTION_TYPE_LOWER,
    DBM_FUNCTION_TYPE_NVL,
    DBM_FUNCTION_TYPE_TO_DATE,
    DBM_FUNCTION_TYPE_TO_TIMESTAMP,
    DBM_FUNCTION_TYPE_DATEDIFF,
    DBM_FUNCTION_TYPE_SESSION_ID,
    DBM_FUNCTION_TYPE_USERENV,
    DBM_FUNCTION_TYPE_JSON_ADD,
    DBM_FUNCTION_TYPE_JSON_DELETE,
    DBM_FUNCTION_TYPE_JSON_KEY,
    DBM_FUNCTION_TYPE_JSON_QUERY,
    DBM_FUNCTION_TYPE_JSON_STRING,
    DBM_FUNCTION_TYPE_JSON_VALUE,
    DBM_FUNCTION_TYPE_EMPTY_BLOB,
    DBM_FUNCTION_TYPE_EMPTY_CLOB,
    DBM_FUNCTION_TYPE_HEXTORAW,
    DBM_FUNCTION_TYPE_ISNULL,
    DBM_FUNCTION_TYPE_POWER,
    DBM_FUNCTION_TYPE_SQRT,
    DBM_FUNCTION_TYPE_EXP,
    DBM_FUNCTION_TYPE_LN,
    DBM_FUNCTION_TYPE_LOG,
    DBM_FUNCTION_TYPE_REPLACE,
    DBM_FUNCTION_TYPE_INSTR,
    DBM_FUNCTION_TYPE_EXTRACT,
    DBM_FUNCTION_TYPE_MAX
} dbmFunctionType;



typedef enum
{
    DBM_EXPR_TYPE_INVALID = 0,
    DBM_EXPR_TYPE_IDENTIFIER,
    DBM_EXPR_TYPE_CONSTANT,
    DBM_EXPR_TYPE_BUILT_FUNC,
    DBM_EXPR_TYPE_BIND_PARAM,
    DBM_EXPR_TYPE_PROC_PARAM,
    DBM_EXPR_TYPE_USER_LIBRARY_FUNCTION,
    DBM_EXPR_TYPE_NULL,
    DBM_EXPR_TYPE_MAX
} dbmExprType;



typedef enum
{
    DBM_QUE_COLUMN_TYPE,
    DBM_QUE_COLUMN_PRIORITY,
    DBM_QUE_COLUMN_ID,
    DBM_QUE_COLUMN_SIZE,
    DBM_QUE_COLUMN_INTIME,
    DBM_QUE_COLUMN_MSG,
    DBM_QUE_COLUMN_MAX
} dbmQueColumnID;





typedef enum
{
    DBM_DATA_TYPE_INVALID,
    DBM_DATA_TYPE_SHORT,
    DBM_DATA_TYPE_INT,
    DBM_DATA_TYPE_DOUBLE,
    DBM_DATA_TYPE_FLOAT,
    DBM_DATA_TYPE_LONG,
    DBM_DATA_TYPE_CHAR,
    DBM_DATA_TYPE_DATE,
    DBM_DATA_TYPE_ROWTYPE,
    DBM_DATA_TYPE_POINTER,
    DBM_DATA_TYPE_VAL_32,
    DBM_DATA_TYPE_VAL_64,
    DBM_DATA_TYPE_NULL,
    DBM_DATA_TYPE_MAX
} dbmDataType;


typedef enum
{
    DBM_SLOT_STAT_AVAILABLE = 0,
    DBM_SLOT_STAT_ALLOCATED,
    DBM_SLOT_STAT_TRY_FREE
} dbmSlotState;

 
typedef enum
{
    DBM_TRANS_INVALID = 0,
    DBM_TRANS_WORKING,
    DBM_TRANS_COMMIT_START,
    DBM_TRANS_COMMIT_COMPLETED,
    DBM_TRANS_ROLLBACK_COMPLETED,
    DBM_TRANS_ABNORMAL_ROLLBACK_COMPLETED,
    DBM_TRANS_UNLOCK_COMPLETED,
    DBM_TRANS_MAX
} dbmTransStat;



typedef enum
{
    DBM_STARTUP_NORMAL,
    DBM_STARTUP_FORCE
} dbmStartupMode;



typedef enum
{
    DBM_TABLE_TYPE_INVALID = 0,
    DBM_TABLE_TYPE_TABLE,
    DBM_TABLE_TYPE_QUEUE,
    DBM_TABLE_TYPE_SEQUENCE,
    DBM_TABLE_TYPE_DIRECT_TABLE,
    DBM_TABLE_TYPE_DIRECT_QUEUE,
    DBM_TABLE_TYPE_PERF_VIEW,
    DBM_TABLE_TYPE_MAX
} dbmTableType;


typedef enum
{
    DBM_ANCHOR_LOG_FILE_NO = 0,
    DBM_ANCHOR_CKPT_FILE_NO,
    DBM_ANCHOR_CAPTURE_FILE_NO,
    DBM_ACNHOR_MAX
} dbmLogAnchorMode;



typedef enum
{
    DBM_STAT_INVALID = 0,
    DBM_STAT_CONNECTED,
    DBM_STAT_DISCONNECT,
    DBM_STAT_STARTING,
    DBM_STAT_RUN,
    DBM_STAT_NORMAL_TERM,
    DBM_STAT_ABNORMAL_TERM,
    DBM_STAT_DIE,
    DBM_STAT_ERROR,
    DBM_STAT_MAX
} dbmThreadStat;


typedef enum
{
    DBM_PROP_INVALID = 0,
    DBM_PROP_INSTANCE,
    DBM_PROP_LOCK_INTERVAL,
    DBM_PROP_BATCH_ON,
    DBM_PROP_LISTEN_PORT,
    DBM_PROP_LISTEN_HB_PORT,
    DBM_PROP_LISTEN_HB_INTERVAL,
    DBM_PROP_LISTEN_CONN_TIMEOUT,
    DBM_PROP_LISTEN_RECV_TIMEOUT,
    DBM_PROP_DISK_LOG_ENABLE,
    DBM_PROP_DISK_COMMIT_WAIT,
    DBM_PROP_DISK_LOG_DIR,
    DBM_PROP_DISK_LOG_FILE_SIZE,
    DBM_PROP_DISK_DATA_FILE_DIR,
    DBM_PROP_REPL_ENABLE,
    DBM_PROP_REPL_TARGET_PRIMARY_IP,
    DBM_PROP_REPL_TARGET_SECONDARY_IP,
    DBM_PROP_REPL_TARGET_PORT,
    DBM_PROP_REPL_LISTEN_PORT,
    DBM_PROP_REPL_CONN_TIMEOUT,
    DBM_PROP_REPL_RECV_TIMEOUT,
    DBM_PROP_REPL_HB_TRY_COUNT,
    DBM_PROP_REPL_CONN_RETRY,
    DBM_PROP_REPL_ASYNC_DML,
    DBM_PROP_REPL_UNSENT_LOG_DIR,
    DBM_PROP_REPL_UNSENT_LOGFILE_SIZE,
    DBM_PROP_REPL_SEND_DDL_ENABLE,
    DBM_PROP_CAPTURE_ENABLE,
    DBM_PROP_CAPTURE_WORK_PATH,
    DBM_PROP_CAPTURE_WORK_INTERVAL,
    DBM_PROP_LOG_CACHE_MODE,
    DBM_PROP_LOG_CACHE_COUNT,
    DBM_PROP_LOG_CACHE_SIZE,
    DBM_PROP_LOG_CACHE_RANGE,
    DBM_PROP_LOG_CACHE_FLUSH_INTERVAL,
    DBM_PROP_LOG_CACHE_EMPTY_INTERVAL,
    DBM_PROP_ARCHIVE_ENABLE,
    DBM_PROP_ARCHIVE_PATH,
    DBM_PROP_DEQUEUE_LATENCY_ENABLE,
    DBM_PROP_AGING_INTERVAL,
    DBM_PROP_MVCC_ENABLE,
    DBM_PROP_TRACE_LOG_FOR_PBT,
    DBM_PROP_SPIN_LOCK_COUNT,
    DBM_PROP_MULTICAST_IP,
    DBM_PROP_MULTICAST_PORT,
    DBM_PROP_MULTICAST_RECV_TIMEOUT,
    DBM_PROP_MAX
} dbmPropId;


typedef enum
{
    DBM_READ_INVALID = 0,
    DBM_READ_VALID,           // = 1
    DBM_READ_NEED_AGING,
    DBM_READ_NOT_FOUND,
    DBM_READ_INVISIBLE_ROW,   
    DBM_READ_RETRY,           // = 5
    DBM_READ_KILLED,
    DBM_READ_ALREADY_READ,
    DBM_READ_MAX,                      
} dbmReadRecordType;


typedef enum
{
    DBM_COMPARE_INVALID = 0,
    DBM_COMPARE_GT,
    DBM_COMPARE_LT,
    DBM_COMPARE_EQ,
    DBM_COMPARE_NOT_EXIST,
    DBM_COMPARE_RETRY,
    DBM_COMPARE_NOT_CONT,
    DBM_COMPARE_MAX
} dbmCompareResult;


/**
 * 혹시 protocol이 변경되고 하위 호환성을 유지해야 하면
 * base 값을 1000 에서 2000으로 올리는 등으로 처리하면 될것 같음.
 * 혹시 하나의 type만 변경되면 DBM_TCP_CS_FREE_STMT2 등을 만들면 될것 같고..
 */
typedef enum
{
    DBM_TCP_INVALID = 0,
    DBM_TCP_CS_CONNECT_INFO,
    DBM_TCP_CS_GET_TABLE_INFO,
    DBM_TCP_CS_GET_ROW_SIZE,
    DBM_TCP_CS_PREPARE_STMT,
    DBM_TCP_CS_BIND_PARAM_ID_STMT,
    DBM_TCP_CS_BIND_PARAM_NAME_STMT,
    DBM_TCP_CS_BIND_COL_STMT,
    DBM_TCP_CS_EXECUTE_STMT,
    DBM_TCP_CS_FETCH_STMT,
    DBM_TCP_CS_FREE_STMT,
    DBM_TCP_CS_TABLE_DESC,
    DBM_TCP_CS_TABLE_LIST,
    DBM_TCP_CS_INSERT_ARRAY,
    DBM_TCP_CS_UPDATE_ARRAY,
    DBM_TCP_CS_SELECT_ARRAY,
    DBM_TCP_CS_SELECT_FOR_UPDATE_ARRAY,
    DBM_TCP_CS_DELETE_ARRAY,
    DBM_TCP_CS_INSERT_TABLE,
    DBM_TCP_CS_UPDATE_TABLE,
    DBM_TCP_CS_DELETE_TABLE,
    DBM_TCP_CS_SELECT_TABLE,
    DBM_TCP_CS_SELECT_FOR_UPDATE_TABLE,
    DBM_TCP_CS_SELECT_GT_TABLE,
    DBM_TCP_CS_SELECT_GT_FOR_UPDATE_TABLE,
    DBM_TCP_CS_SELECT_LT_TABLE,
    DBM_TCP_CS_SELECT_LT_FOR_UPDATE_TABLE,
    DBM_TCP_CS_FETCH_NEXT_GT,
    DBM_TCP_CS_FETCH_NEXT_LT,
    DBM_TCP_CS_ENQUEUE_TABLE,
    DBM_TCP_CS_DEQUEUE_TABLE,
    DBM_TCP_CS_COMMIT,
    DBM_TCP_CS_ROLLBACK,
    DBM_TCP_CS_SEQ_NEXTVAL,
    DBM_TCP_CS_SEQ_CURRVAL,
    DBM_TCP_CS_TABLE_USAGE,
    DBM_TCP_CS_BIND_COLUMN,
    DBM_TCP_CS_CLEAR_BIND,
    DBM_TCP_CS_UPDATE_BY_COLS,
    // for repl
    DBM_TCP_REPL_INVALID = 1000,
    DBM_TCP_REPL_HANDSHAKE,     // req, res
    DBM_TCP_REPL_LOG_CONTINUE,  // req
    DBM_TCP_REPL_LOG_END,       // req
    DBM_TCP_REPL_TRANS_LOG,     // res
    DBM_TCP_REPL_HB_TEST,       // res
    DBM_TCP_REPL_UNSENT,        // res
    DBM_TCP_REPL_FULL_SYNC,     // res
    // for Capture
    DBM_TCP_CAPTURE_INVALID = 2000,
    DBM_TCP_CAPTURE_DDL,
    DBM_TCP_CAPTURE_DDL_END,
    DBM_TCP_CAPTURE_TRANS,
    DBM_TCP_CAPTURE_LAST_LSN,
    DBM_TCP_CAPTURE_HANDSHAKE,
    DBM_TCP_MAX
} dbmTcpType;






typedef enum
{
    DBM_LOG_INVALID = 0,
    DBM_LOG_CREATE_INSTANCE,   // 1
    DBM_LOG_CREATE_TABLE,
    DBM_LOG_CREATE_QUEUE,
    DBM_LOG_CREATE_INDEX,      
    DBM_LOG_CREATE_PROCEDURE,  
    DBM_LOG_DROP_INSTANCE,     
    DBM_LOG_DROP_TABLE,
    DBM_LOG_DROP_INDEX,        
    DBM_LOG_DROP_PROCEDURE,    //10
    DBM_LOG_TRUNCATE,
    DBM_LOG_LOCK_ROW,          
    DBM_LOG_ALLOC_SLOT,        
    DBM_LOG_FREE_SLOT,         
    DBM_LOG_INSERT_INDEX_KEY,  
    DBM_LOG_DELETE_INDEX_KEY,
    DBM_LOG_INSERT_TABLE,      
    DBM_LOG_UPDATE_TABLE,      
    DBM_LOG_DELETE_TABLE,     
    DBM_LOG_ENQUEUE_TABLE,     //20 
    DBM_LOG_DEQUEUE_TABLE,
    DBM_LOG_COMMIT,            
    DBM_LOG_ROLLBACK,          
    DBM_LOG_REPL_UNSENT,       
    DBM_LOG_CREATE_SEQUENCE,   
    DBM_LOG_DROP_SEQUENCE,
    DBM_LOG_CREATE_REPLICATION,
    DBM_LOG_DROP_REPLICATION, 
    DBM_LOG_MOD_REPLICATION,
    DBM_LOG_ADD_TABLE_REPLICATION,
    DBM_LOG_DROP_TABLE_REPLICATION,
    DBM_LOG_ALTER_INSTANCE,       
    DBM_LOG_DELETE_TABLE_BY_REPL, //30
    DBM_LOG_CREATE_CAPTURE,
    DBM_LOG_DROP_CAPTURE,
    DBM_LOG_ALTER_TABLE_RENAME_COLUMN,
    DBM_LOG_ALTER_TABLE_COMPACT,
    DBM_LOG_ALTER_TABLE_ADD_COLUMN,
    DBM_LOG_ALTER_TABLE_DROP_COLUMN,
    DBM_LOG_REBUILD_INDEX,        
    DBM_LOG_SELECT_FOR_UPDATE,    
    DBM_LOG_UPDATE_VERSIONING,
    DBM_LOG_AGING_ROW,
    DBM_LOG_CREATE_LIBRARY,
    DBM_LOG_DROP_LIBRARY,        
    DBM_LOG_ALTER_AGING,
    DBM_LOG_ALTER_SESSION_TERM,
    DBM_LOG_MAX 
} dbmLogType;



typedef enum
{
    DBM_DIC_INDEX_BY_ORDER = 0,
    DBM_DIC_INDEX_BY_NAME,
    DBM_DIC_COLUMN_BY_ORDER,
    DBM_DIC_COLUMN_BY_NAME,
    DBM_DIC_INDEX_COLUMN_BY_ORDER,
    DBM_DIC_INDEX_COLUMN_BY_NAME
} dbmDicScanOpt;



typedef enum
{
    DBM_PLAN_INVALID = 0,
    DBM_PLAN_CREATE_INSTANCE,
    DBM_PLAN_CREATE_TABLE,
    DBM_PLAN_CREATE_QUEUE,
    DBM_PLAN_CREATE_INDEX,
    DBM_PLAN_CREATE_PROCEDURE,
    DBM_PLAN_CREATE_LIBRARY,
    DBM_PLAN_DROP_INSTANCE,
    DBM_PLAN_DROP_TABLE,
    DBM_PLAN_DROP_INDEX,
    DBM_PLAN_DROP_PROCEDURE,
    DBM_PLAN_DROP_LIBRARY,
    DBM_PLAN_TRUNCATE,
    DBM_PLAN_INSERT_STMT,
    DBM_PLAN_UPDATE_STMT,
    DBM_PLAN_DELETE_STMT,
    DBM_PLAN_SELECT_STMT,
    DBM_PLAN_ENQUEUE_STMT,
    DBM_PLAN_DEQUEUE_STMT,
    DBM_PLAN_LOAD_STMT,
    DBM_PLAN_SYNC_STMT,
    DBM_PLAN_EXEC_PROC_STMT,
    DBM_PLAN_PROC_BLOCK_STMT,
    DBM_PLAN_CREATE_REPLICATION,
    DBM_PLAN_DROP_REPLICATION,
    DBM_PLAN_ALTER_REPL_SYNC,
    DBM_PLAN_ALTER_REPL_MOD,
    DBM_PLAN_ALTER_RESET_PERF,
    DBM_PLAN_CREATE_SEQUENCE,
    DBM_PLAN_DROP_SEQUENCE,
    DBM_PLAN_ALTER_SEQUENCE,
    DBM_PLAN_ALTER_INSTANCE,
    DBM_PLAN_CREATE_CAPTURE,
    DBM_PLAN_DROP_CAPTURE,
    DBM_PLAN_ALTER_TABLE_RENAME_COLUMN,
    DBM_PLAN_ALTER_TABLE_COMPACT,
    DBM_PLAN_ALTER_TABLE_ADD_COLUMN,
    DBM_PLAN_ALTER_TABLE_DROP_COLUMN,
    DBM_PLAN_REBUILD_INDEX,
    DBM_PLAN_ALTER_SYSTEM_RESET_CKPT_FILENO,
    DBM_PLAN_CREATE_GSB_NODE,
    DBM_PLAN_DROP_GSB_NODE,
    DBM_PLAN_CREATE_GSB_MONITOR,
    DBM_PLAN_DROP_GSB_MONITOR,
    DBM_PLAN_CREATE_GSB_SVR_GRP,
    DBM_PLAN_DROP_GSB_SVR_GRP,
    DBM_PLAN_CREATE_GSB_SVR,
    DBM_PLAN_DROP_GSB_SVR,
    DBM_PLAN_CREATE_GSB_SVC,
    DBM_PLAN_DROP_GSB_SVC,
    DBM_PLAN_ALTER_GSB_PROC_CNT,
    DBM_PLAN_COMMIT,
    DBM_PLAN_ROLLBACK,
    DBM_PLAN_AGING_STMT,
    DBM_PLAN_SESSION_TERM_STMT,
    DBM_PLAN_MAX
} dbmPlanType;





typedef enum
{
    DBM_PROC_STMT_TYPE_INVALID = 0,
    DBM_PROC_STMT_TYPE_PUTLINE,
    DBM_PROC_STMT_TYPE_EXCEPTION_ITEM,
    DBM_PROC_STMT_TYPE_BLOCK,
    DBM_PROC_STMT_TYPE_NULL,
    DBM_PROC_STMT_TYPE_ASSIGN,
    DBM_PROC_STMT_TYPE_SELECT_INTO,
    DBM_PROC_STMT_TYPE_INSERT,
    DBM_PROC_STMT_TYPE_UPDATE,
    DBM_PROC_STMT_TYPE_DELETE,
    DBM_PROC_STMT_TYPE_IF,
    DBM_PROC_STMT_TYPE_EXIT,
    DBM_PROC_STMT_TYPE_CONTINUE,
    DBM_PROC_STMT_TYPE_LOOP,
    DBM_PROC_STMT_TYPE_SIMPLE_CASE,
    DBM_PROC_STMT_TYPE_SEARCH_CASE,
    DBM_PROC_STMT_TYPE_FOR_LOOP,
    DBM_PROC_STMT_TYPE_WHILE_LOOP,
    DBM_PROC_STMT_TYPE_GOTO,
    DBM_PROC_STMT_TYPE_OPEN_CURSOR,
    DBM_PROC_STMT_TYPE_FETCH_CURSOR,
    DBM_PROC_STMT_TYPE_CLOSE_CURSOR,
    DBM_PROC_STMT_TYPE_RAISE,
    DBM_PROC_STMT_TYPE_CALL_PROC,
    DBM_PROC_STMT_TYPE_COMMIT,
    DBM_PROC_STMT_TYPE_ROLLBACK,
    DBM_PROC_STMT_TYPE_MAX
} dbmProcStmtType;



typedef enum
{
    DBM_PROC_OBJ_INVALID = 0,
    DBM_PROC_OBJ_VARIABLE,
    DBM_PROC_OBJ_ELEMENT_VAR,
    DBM_PROC_OBJ_PARAM,
    DBM_PROC_OBJ_PARAM_ITEM,
    DBM_PROC_OBJ_MAX
} dbmProcObjectType;


typedef enum
{
    DBM_INDEX_WORK_INIT = 0,
    DBM_INDEX_WORK_WRITE_NODE,
    DBM_INDEX_WORK_SPLIT_NODE,
    DBM_INDEX_WORK_DELETE_NODE,
    DBM_INDEX_WORK_RELINK_NODE,
    DBM_INDEX_WORK_MAX
} dbmIndexWorkType;

typedef enum
{
    DBM_INDEX_MEMMOVE_INIT = 0,
    DBM_INDEX_MEMMOVE_START,
    DBM_INDEX_MEMMOVE_BACKUP,
    DBM_INDEX_MEMMOVE_COMPLETED,
    DBM_INDEX_MEMMOVE_MAX
} dbmIndexBackupStat;



typedef enum
{
    DBM_PARAM_TYPE_INIT = 0,
    DBM_PARAM_TYPE_IN,
    DBM_PARAM_TYPE_OUT,
    DBM_PARAM_TYPE_INOUT,
    DBM_PARAM_TYPE_MAX
} dbmParamInOutType;



typedef enum
{
    DBM_PROC_VAR_TYPE_INVALID = 0,
    DBM_PROC_VAR_TYPE_VAR,
    DBM_PROC_VAR_TYPE_SCALAR,
    DBM_PROC_VAR_TYPE_TYPE,
    DBM_PROC_VAR_TYPE_ROWTYPE,
    DBM_PROC_VAR_TYPE_CURSOR,
    DBM_PROC_VAR_TYPE_EXCEPTION,
    DBM_PROC_VAR_TYPE_EXCEPTION_INIT,
    DBM_PROC_VAR_TYPE_USER_DEFINE,
    DBM_PROC_VAR_TYPE_MAX
} dbmProcDeclareType;


typedef enum
{
    DBM_PROC_ATTR_TYPE_SQLCODE,
    DBM_PROC_ATTR_TYPE_SQLERRM,
    DBM_PROC_ATTR_TYPE_ISOPEN,
    DBM_PROC_ATTR_TYPE_FOUND,
    DBM_PROC_ATTR_TYPE_NOTFOUND,
    DBM_PROC_ATTR_TYPE_ROWCOUNT,
    DBM_PROC_ATTR_TYPE_MAX
} dbmProcAttrType;



typedef struct
{
    dbmProcAttrType      mType;
    dbmChar            * mName;
    dbmDataType          mDataType;
    dbmInt32             mSize;
} dbmProcAttrVariable;


typedef enum
{
    DBM_LOG_CACHE_NONE,
    DBM_LOG_CACHE_NVDIMM,
    DBM_LOG_CACHE_SHM,
    DBM_LOG_CACHE_MAX
} dbmLogCacheMode;


typedef enum
{
    DBM_VALUE_TYPE_INVALID,
    DBM_VALUE_TYPE_STRING,
    DBM_VALUE_TYPE_PATH,
    DBM_VALUE_TYPE_NUM,         // 4byte
    DBM_VALUE_TYPE_SIZE,        // 8byte
    DBM_VALUE_TYPE_BOOLEAN,     // 1byte
    DBM_VALUE_TYPE_BIT,         // 4byte
    DBM_VALUE_TYPE_MAX
} dbmPropValueType;

typedef enum 
{   
    DBM_LIST_ELEM_INVALID = 0, 
    DBM_LIST_ELEM_STRING, 
    DBM_LIST_ELEM_POINTER,
    DBM_LIST_ELEM_MAX
} dbmListElemType;


typedef enum
{
    DBM_PARSE_TYPE_INVALID = 0,
    DBM_PARSE_TYPE_IDENTIFIER,
    DBM_PARSE_TYPE_IDENTIFIER_LIST,
    DBM_PARSE_TYPE_BIND_PARAM,
    DBM_PARSE_TYPE_STRING,
    DBM_PARSE_TYPE_UINT,
    DBM_PARSE_TYPE_UNUM,
    DBM_PARSE_TYPE_DATA_TYPE_DEF,
    DBM_PARSE_TYPE_COLUMN_DEF,
    DBM_PARSE_TYPE_KEY_COLUMN_DEF,
    DBM_PARSE_TYPE_JSON_KEY_COLUMN_DEF,
    DBM_PARSE_TYPE_EXPR,
    DBM_PARSE_TYPE_FUNCTION,
    DBM_PARSE_TYPE_UPDATE_SET_ITEM,
    DBM_PARSE_TYPE_TABLE_SOURCE,
    DBM_PARSE_TYPE_CQ_SET,
    DBM_PARSE_TYPE_EXPIRE_OPTION,
    DBM_PARSE_TYPE_DECODE_ITEM,
    DBM_PARSE_TYPE_LIMIT_INFO,
    DBM_PARSE_TYPE_CREATE_INSTANCE_STMT,
    DBM_PARSE_TYPE_CREATE_TABLE_STMT,
    DBM_PARSE_TYPE_CREATE_QUEUE_STMT,
    DBM_PARSE_TYPE_CREATE_INDEX_STMT,
    DBM_PARSE_TYPE_CREATE_PROCEDURE_STMT,
    DBM_PARSE_TYPE_CREATE_LIBRARY_STMT,
    DBM_PARSE_TYPE_DROP_INSTANCE_STMT,
    DBM_PARSE_TYPE_DROP_TABLE_STMT,
    DBM_PARSE_TYPE_DROP_QUEUE_STMT,
    DBM_PARSE_TYPE_DROP_INDEX_STMT,
    DBM_PARSE_TYPE_DROP_PROCEDURE_STMT,
    DBM_PARSE_TYPE_DROP_LIBRARY_STMT,
    DBM_PARSE_TYPE_TRUNCATE_TABLE_STMT,
    DBM_PARSE_TYPE_TRUNCATE_QUEUE_STMT,
    DBM_PARSE_TYPE_INSERT_STMT,
    DBM_PARSE_TYPE_UPDATE_STMT,
    DBM_PARSE_TYPE_DELETE_STMT,
    DBM_PARSE_TYPE_SELECT_STMT,
    DBM_PARSE_TYPE_SELECT_INTO_STMT,
    DBM_PARSE_TYPE_ENQUEUE_STMT,
    DBM_PARSE_TYPE_DEQUEUE_STMT,
    DBM_PARSE_TYPE_LOAD_STMT,
    DBM_PARSE_TYPE_SYNC_STMT,
    DBM_PARSE_TYPE_EXEC_PROC_STMT,
    DBM_PARSE_TYPE_PROC_BLOCK_STMT,
    DBM_PARSE_TYPE_CREATE_REPL_STMT,
    DBM_PARSE_TYPE_DROP_REPL_STMT,
    DBM_PARSE_TYPE_ALTER_REPL_SYNC_STMT,
    DBM_PARSE_TYPE_ALTER_REPL_MOD_STMT,
    DBM_PARSE_TYPE_ALTER_RESET_PERF_STMT,
    DBM_PARSE_TYPE_CREATE_SEQUENCE_STMT,
    DBM_PARSE_TYPE_DROP_SEQUENCE_STMT,
    DBM_PARSE_TYPE_ALTER_SEQUENCE_STMT,
    DBM_PARSE_TYPE_ALTER_SYSTEM_INSTANCE_ACTIVE_STMT,
    DBM_PARSE_TYPE_CREATE_CAPTURE_STMT,
    DBM_PARSE_TYPE_DROP_CAPTURE_STMT,
    DBM_PARSE_TYPE_ALTER_TABLE_RENAME_COLUMN_STMT,
    DBM_PARSE_TYPE_ALTER_TABLE_COMPACT_STMT,
    DBM_PARSE_TYPE_ALTER_TABLE_ADD_COLUMN_STMT,
    DBM_PARSE_TYPE_ALTER_TABLE_DROP_COLUMN_STMT,
    DBM_PARSE_TYPE_REBUILD_INDEX_STMT,
    DBM_PARSE_TYPE_ALTER_SYSTEM_RESET_CKPT_FILE_STMT,
    DBM_PARSE_TYPE_PARAM_DEF,
    DBM_PARSE_TYPE_DECLARE_ITEM,
    DBM_PARSE_TYPE_PROC_STMT,
    DBM_PARSE_TYPE_PARAM_INOUT,
    DBM_PARSE_TYPE_PROC_DATA_TYPE_DEF,
    DBM_PARSE_TYPE_USER_LIBRARY_FUNCTION,
    DBM_PARSE_TYPE_CREATE_GSB_NODE,
    DBM_PARSE_TYPE_DROP_GSB_NODE,
    DBM_PARSE_TYPE_CREATE_GSB_MONITOR,
    DBM_PARSE_TYPE_DROP_GSB_MONITOR,
    DBM_PARSE_TYPE_CREATE_GSB_SVR_GRP,
    DBM_PARSE_TYPE_DROP_GSB_SVR_GRP,
    DBM_PARSE_TYPE_CREATE_GSB_SVR,
    DBM_PARSE_TYPE_DROP_GSB_SVR,
    DBM_PARSE_TYPE_CREATE_GSB_SVC,
    DBM_PARSE_TYPE_DROP_GSB_SVC,
    DBM_PARSE_TYPE_ALTER_GSB_PROC_CNT,
    DBM_PARSE_TYPE_COMMIT,
    DBM_PARSE_TYPE_ROLLBACK,
    DBM_PARSE_TYPE_AGING,
    DBM_PARSE_TYPE_ABNORMAL_RECOVERY,
    DBM_PARSE_TYPE_ABNORMAL_RECOVERY_COMMIT,
    DBM_PARSE_TYPE_INIT_HANDLE,
    DBM_PARSE_TYPE_FREE_HANDLE,
    DBM_PARSE_TYPE_PREPARE_OP,
    DBM_PARSE_TYPE_EXECUTE_OP,
    DBM_PARSE_TYPE_SPLIT_INDEX_OP,
    DBM_PARSE_TYPE_RETRY_LOCK_OP,
    DBM_PARSE_TYPE_ALTER_AGING_STMT,
    DBM_PARSE_TYPE_ALTER_SESSION_TERM_STMT,
    DBM_PARSE_TYPE_ORA_INSERT_STMT,
    DBM_PARSE_TYPE_ORA_UPDATE_STMT,
    DBM_PARSE_TYPE_ORA_DELETE_STMT,
    DBM_PARSE_TYPE_MAX
} dbmParseType;





typedef enum
{
    DBM_REPL_ACT_INVALID = 0,
    DBM_REPL_ACT_SYNC,
    DBM_REPL_ACT_RESET,
    DBM_REPL_ACT_LOCAL_SYNC,
    DBM_REPL_ACT_FULL_SYNC,
    DBM_REPL_ACT_MAX
} dbmReplActDef;



typedef enum
{
    DBM_PERF_VIEW_SESSION = 0,
    DBM_PERF_VIEW_INSTANCE,
    DBM_PERF_VIEW_TRANSACTION,
    DBM_PERF_VIEW_LOG_STAT,
    DBM_PERF_VIEW_REPL_STAT,
    DBM_PERF_VIEW_SYS_STAT,
    DBM_PERF_VIEW_SESS_STAT,
    DBM_PERF_VIEW_TABLE_USAGE,
    DBM_PERF_VIEW_MAX
} dbmPerfViewId;


#endif
